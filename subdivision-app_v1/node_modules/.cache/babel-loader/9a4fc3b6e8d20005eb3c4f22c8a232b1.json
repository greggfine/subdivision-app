{"ast":null,"code":"import { shuffle } from \"lodash\";\nimport notation1 from \"./notation/notation1.jpg\";\nimport notation2 from \"./notation/notation2.jpg\"; // const nums = [1, 2, 3, 4, 5];\n\nconst images = [notation1, notation2];\nexport const randomNumObj = arr => {\n  const result = {};\n  const shuffledArr = shuffle(arr);\n  console.log(shuffledArr);\n  result[\"correctAnswer\"] = shuffledArr[0];\n  result[\"wrongAnswer\"] = shuffledArr[1]; //   return {\n  //     correctAnswer: arr[0],\n  //     wrongAnswer: arr[1]\n  //   };\n\n  return result;\n};\nexport const questionReducer = (state = {\n  correctAnswer: notation1,\n  wrongAnswer: notation2\n}, action) => {\n  switch (action.type) {\n    case \"GET RANDOM QUESTION\":\n      return randomNumObj(images);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/src/reducers/questionReducer.js"],"names":["shuffle","notation1","notation2","images","randomNumObj","arr","result","shuffledArr","console","log","questionReducer","state","correctAnswer","wrongAnswer","action","type"],"mappings":"AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB,C,CACA;;AACA,MAAMC,MAAM,GAAG,CAACF,SAAD,EAAYC,SAAZ,CAAf;AAEA,OAAO,MAAME,YAAY,GAAGC,GAAG,IAAI;AACjC,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,WAAW,GAAGP,OAAO,CAACK,GAAD,CAA3B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAD,EAAAA,MAAM,CAAC,eAAD,CAAN,GAA0BC,WAAW,CAAC,CAAD,CAArC;AACAD,EAAAA,MAAM,CAAC,aAAD,CAAN,GAAwBC,WAAW,CAAC,CAAD,CAAnC,CALiC,CAMjC;AACA;AACA;AACA;;AACA,SAAOD,MAAP;AACD,CAXM;AAaP,OAAO,MAAMI,eAAe,GAAG,CAC7BC,KAAK,GAAG;AAAEC,EAAAA,aAAa,EAAEX,SAAjB;AAA4BY,EAAAA,WAAW,EAAEX;AAAzC,CADqB,EAE7BY,MAF6B,KAG1B;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AACE,aAAOX,YAAY,CAACD,MAAD,CAAnB;;AACF;AACE,aAAOQ,KAAP;AAJJ;AAMD,CAVM","sourcesContent":["import { shuffle } from \"lodash\";\nimport notation1 from \"./notation/notation1.jpg\";\nimport notation2 from \"./notation/notation2.jpg\";\n// const nums = [1, 2, 3, 4, 5];\nconst images = [notation1, notation2];\n\nexport const randomNumObj = arr => {\n  const result = {};\n  const shuffledArr = shuffle(arr);\n  console.log(shuffledArr);\n  result[\"correctAnswer\"] = shuffledArr[0];\n  result[\"wrongAnswer\"] = shuffledArr[1];\n  //   return {\n  //     correctAnswer: arr[0],\n  //     wrongAnswer: arr[1]\n  //   };\n  return result;\n};\n\nexport const questionReducer = (\n  state = { correctAnswer: notation1, wrongAnswer: notation2 },\n  action\n) => {\n  switch (action.type) {\n    case \"GET RANDOM QUESTION\":\n      return randomNumObj(images);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}