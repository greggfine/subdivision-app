{"ast":null,"code":"import notation1 from \"./notation/notation1.jpg\";\nimport notation2 from \"./notation/notation2.jpg\"; // const nums = [1, 2, 3, 4, 5];\n\nconst nums = [notation1, notation2];\nexport const randomNumObj = arr => {\n  const result = {};\n\n  let randNum = () => Math.ceil(Math.random() * arr.length);\n\n  result[\"correctAnswer\"] = nums[randNum()];\n  let randNum2 = nums[randNum()];\n\n  while (result[\"correctAnswer\"] === randNum2) {\n    randNum2 = nums[randNum()];\n  }\n\n  result[\"wrongAnswer\"] = randNum2;\n  return result;\n};\nexport const questionReducer = (state = {\n  correctAnswer: \"?\",\n  wrongAnswer: \"?\"\n}, action) => {\n  switch (action.type) {\n    case \"GET RANDOM QUESTION\":\n      return randomNumObj(nums);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/src/reducers/questionReducer.js"],"names":["notation1","notation2","nums","randomNumObj","arr","result","randNum","Math","ceil","random","length","randNum2","questionReducer","state","correctAnswer","wrongAnswer","action","type"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB,C,CACA;;AACA,MAAMC,IAAI,GAAG,CAACF,SAAD,EAAYC,SAAZ,CAAb;AAEA,OAAO,MAAME,YAAY,GAAGC,GAAG,IAAI;AACjC,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAIC,OAAO,GAAG,MAAMC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgBL,GAAG,CAACM,MAA9B,CAApB;;AACAL,EAAAA,MAAM,CAAC,eAAD,CAAN,GAA0BH,IAAI,CAACI,OAAO,EAAR,CAA9B;AACA,MAAIK,QAAQ,GAAGT,IAAI,CAACI,OAAO,EAAR,CAAnB;;AACA,SAAOD,MAAM,CAAC,eAAD,CAAN,KAA4BM,QAAnC,EAA6C;AAC3CA,IAAAA,QAAQ,GAAGT,IAAI,CAACI,OAAO,EAAR,CAAf;AACD;;AACDD,EAAAA,MAAM,CAAC,aAAD,CAAN,GAAwBM,QAAxB;AACA,SAAON,MAAP;AACD,CAVM;AAYP,OAAO,MAAMO,eAAe,GAAG,CAC7BC,KAAK,GAAG;AAAEC,EAAAA,aAAa,EAAE,GAAjB;AAAsBC,EAAAA,WAAW,EAAE;AAAnC,CADqB,EAE7BC,MAF6B,KAG1B;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AACE,aAAOd,YAAY,CAACD,IAAD,CAAnB;;AACF;AACE,aAAOW,KAAP;AAJJ;AAMD,CAVM","sourcesContent":["import notation1 from \"./notation/notation1.jpg\";\nimport notation2 from \"./notation/notation2.jpg\";\n// const nums = [1, 2, 3, 4, 5];\nconst nums = [notation1, notation2];\n\nexport const randomNumObj = arr => {\n  const result = {};\n  let randNum = () => Math.ceil(Math.random() * arr.length);\n  result[\"correctAnswer\"] = nums[randNum()];\n  let randNum2 = nums[randNum()];\n  while (result[\"correctAnswer\"] === randNum2) {\n    randNum2 = nums[randNum()];\n  }\n  result[\"wrongAnswer\"] = randNum2;\n  return result;\n};\n\nexport const questionReducer = (\n  state = { correctAnswer: \"?\", wrongAnswer: \"?\" },\n  action\n) => {\n  switch (action.type) {\n    case \"GET RANDOM QUESTION\":\n      return randomNumObj(nums);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}