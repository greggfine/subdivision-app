{"ast":null,"code":"import notation1 from \"./notation/notation1.jpg\";\nimport notation2 from \"./notation/notation2.jpg\"; // const nums = [1, 2, 3, 4, 5];\n\nconst images = [notation1, notation2];\nimport { shuffle } from \"lodash\";\nexport const randomNumObj = arr => {\n  const result = {};\n\n  let randNum = () => Math.ceil(Math.random() * arr.length);\n\n  result[\"correctAnswer\"] = images[randNum()];\n  let randNum2 = randNum();\n\n  while (result[\"correctAnswer\"] === arr[randNum2]) {\n    randNum2 = images[randNum()];\n  }\n\n  result[\"wrongAnswer\"] = images[randNum2];\n  return result;\n};\nexport const questionReducer = (state = {\n  correctAnswer: notation1,\n  wrongAnswer: notation2\n}, action) => {\n  switch (action.type) {\n    case \"GET RANDOM QUESTION\":\n      return randomNumObj(images);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/src/reducers/questionReducer.js"],"names":["notation1","notation2","images","shuffle","randomNumObj","arr","result","randNum","Math","ceil","random","length","randNum2","questionReducer","state","correctAnswer","wrongAnswer","action","type"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB,C,CACA;;AACA,MAAMC,MAAM,GAAG,CAACF,SAAD,EAAYC,SAAZ,CAAf;AACA,SAASE,OAAT,QAAwB,QAAxB;AAEA,OAAO,MAAMC,YAAY,GAAGC,GAAG,IAAI;AACjC,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAIC,OAAO,GAAG,MAAMC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgBL,GAAG,CAACM,MAA9B,CAApB;;AACAL,EAAAA,MAAM,CAAC,eAAD,CAAN,GAA0BJ,MAAM,CAACK,OAAO,EAAR,CAAhC;AACA,MAAIK,QAAQ,GAAGL,OAAO,EAAtB;;AACA,SAAOD,MAAM,CAAC,eAAD,CAAN,KAA4BD,GAAG,CAACO,QAAD,CAAtC,EAAkD;AAChDA,IAAAA,QAAQ,GAAGV,MAAM,CAACK,OAAO,EAAR,CAAjB;AACD;;AACDD,EAAAA,MAAM,CAAC,aAAD,CAAN,GAAwBJ,MAAM,CAACU,QAAD,CAA9B;AACA,SAAON,MAAP;AACD,CAVM;AAYP,OAAO,MAAMO,eAAe,GAAG,CAC7BC,KAAK,GAAG;AAAEC,EAAAA,aAAa,EAAEf,SAAjB;AAA4BgB,EAAAA,WAAW,EAAEf;AAAzC,CADqB,EAE7BgB,MAF6B,KAG1B;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AACE,aAAOd,YAAY,CAACF,MAAD,CAAnB;;AACF;AACE,aAAOY,KAAP;AAJJ;AAMD,CAVM","sourcesContent":["import notation1 from \"./notation/notation1.jpg\";\nimport notation2 from \"./notation/notation2.jpg\";\n// const nums = [1, 2, 3, 4, 5];\nconst images = [notation1, notation2];\nimport { shuffle } from \"lodash\";\n\nexport const randomNumObj = arr => {\n  const result = {};\n  let randNum = () => Math.ceil(Math.random() * arr.length);\n  result[\"correctAnswer\"] = images[randNum()];\n  let randNum2 = randNum();\n  while (result[\"correctAnswer\"] === arr[randNum2]) {\n    randNum2 = images[randNum()];\n  }\n  result[\"wrongAnswer\"] = images[randNum2];\n  return result;\n};\n\nexport const questionReducer = (\n  state = { correctAnswer: notation1, wrongAnswer: notation2 },\n  action\n) => {\n  switch (action.type) {\n    case \"GET RANDOM QUESTION\":\n      return randomNumObj(images);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}