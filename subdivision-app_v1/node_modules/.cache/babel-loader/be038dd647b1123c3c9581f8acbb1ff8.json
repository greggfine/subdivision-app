{"ast":null,"code":"import { shuffle } from \"lodash\";\nimport notation1 from \"./notation/notation1.jpg\";\nimport notation2 from \"./notation/notation2.jpg\"; // const nums = [1, 2, 3, 4, 5];\n\nconst images = [notation1, notation2];\nexport const randomNumObj = arr => {\n  //   const result = {};\n  shuffle(arr); //   result[\"correctAnswer\"] = arr[0];\n  //   result[\"wrongAnswer\"] = arr[1];\n\n  return {\n    correctAnswer: arr[0],\n    wrongAnswer: arr[1]\n  }; //   return result;\n};\nexport const questionReducer = (state = {\n  correctAnswer: notation1,\n  wrongAnswer: notation2\n}, action) => {\n  switch (action.type) {\n    case \"GET RANDOM QUESTION\":\n      return randomNumObj(images);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/src/reducers/questionReducer.js"],"names":["shuffle","notation1","notation2","images","randomNumObj","arr","correctAnswer","wrongAnswer","questionReducer","state","action","type"],"mappings":"AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB,C,CACA;;AACA,MAAMC,MAAM,GAAG,CAACF,SAAD,EAAYC,SAAZ,CAAf;AAEA,OAAO,MAAME,YAAY,GAAGC,GAAG,IAAI;AACjC;AACAL,EAAAA,OAAO,CAACK,GAAD,CAAP,CAFiC,CAGjC;AACA;;AACA,SAAO;AACLC,IAAAA,aAAa,EAAED,GAAG,CAAC,CAAD,CADb;AAELE,IAAAA,WAAW,EAAEF,GAAG,CAAC,CAAD;AAFX,GAAP,CALiC,CASjC;AACD,CAVM;AAYP,OAAO,MAAMG,eAAe,GAAG,CAC7BC,KAAK,GAAG;AAAEH,EAAAA,aAAa,EAAEL,SAAjB;AAA4BM,EAAAA,WAAW,EAAEL;AAAzC,CADqB,EAE7BQ,MAF6B,KAG1B;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AACE,aAAOP,YAAY,CAACD,MAAD,CAAnB;;AACF;AACE,aAAOM,KAAP;AAJJ;AAMD,CAVM","sourcesContent":["import { shuffle } from \"lodash\";\nimport notation1 from \"./notation/notation1.jpg\";\nimport notation2 from \"./notation/notation2.jpg\";\n// const nums = [1, 2, 3, 4, 5];\nconst images = [notation1, notation2];\n\nexport const randomNumObj = arr => {\n  //   const result = {};\n  shuffle(arr);\n  //   result[\"correctAnswer\"] = arr[0];\n  //   result[\"wrongAnswer\"] = arr[1];\n  return {\n    correctAnswer: arr[0],\n    wrongAnswer: arr[1]\n  };\n  //   return result;\n};\n\nexport const questionReducer = (\n  state = { correctAnswer: notation1, wrongAnswer: notation2 },\n  action\n) => {\n  switch (action.type) {\n    case \"GET RANDOM QUESTION\":\n      return randomNumObj(images);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}