{"ast":null,"code":"var _jsxFileName = \"/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Question.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRandQuestion } from \"../actions/getRandQuestionAction\";\nimport PropTypes from \"prop-types\";\nimport loop3 from \"../audio/loop3.mp3\";\n\nconst Question = ({\n  questions,\n  getRandQuestion,\n  playNext\n}) => {\n  return React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"?\"), window.setTimeout(() => {\n    return React.createElement(\"audio\", {\n      src: `${loop3}#t=00:00:${playNext.start},00:00:${playNext.stop}`,\n      autoPlay: true,\n      type: \"audio/mp3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }, 1000));\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    questions: state.questions,\n    playNext: state.playNext\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getRandQuestion\n})(Question);\nQuestion.propTypes = {\n  playNext: PropTypes.object\n};","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Question.jsx"],"names":["React","connect","getRandQuestion","PropTypes","loop3","Question","questions","playNext","window","setTimeout","start","stop","mapStateToProps","state","console","log","propTypes","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaJ,EAAAA,eAAb;AAA8BK,EAAAA;AAA9B,CAAD,KAA8C;AAC7D,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEGC,MAAM,CAACC,UAAP,CAAkB,MAAM;AACvB,WACE;AACE,MAAA,GAAG,EAAG,GAAEL,KAAM,YAAWG,QAAQ,CAACG,KAAM,UAASH,QAAQ,CAACI,IAAK,EADjE;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,IAAI,EAAC,WAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARA,EAQE,IARF,CAFH,CADF;AAcD,CAfD;;AAiBA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACLP,IAAAA,SAAS,EAAEO,KAAK,CAACP,SADZ;AAELC,IAAAA,QAAQ,EAAEM,KAAK,CAACN;AAFX,GAAP;AAID,CAND;;AAQA,eAAeN,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAA8CG,QAA9C,CAAf;AAEAA,QAAQ,CAACW,SAAT,GAAqB;AACnBT,EAAAA,QAAQ,EAAEJ,SAAS,CAACc;AADD,CAArB","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRandQuestion } from \"../actions/getRandQuestionAction\";\nimport PropTypes from \"prop-types\";\nimport loop3 from \"../audio/loop3.mp3\";\n\nconst Question = ({ questions, getRandQuestion, playNext }) => {\n  return (\n    <div className=\"question\">\n      <h1>?</h1>\n      {window.setTimeout(() => {\n        return (\n          <audio\n            src={`${loop3}#t=00:00:${playNext.start},00:00:${playNext.stop}`}\n            autoPlay\n            type=\"audio/mp3\"\n          ></audio>\n        );\n      }, 1000)}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    questions: state.questions,\n    playNext: state.playNext\n  };\n};\n\nexport default connect(mapStateToProps, { getRandQuestion })(Question);\n\nQuestion.propTypes = {\n  playNext: PropTypes.object\n};\n"]},"metadata":{},"sourceType":"module"}