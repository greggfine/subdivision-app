{"ast":null,"code":"/*\n\t----------------------------------------------------------\n\tutil/Request : 0.1.1 : 2015-07-12 : https://sketch.io\n\t----------------------------------------------------------\n\tXMLHttpRequest - IE7+ | Chrome 1+ | Firefox 1+ | Safari 1.2+\n\tCORS - IE10+ | Chrome 3+ | Firefox 3.5+ | Safari 4+\n\t----------------------------------------------------------\n\tgalactic.request({\n\t\turl: './dir/something.extension',\n\t\tdata: 'test!',\n\t\tformat: 'text', // text | xml | json\n\t\tresponseType: 'text', // arraybuffer | blob | document | json | text\n\t\theaders: {},\n\t\twithCredentials: true, // true | false\n\t\t///\n\t\tonerror: function(e) {\n\t\t\tconsole.log(e);\n\t\t},\n\t\tonsuccess: function(e, res) {\n\t\t\tconsole.log(res);\n\t\t},\n\t\tonprogress: function(e, progress) {\n\t\t\tprogress = Math.round(progress * 100);\n\t\t\tloader.create('thread', 'loading... ', progress);\n\t\t}\n\t});\n*/\nif (typeof galactic === 'undefined') galactic = {};\n\n(function (root) {\n  'use strict';\n\n  root.request = function (args, onsuccess, onerror, onprogress) {\n    if (typeof args === 'string') args = {\n      url: args\n    };\n    var data = args.data;\n    var url = args.url;\n    var method = args.method || (args.data ? 'POST' : 'GET');\n    var format = args.format;\n    var headers = args.headers;\n    var mimeType = args.mimeType;\n    var responseType = args.responseType;\n    var withCredentials = args.withCredentials || false;\n    var onprogress = onprogress || args.onprogress;\n    var onsuccess = onsuccess || args.onsuccess;\n    var onerror = onerror || args.onerror; ///\n\n    if (typeof NodeFS !== 'undefined' && root.loc.isLocalUrl(url)) {\n      NodeFS.readFile(url, 'utf8', function (err, res) {\n        if (err) {\n          onerror && onerror(err);\n        } else {\n          onsuccess && onsuccess({\n            responseText: res\n          }, res);\n        }\n      });\n    } else {\n      var xhr = new XMLHttpRequest();\n      xhr.open(method, url, true); ///\n\n      if (headers) {\n        for (var type in headers) {\n          xhr.setRequestHeader(type, headers[type]);\n        }\n      } else if (data) {\n        // set the default headers for POST\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n      }\n\n      if (mimeType) {\n        xhr.overrideMimeType(mimeType);\n      }\n\n      if (responseType) {\n        xhr.responseType = responseType;\n      }\n\n      if (withCredentials) {\n        xhr.withCredentials = true;\n      }\n\n      if (onerror && 'onerror' in xhr) {\n        xhr.onerror = onerror;\n      }\n\n      if (onprogress && xhr.upload && 'onprogress' in xhr.upload) {\n        if (data) {\n          // send\n          xhr.upload.onprogress = function (evt) {\n            onprogress.call(xhr, evt, event.loaded / event.total);\n          };\n        } else {\n          // receive\n          xhr.addEventListener('progress', function (evt) {\n            var totalBytes = 0;\n\n            if (evt.lengthComputable) {\n              totalBytes = evt.total;\n            } else if (xhr.totalBytes) {\n              totalBytes = xhr.totalBytes;\n            } else {\n              var rawBytes = parseInt(xhr.getResponseHeader('Content-Length-Raw'));\n\n              if (isFinite(rawBytes)) {\n                xhr.totalBytes = totalBytes = rawBytes;\n              } else {\n                return;\n              }\n            }\n\n            onprogress.call(xhr, evt, evt.loaded / totalBytes);\n          }, false);\n        }\n      } ///\n\n\n      xhr.onreadystatechange = function (evt) {\n        if (xhr.readyState === 4) {\n          // The request is complete\n          if (xhr.status === 200 || // Response OK\n          xhr.status === 304 || // Not Modified\n          xhr.status === 308 || // Permanent Redirect\n          xhr.status === 0 && !!window.top.cordova // Cordova quirk\n          ) {\n              if (onsuccess) {\n                var res;\n\n                if (format === 'json') {\n                  try {\n                    res = JSON.parse(evt.target.response);\n                  } catch (err) {\n                    onerror && onerror.call(xhr, evt);\n                  }\n                } else if (format === 'xml') {\n                  res = evt.target.responseXML;\n                } else if (format === 'text') {\n                  res = evt.target.responseText;\n                } else {\n                  res = evt.target.response;\n                } ///\n\n\n                onsuccess.call(xhr, evt, res);\n              }\n            } else {\n            onerror && onerror.call(xhr, evt);\n          }\n        }\n      }; ///\n\n\n      xhr.send(data); ///\n\n      return xhr;\n    }\n  };\n  /* NodeJS\n  ------------------------------------------------------ */\n\n\n  if (typeof module === 'object' && module.exports) {\n    //TODO-PER: to make it compile\t\tvar NodeFS = require('fs');\n    module.exports = root.request;\n  }\n})(galactic);","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/node_modules/midi/inc/dom/request_xhr.js"],"names":["galactic","root","request","args","onsuccess","onerror","onprogress","url","data","method","format","headers","mimeType","responseType","withCredentials","NodeFS","loc","isLocalUrl","readFile","err","res","responseText","xhr","XMLHttpRequest","open","type","setRequestHeader","overrideMimeType","upload","evt","call","event","loaded","total","addEventListener","totalBytes","lengthComputable","rawBytes","parseInt","getResponseHeader","isFinite","onreadystatechange","readyState","status","window","top","cordova","JSON","parse","target","response","responseXML","send","module","exports"],"mappings":"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","sourcesContent":["/*\n\t----------------------------------------------------------\n\tutil/Request : 0.1.1 : 2015-07-12 : https://sketch.io\n\t----------------------------------------------------------\n\tXMLHttpRequest - IE7+ | Chrome 1+ | Firefox 1+ | Safari 1.2+\n\tCORS - IE10+ | Chrome 3+ | Firefox 3.5+ | Safari 4+\n\t----------------------------------------------------------\n\tgalactic.request({\n\t\turl: './dir/something.extension',\n\t\tdata: 'test!',\n\t\tformat: 'text', // text | xml | json\n\t\tresponseType: 'text', // arraybuffer | blob | document | json | text\n\t\theaders: {},\n\t\twithCredentials: true, // true | false\n\t\t///\n\t\tonerror: function(e) {\n\t\t\tconsole.log(e);\n\t\t},\n\t\tonsuccess: function(e, res) {\n\t\t\tconsole.log(res);\n\t\t},\n\t\tonprogress: function(e, progress) {\n\t\t\tprogress = Math.round(progress * 100);\n\t\t\tloader.create('thread', 'loading... ', progress);\n\t\t}\n\t});\n*/\n\nif (typeof galactic === 'undefined') galactic = {};\n\n(function(root) { 'use strict';\n\n\troot.request = function(args, onsuccess, onerror, onprogress) {\n\t\tif (typeof args === 'string') args = {url: args};\n\t\tvar data = args.data;\n\t\tvar url = args.url;\n\t\tvar method = args.method || (args.data ? 'POST' : 'GET');\n\t\tvar format = args.format;\n\t\tvar headers = args.headers;\n\t\tvar mimeType = args.mimeType;\n\t\tvar responseType = args.responseType;\n\t\tvar withCredentials = args.withCredentials || false;\n\t\tvar onprogress = onprogress || args.onprogress;\n\t\tvar onsuccess = onsuccess || args.onsuccess;\n\t\tvar onerror = onerror || args.onerror;\n\t\t///\n\t\tif (typeof NodeFS !== 'undefined' && root.loc.isLocalUrl(url)) {\n\t\t\tNodeFS.readFile(url, 'utf8', function(err, res) {\n\t\t\t\tif (err) {\n\t\t\t\t\tonerror && onerror(err);\n\t\t\t\t} else {\n\t\t\t\t\tonsuccess && onsuccess({responseText: res}, res);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open(method, url, true);\n\t\t\t///\n\t\t\tif (headers) {\n\t\t\t\tfor (var type in headers) {\n\t\t\t\t\txhr.setRequestHeader(type, headers[type]);\n\t\t\t\t}\n\t\t\t} else if (data) { // set the default headers for POST\n\t\t\t\txhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n\t\t\t}\n\t\t\tif (mimeType) {\n\t\t\t\txhr.overrideMimeType(mimeType);\n\t\t\t}\n\t\t\tif (responseType) {\n\t\t\t\txhr.responseType = responseType;\n\t\t\t}\n\t\t\tif (withCredentials) {\n\t\t\t\txhr.withCredentials = true;\n\t\t\t}\n\t\t\tif (onerror && 'onerror' in xhr) {\n\t\t\t\txhr.onerror = onerror;\n\t\t\t}\n\t\t\tif (onprogress && xhr.upload && 'onprogress' in xhr.upload) {\n\t\t\t\tif (data) { // send\n\t\t\t\t\txhr.upload.onprogress = function(evt) {\n\t\t\t\t\t\tonprogress.call(xhr, evt, event.loaded / event.total);\n\t\t\t\t\t};\n\t\t\t\t} else { // receive\n\t\t\t\t\txhr.addEventListener('progress', function(evt) {\n\t\t\t\t\t\tvar totalBytes = 0;\n\t\t\t\t\t\tif (evt.lengthComputable) {\n\t\t\t\t\t\t\ttotalBytes = evt.total;\n\t\t\t\t\t\t} else if (xhr.totalBytes) {\n\t\t\t\t\t\t\ttotalBytes = xhr.totalBytes;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar rawBytes = parseInt(xhr.getResponseHeader('Content-Length-Raw'));\n\t\t\t\t\t\t\tif (isFinite(rawBytes)) {\n\t\t\t\t\t\t\t\txhr.totalBytes = totalBytes = rawBytes;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonprogress.call(xhr, evt, evt.loaded / totalBytes);\n\t\t\t\t\t}, false);\n\t\t\t\t}\n\t\t\t}\n\t\t\t///\n\t\t\txhr.onreadystatechange = function(evt) {\n\t\t\t\tif (xhr.readyState === 4) { // The request is complete\n\t\t\t\t\tif (xhr.status === 200 || // Response OK\n\t\t\t\t\t\txhr.status === 304 || // Not Modified\n\t\t\t\t\t\txhr.status === 308 || // Permanent Redirect\n\t\t\t\t\t\txhr.status === 0 && !!window.top.cordova // Cordova quirk\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (onsuccess) {\n\t\t\t\t\t\t\tvar res;\n\t\t\t\t\t\t\tif (format === 'json') {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tres = JSON.parse(evt.target.response);\n\t\t\t\t\t\t\t\t} catch(err) {\n\t\t\t\t\t\t\t\t\tonerror && onerror.call(xhr, evt);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (format === 'xml') {\n\t\t\t\t\t\t\t\tres = evt.target.responseXML;\n\t\t\t\t\t\t\t} else if (format === 'text') {\n\t\t\t\t\t\t\t\tres = evt.target.responseText;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tres = evt.target.response;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t///\n\t\t\t\t\t\t\tonsuccess.call(xhr, evt, res);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonerror && onerror.call(xhr, evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\t///\n\t\t\txhr.send(data);\n\t\t\t///\n\t\t\treturn xhr;\n\t\t}\n\t};\n\n\t/* NodeJS\n\t------------------------------------------------------ */\n\tif (typeof module === 'object' && module.exports) {\n//TODO-PER: to make it compile\t\tvar NodeFS = require('fs');\n\t\tmodule.exports = root.request;\n\t}\n\n})(galactic);"]},"metadata":{},"sourceType":"script"}