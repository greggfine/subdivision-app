{"ast":null,"code":"//    abc_midi_js_preparer.js: Create the structure that MIDI.js expects.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar Preparer;\n\n(function () {\n  \"use strict\";\n\n  Preparer = function () {\n    this.tempo = 0;\n    this.timeFactor = 0;\n    this.output = [];\n    this.currentChannel = 0;\n    this.currentInstrument = 0;\n    this.track = 0;\n    this.nextDuration = 0;\n    this.tracks = [[]];\n  };\n\n  Preparer.prototype.setInstrument = function (instrument) {\n    this.currentInstrument = instrument;\n    var ev = [{\n      ticksToEvent: 0,\n      track: this.track,\n      event: {\n        channel: this.currentChannel,\n        deltaTime: 0,\n        programNumber: this.currentInstrument,\n        subtype: 'programChange',\n        type: 'channel'\n      }\n    }, this.nextDuration * this.timeFactor];\n    this.tracks[this.track].push(ev);\n  };\n\n  Preparer.prototype.setChannel = function (channel) {\n    this.currentChannel = channel;\n  };\n\n  Preparer.prototype.startTrack = function () {\n    this.track++;\n    this.tracks[this.track] = [];\n    this.nextDuration = 0;\n  };\n\n  Preparer.prototype.setGlobalInfo = function (tempo, title) {\n    this.tempo = tempo;\n    var mspb = Math.round(1.0 / tempo * 60000000);\n    this.timeFactor = mspb / 480000;\n    var ev = [{\n      ticksToEvent: 0,\n      track: this.track,\n      event: {\n        deltaTime: 0,\n        microsecondsPerBeat: mspb,\n        subtype: 'setTempo',\n        type: 'meta'\n      }\n    }, this.nextDuration * this.timeFactor]; //\t\tthis.tracks[this.track].push(ev);\n\n    ev = [{\n      ticksToEvent: 0,\n      track: this.track,\n      event: {\n        deltaTime: 0,\n        subtype: 'trackName',\n        text: title,\n        type: 'meta'\n      }\n    }, this.nextDuration * this.timeFactor]; //\t\tthis.tracks[this.track].push(ev);\n\n    ev = [{\n      ticksToEvent: 0,\n      track: this.track,\n      event: {\n        deltaTime: 0,\n        subtype: 'endOfTrack',\n        type: 'meta'\n      }\n    }, this.nextDuration * this.timeFactor]; //\t\tthis.tracks[this.track].push(ev);\n  };\n\n  Preparer.prototype.startNote = function (pitch, volume) {\n    var deltaTime = Math.floor(this.nextDuration / 5) * 5;\n    var ev = [{\n      ticksToEvent: deltaTime,\n      track: this.track,\n      event: {\n        deltaTime: deltaTime,\n        channel: this.currentChannel,\n        type: \"channel\",\n        noteNumber: pitch,\n        velocity: volume,\n        subtype: \"noteOn\"\n      }\n    }, this.nextDuration * this.timeFactor];\n    this.tracks[this.track].push(ev);\n    this.nextDuration = 0;\n  };\n\n  Preparer.prototype.endNote = function (pitch) {\n    var deltaTime = Math.floor(this.nextDuration / 5) * 5;\n    var ev = [{\n      ticksToEvent: deltaTime,\n      track: this.track,\n      event: {\n        deltaTime: deltaTime,\n        channel: this.currentChannel,\n        type: \"channel\",\n        noteNumber: pitch,\n        velocity: 0,\n        subtype: \"noteOff\"\n      }\n    }, this.nextDuration * this.timeFactor];\n    this.tracks[this.track].push(ev);\n    this.nextDuration = 0;\n  };\n\n  Preparer.prototype.addRest = function (duration) {\n    this.nextDuration += duration;\n  };\n\n  Preparer.prototype.endTrack = function () {\n    var ev = [{\n      ticksToEvent: 0,\n      track: this.track,\n      event: {\n        deltaTime: 0,\n        type: \"meta\",\n        subtype: \"endOfTrack\"\n      }\n    }, 0]; //\t\tthis.tracks[this.track].push(ev);\n  };\n\n  function addAbsoluteTime(tracks) {\n    for (var i = 0; i < tracks.length; i++) {\n      var absTime = 0;\n\n      for (var j = 0; j < tracks[i].length; j++) {\n        absTime += tracks[i][j][1];\n        tracks[i][j].absTime = absTime;\n      }\n    }\n  }\n\n  function combineTracks(tracks) {\n    var output = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      for (var j = 0; j < tracks[i].length; j++) {\n        output.push(tracks[i][j]);\n      }\n    }\n\n    return output;\n  }\n\n  function sortTracks(output) {\n    return output.sort(function (a, b) {\n      if (a.absTime > b.absTime) return 1;\n      return -1;\n    });\n  }\n\n  function adjustTime(output) {\n    var lastTime = 0;\n\n    for (var i = 0; i < output.length; i++) {\n      var thisTime = output[i].absTime;\n      output[i][1] = thisTime - lastTime;\n      lastTime = thisTime;\n    }\n  }\n\n  function weaveTracks(tracks) {\n    // Each track has a progression of delta times. To combine them, first assign an absolute time to each event,\n    // then make one large track of all the tracks, sort it by absolute time, then adjust the amount of time each\n    // event causes time to move. That is, the movement was figured out as the distance from the last note in the track,\n    // but now we want the distance from the last note on ANY track.\n    addAbsoluteTime(tracks);\n    var output = combineTracks(tracks);\n    output = sortTracks(output);\n    adjustTime(output);\n    return output;\n  }\n\n  Preparer.prototype.getData = function () {\n    return weaveTracks(this.tracks);\n  };\n})();\n\nmodule.exports = Preparer;","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/node_modules/abcjs/src/midi/abc_midi_js_preparer.js"],"names":["Preparer","tempo","timeFactor","output","currentChannel","currentInstrument","track","nextDuration","tracks","prototype","setInstrument","instrument","ev","ticksToEvent","event","channel","deltaTime","programNumber","subtype","type","push","setChannel","startTrack","setGlobalInfo","title","mspb","Math","round","microsecondsPerBeat","text","startNote","pitch","volume","floor","noteNumber","velocity","endNote","addRest","duration","endTrack","addAbsoluteTime","i","length","absTime","j","combineTracks","sortTracks","sort","a","b","adjustTime","lastTime","thisTime","weaveTracks","getData","module","exports"],"mappings":"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","sourcesContent":["//    abc_midi_js_preparer.js: Create the structure that MIDI.js expects.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Preparer;\n\n(function() {\n\t\"use strict\";\n\n\tPreparer = function() {\n\t\tthis.tempo = 0;\n\t\tthis.timeFactor = 0;\n\t\tthis.output = [];\n\t\tthis.currentChannel = 0;\n\t\tthis.currentInstrument = 0;\n\t\tthis.track = 0;\n\t\tthis.nextDuration = 0;\n\t\tthis.tracks = [ [] ];\n\t};\n\n\tPreparer.prototype.setInstrument = function(instrument) {\n\t\tthis.currentInstrument = instrument;\n\n\t\tvar ev = [\n\t\t\t{\n\t\t\t\tticksToEvent: 0,\n\t\t\t\ttrack: this.track,\n\t\t\t\tevent: {\n\t\t\t\t\tchannel: this.currentChannel,\n\t\t\t\t\tdeltaTime: 0,\n\t\t\t\t\tprogramNumber: this.currentInstrument,\n\t\t\t\t\tsubtype: 'programChange',\n\t\t\t\t\ttype: 'channel'\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis.nextDuration * this.timeFactor\n\t\t];\n\t\tthis.tracks[this.track].push(ev);\n\t};\n\n\tPreparer.prototype.setChannel = function(channel) {\n\t\tthis.currentChannel = channel;\n\t};\n\n\tPreparer.prototype.startTrack = function() {\n\t\tthis.track++;\n\t\tthis.tracks[this.track] = [];\n\t\tthis.nextDuration = 0;\n\t};\n\n\tPreparer.prototype.setGlobalInfo = function(tempo, title) {\n\t\tthis.tempo = tempo;\n\t\tvar mspb = Math.round((1.0/tempo)*60000000);\n\t\tthis.timeFactor = mspb / 480000;\n\t\tvar ev = [\n\t\t\t{\n\t\t\t\tticksToEvent: 0,\n\t\t\t\ttrack: this.track,\n\t\t\t\tevent: {\n\t\t\t\t\tdeltaTime: 0,\n\t\t\t\t\tmicrosecondsPerBeat: mspb,\n\t\t\t\t\tsubtype: 'setTempo',\n\t\t\t\t\ttype: 'meta'\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis.nextDuration * this.timeFactor\n\t\t];\n//\t\tthis.tracks[this.track].push(ev);\n\n\t\tev = [\n\t\t\t{\n\t\t\t\tticksToEvent: 0,\n\t\t\t\ttrack: this.track,\n\t\t\t\tevent: {\n\t\t\t\t\tdeltaTime: 0,\n\t\t\t\t\tsubtype: 'trackName',\n\t\t\t\t\ttext: title,\n\t\t\t\t\ttype: 'meta'\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis.nextDuration * this.timeFactor\n\t\t];\n//\t\tthis.tracks[this.track].push(ev);\n\n\t\tev = [\n\t\t\t{\n\t\t\t\tticksToEvent: 0,\n\t\t\t\ttrack: this.track,\n\t\t\t\tevent: {\n\t\t\t\t\tdeltaTime: 0,\n\t\t\t\t\tsubtype: 'endOfTrack',\n\t\t\t\t\ttype: 'meta'\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis.nextDuration * this.timeFactor\n\t\t];\n//\t\tthis.tracks[this.track].push(ev);\n\t};\n\n\tPreparer.prototype.startNote = function(pitch, volume) {\n\t\tvar deltaTime = Math.floor(this.nextDuration / 5) * 5;\n\t\tvar ev = [\n\t\t\t{\n\t\t\t\tticksToEvent: deltaTime,\n\t\t\t\ttrack: this.track,\n\t\t\t\tevent: {\n\t\t\t\t\tdeltaTime: deltaTime,\n\t\t\t\t\tchannel: this.currentChannel,\n\t\t\t\t\ttype: \"channel\",\n\t\t\t\t\tnoteNumber: pitch,\n\t\t\t\t\tvelocity: volume,\n\t\t\t\t\tsubtype: \"noteOn\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis.nextDuration * this.timeFactor\n\t\t];\n\t\tthis.tracks[this.track].push(ev);\n\t\tthis.nextDuration = 0;\n\t};\n\n\tPreparer.prototype.endNote = function(pitch) {\n\t\tvar deltaTime = Math.floor(this.nextDuration / 5) * 5;\n\t\tvar ev = [\n\t\t\t{\n\t\t\t\tticksToEvent: deltaTime,\n\t\t\t\ttrack: this.track,\n\t\t\t\tevent: {\n\t\t\t\t\tdeltaTime: deltaTime,\n\t\t\t\t\tchannel: this.currentChannel,\n\t\t\t\t\ttype: \"channel\",\n\t\t\t\t\tnoteNumber: pitch,\n\t\t\t\t\tvelocity: 0,\n\t\t\t\t\tsubtype: \"noteOff\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis.nextDuration * this.timeFactor\n\t\t];\n\t\tthis.tracks[this.track].push(ev);\n\t\tthis.nextDuration = 0;\n\t};\n\n\tPreparer.prototype.addRest = function(duration) {\n\t\tthis.nextDuration += duration;\n\t};\n\n\tPreparer.prototype.endTrack = function() {\n\t\tvar ev = [\n\t\t\t{\n\t\t\t\tticksToEvent: 0,\n\t\t\t\ttrack: this.track,\n\t\t\t\tevent: {\n\t\t\t\t\tdeltaTime: 0,\n\t\t\t\t\ttype: \"meta\",\n\t\t\t\t\tsubtype: \"endOfTrack\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t0\n\t\t];\n//\t\tthis.tracks[this.track].push(ev);\n\t};\n\n\tfunction addAbsoluteTime(tracks) {\n\t\tfor (var i = 0; i < tracks.length; i++) {\n\t\t\tvar absTime = 0;\n\t\t\tfor (var j = 0; j < tracks[i].length; j++) {\n\t\t\t\tabsTime += tracks[i][j][1];\n\t\t\t\ttracks[i][j].absTime = absTime;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction combineTracks(tracks) {\n\t\tvar output = [];\n\t\tfor (var i = 0; i < tracks.length; i++) {\n\t\t\tfor (var j = 0; j < tracks[i].length; j++) {\n\t\t\t\toutput.push(tracks[i][j]);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction sortTracks(output) {\n\t\treturn output.sort(function(a,b) {\n\t\t\tif (a.absTime > b.absTime) return 1;\n\t\t\treturn -1;\n\t\t});\n\t}\n\n\tfunction adjustTime(output) {\n\t\tvar lastTime = 0;\n\t\tfor (var i = 0; i < output.length; i++) {\n\t\t\tvar thisTime = output[i].absTime;\n\t\t\toutput[i][1] = thisTime - lastTime;\n\t\t\tlastTime = thisTime;\n\t\t}\n\t}\n\n\tfunction weaveTracks(tracks) {\n\t\t// Each track has a progression of delta times. To combine them, first assign an absolute time to each event,\n\t\t// then make one large track of all the tracks, sort it by absolute time, then adjust the amount of time each\n\t\t// event causes time to move. That is, the movement was figured out as the distance from the last note in the track,\n\t\t// but now we want the distance from the last note on ANY track.\n\t\taddAbsoluteTime(tracks);\n\t\tvar output = combineTracks(tracks);\n\t\toutput = sortTracks(output);\n\t\tadjustTime(output);\n\t\treturn output;\n\t}\n\n\tPreparer.prototype.getData = function() {\n\t\treturn weaveTracks(this.tracks);\n\t};\n})();\n\nmodule.exports = Preparer;\n"]},"metadata":{},"sourceType":"script"}