{"ast":null,"code":"import { shuffle } from \"lodash\";\nconst startStopTimes = [{\n  start: \"00.00\",\n  stop: \"04.85\",\n  notation: \"X:1\\nM:4/4\\nL:1/8\\nK:perc\\n|:cccc cccc|\"\n}, {\n  start: \"05.00\",\n  stop: \"09.90\",\n  notation: \"X:1\\nM:4/4\\nL:1/8\\nK:perc\\n|:cc cc/c/ cccc|\"\n}, {\n  start: \"10.10\",\n  stop: \"15.10\",\n  notation: \"X:1\\nM:4/4\\nL:1/8\\nK:perc\\n|:c/c c c c/ cc c/c/c/c/|\"\n}, {\n  start: \"15.30\",\n  stop: \"20.30\",\n  notation: \"X:1\\nM:4/4\\nL:1/8\\nK:perc\\n|:  c c c c c c/c c/|\"\n}];\nconst shuffledStartStopTimes = shuffle(startStopTimes);\nlet count = 0;\nexport const playNextReducer = (state = shuffledStartStopTimes[count], action) => {\n  switch (action.type) {\n    case \"PLAY_NEXT\":\n      return shuffledStartStopTimes[count++];\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/reducers/playNextReducer.js"],"names":["shuffle","startStopTimes","start","stop","notation","shuffledStartStopTimes","count","playNextReducer","state","action","type"],"mappings":"AAAA,SAASA,OAAT,QAAwB,QAAxB;AAEA,MAAMC,cAAc,GAAG,CACrB;AACEC,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,QAAQ,EAAE;AAHZ,CADqB,EAMrB;AACEF,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,QAAQ,EAAE;AAHZ,CANqB,EAWrB;AACEF,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,QAAQ,EAAE;AAHZ,CAXqB,EAgBrB;AACEF,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,QAAQ,EAAE;AAHZ,CAhBqB,CAAvB;AAsBA,MAAMC,sBAAsB,GAAGL,OAAO,CAACC,cAAD,CAAtC;AAEA,IAAIK,KAAK,GAAG,CAAZ;AAEA,OAAO,MAAMC,eAAe,GAAG,CAC7BC,KAAK,GAAGH,sBAAsB,CAACC,KAAD,CADD,EAE7BG,MAF6B,KAG1B;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAOL,sBAAsB,CAACC,KAAK,EAAN,CAA7B;;AACF;AACE,aAAOE,KAAP;AAJJ;AAMD,CAVM","sourcesContent":["import { shuffle } from \"lodash\";\n\nconst startStopTimes = [\n  {\n    start: \"00.00\",\n    stop: \"04.85\",\n    notation: \"X:1\\nM:4/4\\nL:1/8\\nK:perc\\n|:cccc cccc|\"\n  },\n  {\n    start: \"05.00\",\n    stop: \"09.90\",\n    notation: \"X:1\\nM:4/4\\nL:1/8\\nK:perc\\n|:cc cc/c/ cccc|\"\n  },\n  {\n    start: \"10.10\",\n    stop: \"15.10\",\n    notation: \"X:1\\nM:4/4\\nL:1/8\\nK:perc\\n|:c/c c c c/ cc c/c/c/c/|\"\n  },\n  {\n    start: \"15.30\",\n    stop: \"20.30\",\n    notation: \"X:1\\nM:4/4\\nL:1/8\\nK:perc\\n|:  c c c c c c/c c/|\"\n  }\n];\nconst shuffledStartStopTimes = shuffle(startStopTimes);\n\nlet count = 0;\n\nexport const playNextReducer = (\n  state = shuffledStartStopTimes[count],\n  action\n) => {\n  switch (action.type) {\n    case \"PLAY_NEXT\":\n      return shuffledStartStopTimes[count++];\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}