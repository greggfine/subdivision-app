{"ast":null,"code":"var tunebook = require('./abc_tunebook');\n\nvar EngraverController = require('../write/abc_engraver_controller');\n\nvar resizeDivs = {};\n\nfunction resizeOuter() {\n  var width = window.innerWidth;\n\n  for (var id in resizeDivs) {\n    if (resizeDivs.hasOwnProperty(id)) {\n      var outer = resizeDivs[id];\n      var ofs = outer.offsetLeft;\n      width -= ofs * 2;\n      outer.style.width = width + \"px\";\n    }\n  }\n}\n\nwindow.addEventListener(\"resize\", resizeOuter);\nwindow.addEventListener(\"orientationChange\", resizeOuter);\n\nfunction renderOne(div, tune, params, tuneNumber) {\n  var width = params.width ? params.width : 800;\n\n  if (params.viewportHorizontal) {\n    // Create an inner div that holds the music, so that the passed in div will be the viewport.\n    div.innerHTML = '<div class=\"abcjs-inner\"></div>';\n\n    if (params.scrollHorizontal) {\n      div.style.overflowX = \"auto\";\n      div.style.overflowY = \"hidden\";\n    } else div.style.overflow = \"hidden\";\n\n    resizeDivs[div.id] = div; // We use a hash on the element's id so that multiple calls won't keep adding to the list.\n\n    div = div.children[0]; // The music should be rendered in the inner div.\n  } else if (params.viewportVertical) {\n    // Create an inner div that holds the music, so that the passed in div will be the viewport.\n    div.innerHTML = '<div class=\"abcjs-inner scroll-amount\"></div>';\n    div.style.overflowX = \"hidden\";\n    div.style.overflowY = \"auto\";\n    div = div.children[0]; // The music should be rendered in the inner div.\n  } else div.innerHTML = \"\";\n\n  var engraver_controller = new EngraverController(div, params);\n  engraver_controller.engraveABC(tune, tuneNumber);\n  tune.engraver = engraver_controller;\n\n  if (params.viewportVertical || params.viewportHorizontal) {\n    // If we added a wrapper around the div, then we need to size the wrapper, too.\n    var parent = div.parentNode;\n    parent.style.width = div.style.width;\n  }\n}\n\nfunction renderEachLineSeparately(div, tune, params, tuneNumber) {\n  function initializeTuneLine(tune) {\n    return {\n      formatting: tune.formatting,\n      media: tune.media,\n      version: tune.version,\n      metaText: {},\n      lines: []\n    };\n  } // Before rendering, chop up the returned tune into an array where each element is a line.\n  // The first element of the array gets the title and other items that go on top, the last element\n  // of the array gets the extra text that goes on bottom. Each element gets any non-music info that comes before it.\n\n\n  var tunes = [];\n  var tuneLine;\n\n  for (var i = 0; i < tune.lines.length; i++) {\n    var line = tune.lines[i];\n    if (!tuneLine) tuneLine = initializeTuneLine(tune);\n\n    if (i === 0) {\n      // These items go on top of the music\n      tuneLine.metaText.tempo = tune.metaText.tempo;\n      tuneLine.metaText.title = tune.metaText.title;\n      tuneLine.metaText.header = tune.metaText.header;\n      tuneLine.metaText.rhythm = tune.metaText.rhythm;\n      tuneLine.metaText.origin = tune.metaText.origin;\n      tuneLine.metaText.composer = tune.metaText.composer;\n      tuneLine.metaText.author = tune.metaText.author;\n      tuneLine.metaText.partOrder = tune.metaText.partOrder;\n    } // push the lines until we get to a music line\n\n\n    tuneLine.lines.push(line);\n\n    if (line.staff) {\n      tunes.push(tuneLine);\n      tuneLine = undefined;\n    }\n  } // Add any extra stuff to the last line.\n\n\n  if (tuneLine) {\n    var lastLine = tunes[tunes.length - 1];\n\n    for (var j = 0; j < tuneLine.lines.length; j++) lastLine.lines.push(tuneLine.lines[j]);\n  } // These items go below the music\n\n\n  tuneLine = tunes[tunes.length - 1];\n  tuneLine.metaText.unalignedWords = tune.metaText.unalignedWords;\n  tuneLine.metaText.book = tune.metaText.book;\n  tuneLine.metaText.source = tune.metaText.source;\n  tuneLine.metaText.discography = tune.metaText.discography;\n  tuneLine.metaText.notes = tune.metaText.notes;\n  tuneLine.metaText.transcription = tune.metaText.transcription;\n  tuneLine.metaText.history = tune.metaText.history;\n  tuneLine.metaText['abc-copyright'] = tune.metaText['abc-copyright'];\n  tuneLine.metaText['abc-creator'] = tune.metaText['abc-creator'];\n  tuneLine.metaText['abc-edited-by'] = tune.metaText['abc-edited-by'];\n  tuneLine.metaText.footer = tune.metaText.footer; // Now create sub-divs and render each line. Need to copy the params to change the padding for the interior slices.\n\n  var ep = {};\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      ep[key] = params[key];\n    }\n  }\n\n  var origPaddingTop = ep.paddingtop;\n  var origPaddingBottom = ep.paddingbottom;\n  div.innerHTML = \"\";\n\n  for (var k = 0; k < tunes.length; k++) {\n    var lineEl = document.createElement(\"div\");\n    div.appendChild(lineEl);\n\n    if (k === 0) {\n      ep.paddingtop = origPaddingTop;\n      ep.paddingbottom = -20;\n    } else if (k === tunes.length - 1) {\n      ep.paddingtop = 10;\n      ep.paddingbottom = origPaddingBottom;\n    } else {\n      ep.paddingtop = 10;\n      ep.paddingbottom = -20;\n    }\n\n    renderOne(lineEl, tunes[k], ep, tuneNumber);\n  }\n} // A quick way to render a tune from javascript when interactivity is not required.\n// This is used when a javascript routine has some abc text that it wants to render\n// in a div or collection of divs. One tune or many can be rendered.\n//\n// parameters:\n//      output: an array of divs that the individual tunes are rendered to.\n//          If the number of tunes exceeds the number of divs in the array, then\n//          only the first tunes are rendered. If the number of divs exceeds the number\n//          of tunes, then the unused divs are cleared. The divs can be passed as either\n//          elements or strings of ids. If ids are passed, then the div MUST exist already.\n//          (if a single element is passed, then it is an implied array of length one.)\n//          (if a null is passed for an element, or the element doesn't exist, then that tune is skipped.)\n//      abc: text representing a tune or an entire tune book in ABC notation.\n//      renderParams: hash of:\n//          startingTune: an index, starting at zero, representing which tune to start rendering at.\n//              (If this element is not present, then rendering starts at zero.)\n//          width: 800 by default. The width in pixels of the output paper\n\n\nvar renderAbc = function (output, abc, parserParams, engraverParams, renderParams) {\n  // Note: all parameters have been condensed into the first ones. It doesn't hurt anything to allow the old format, so just copy them here.\n  var params = {};\n  var key;\n\n  if (parserParams) {\n    for (key in parserParams) {\n      if (parserParams.hasOwnProperty(key)) {\n        params[key] = parserParams[key];\n      }\n    }\n  }\n\n  if (engraverParams) {\n    for (key in engraverParams) {\n      if (engraverParams.hasOwnProperty(key)) {\n        // There is a conflict with the name of the parameter \"listener\". If it is in the second parameter, then it is for click.\n        if (key === \"listener\") {\n          if (engraverParams[key].highlight) params.clickListener = engraverParams[key].highlight;\n        } else params[key] = engraverParams[key];\n      }\n    }\n  }\n\n  if (renderParams) {\n    for (key in renderParams) {\n      if (renderParams.hasOwnProperty(key)) {\n        params[key] = renderParams[key];\n      }\n    }\n  }\n\n  function callback(div, tune, tuneNumber) {\n    if (!params.oneSvgPerLine || tune.lines.length < 2) renderOne(div, tune, params, tuneNumber);else renderEachLineSeparately(div, tune, params, tuneNumber);\n  }\n\n  return tunebook.renderEngine(callback, output, abc, params);\n};\n\nmodule.exports = renderAbc;","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/node_modules/abcjs/src/api/abc_tunebook_svg.js"],"names":["tunebook","require","EngraverController","resizeDivs","resizeOuter","width","window","innerWidth","id","hasOwnProperty","outer","ofs","offsetLeft","style","addEventListener","renderOne","div","tune","params","tuneNumber","viewportHorizontal","innerHTML","scrollHorizontal","overflowX","overflowY","overflow","children","viewportVertical","engraver_controller","engraveABC","engraver","parent","parentNode","renderEachLineSeparately","initializeTuneLine","formatting","media","version","metaText","lines","tunes","tuneLine","i","length","line","tempo","title","header","rhythm","origin","composer","author","partOrder","push","staff","undefined","lastLine","j","unalignedWords","book","source","discography","notes","transcription","history","footer","ep","key","origPaddingTop","paddingtop","origPaddingBottom","paddingbottom","k","lineEl","document","createElement","appendChild","renderAbc","output","abc","parserParams","engraverParams","renderParams","highlight","clickListener","callback","oneSvgPerLine","renderEngine","module","exports"],"mappings":"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","sourcesContent":["var tunebook = require('./abc_tunebook');\n\nvar EngraverController = require('../write/abc_engraver_controller');\n\nvar resizeDivs = {};\nfunction resizeOuter() {\n    var width = window.innerWidth;\n    for (var id in resizeDivs) {\n        if (resizeDivs.hasOwnProperty(id)) {\n            var outer = resizeDivs[id];\n            var ofs = outer.offsetLeft;\n            width -= ofs * 2;\n            outer.style.width = width + \"px\";\n        }\n    }\n}\n\nwindow.addEventListener(\"resize\", resizeOuter);\nwindow.addEventListener(\"orientationChange\", resizeOuter);\n\nfunction renderOne(div, tune, params, tuneNumber) {\n    var width = params.width ? params.width : 800;\n    if (params.viewportHorizontal) {\n        // Create an inner div that holds the music, so that the passed in div will be the viewport.\n        div.innerHTML = '<div class=\"abcjs-inner\"></div>';\n        if (params.scrollHorizontal) {\n            div.style.overflowX = \"auto\";\n            div.style.overflowY = \"hidden\";\n        } else\n            div.style.overflow = \"hidden\";\n        resizeDivs[div.id] = div; // We use a hash on the element's id so that multiple calls won't keep adding to the list.\n        div = div.children[0]; // The music should be rendered in the inner div.\n    }\n    else if (params.viewportVertical) {\n        // Create an inner div that holds the music, so that the passed in div will be the viewport.\n        div.innerHTML = '<div class=\"abcjs-inner scroll-amount\"></div>';\n        div.style.overflowX = \"hidden\";\n        div.style.overflowY = \"auto\";\n        div = div.children[0]; // The music should be rendered in the inner div.\n    }\n    else\n\t    div.innerHTML = \"\";\n    var engraver_controller = new EngraverController(div, params);\n    engraver_controller.engraveABC(tune, tuneNumber);\n    tune.engraver = engraver_controller;\n    if (params.viewportVertical || params.viewportHorizontal) {\n        // If we added a wrapper around the div, then we need to size the wrapper, too.\n        var parent = div.parentNode;\n        parent.style.width = div.style.width;\n    }\n}\n\nfunction renderEachLineSeparately(div, tune, params, tuneNumber) {\n    function initializeTuneLine(tune) {\n        return {\n            formatting: tune.formatting,\n            media: tune.media,\n            version: tune.version,\n            metaText: {},\n            lines: []\n        };\n    }\n\n    // Before rendering, chop up the returned tune into an array where each element is a line.\n    // The first element of the array gets the title and other items that go on top, the last element\n    // of the array gets the extra text that goes on bottom. Each element gets any non-music info that comes before it.\n    var tunes = [];\n    var tuneLine;\n    for (var i = 0; i < tune.lines.length; i++) {\n        var line = tune.lines[i];\n        if (!tuneLine)\n            tuneLine = initializeTuneLine(tune);\n\n        if (i === 0) {\n            // These items go on top of the music\n            tuneLine.metaText.tempo = tune.metaText.tempo;\n            tuneLine.metaText.title = tune.metaText.title;\n            tuneLine.metaText.header = tune.metaText.header;\n            tuneLine.metaText.rhythm = tune.metaText.rhythm;\n            tuneLine.metaText.origin = tune.metaText.origin;\n            tuneLine.metaText.composer = tune.metaText.composer;\n            tuneLine.metaText.author = tune.metaText.author;\n            tuneLine.metaText.partOrder = tune.metaText.partOrder;\n        }\n\n        // push the lines until we get to a music line\n        tuneLine.lines.push(line);\n        if (line.staff) {\n            tunes.push(tuneLine);\n            tuneLine = undefined;\n        }\n    }\n    // Add any extra stuff to the last line.\n    if (tuneLine) {\n        var lastLine = tunes[tunes.length-1];\n        for (var j = 0; j < tuneLine.lines.length; j++)\n            lastLine.lines.push(tuneLine.lines[j]);\n    }\n\n    // These items go below the music\n    tuneLine = tunes[tunes.length-1];\n    tuneLine.metaText.unalignedWords = tune.metaText.unalignedWords;\n    tuneLine.metaText.book = tune.metaText.book;\n    tuneLine.metaText.source = tune.metaText.source;\n    tuneLine.metaText.discography = tune.metaText.discography;\n    tuneLine.metaText.notes = tune.metaText.notes;\n    tuneLine.metaText.transcription = tune.metaText.transcription;\n    tuneLine.metaText.history = tune.metaText.history;\n    tuneLine.metaText['abc-copyright'] = tune.metaText['abc-copyright'];\n    tuneLine.metaText['abc-creator'] = tune.metaText['abc-creator'];\n    tuneLine.metaText['abc-edited-by'] = tune.metaText['abc-edited-by'];\n    tuneLine.metaText.footer = tune.metaText.footer;\n\n    // Now create sub-divs and render each line. Need to copy the params to change the padding for the interior slices.\n    var ep = {};\n    for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n            ep[key] = params[key];\n        }\n    }\n    var origPaddingTop = ep.paddingtop;\n    var origPaddingBottom = ep.paddingbottom;\n    div.innerHTML = \"\";\n    for (var k = 0; k < tunes.length; k++) {\n        var lineEl = document.createElement(\"div\");\n        div.appendChild(lineEl);\n\n        if (k === 0) {\n\t        ep.paddingtop = origPaddingTop;\n\t        ep.paddingbottom = -20;\n        } else if (k === tunes.length-1) {\n\t        ep.paddingtop = 10;\n\t        ep.paddingbottom = origPaddingBottom;\n        } else {\n\t        ep.paddingtop = 10;\n\t        ep.paddingbottom = -20;\n        }\n        renderOne(lineEl, tunes[k], ep, tuneNumber);\n    }\n}\n\n// A quick way to render a tune from javascript when interactivity is not required.\n// This is used when a javascript routine has some abc text that it wants to render\n// in a div or collection of divs. One tune or many can be rendered.\n//\n// parameters:\n//      output: an array of divs that the individual tunes are rendered to.\n//          If the number of tunes exceeds the number of divs in the array, then\n//          only the first tunes are rendered. If the number of divs exceeds the number\n//          of tunes, then the unused divs are cleared. The divs can be passed as either\n//          elements or strings of ids. If ids are passed, then the div MUST exist already.\n//          (if a single element is passed, then it is an implied array of length one.)\n//          (if a null is passed for an element, or the element doesn't exist, then that tune is skipped.)\n//      abc: text representing a tune or an entire tune book in ABC notation.\n//      renderParams: hash of:\n//          startingTune: an index, starting at zero, representing which tune to start rendering at.\n//              (If this element is not present, then rendering starts at zero.)\n//          width: 800 by default. The width in pixels of the output paper\nvar renderAbc = function(output, abc, parserParams, engraverParams, renderParams) {\n    // Note: all parameters have been condensed into the first ones. It doesn't hurt anything to allow the old format, so just copy them here.\n    var params = {};\n    var key;\n    if (parserParams) {\n        for (key in parserParams) {\n            if (parserParams.hasOwnProperty(key)) {\n                params[key] = parserParams[key];\n            }\n        }\n    }\n    if (engraverParams) {\n        for (key in engraverParams) {\n            if (engraverParams.hasOwnProperty(key)) {\n\t            // There is a conflict with the name of the parameter \"listener\". If it is in the second parameter, then it is for click.\n\t            if (key === \"listener\") {\n\t            \tif (engraverParams[key].highlight)\n\t\t                params.clickListener = engraverParams[key].highlight;\n\t            } else\n                    params[key] = engraverParams[key];\n            }\n        }\n    }\n    if (renderParams) {\n        for (key in renderParams) {\n            if (renderParams.hasOwnProperty(key)) {\n                params[key] = renderParams[key];\n            }\n        }\n    }\n\n    function callback(div, tune, tuneNumber) {\n        if (!params.oneSvgPerLine || tune.lines.length < 2)\n            renderOne(div, tune, params, tuneNumber);\n        else\n            renderEachLineSeparately(div, tune, params, tuneNumber);\n    }\n\n    return tunebook.renderEngine(callback, output, abc, params);\n};\n\nmodule.exports = renderAbc;\n"]},"metadata":{},"sourceType":"script"}