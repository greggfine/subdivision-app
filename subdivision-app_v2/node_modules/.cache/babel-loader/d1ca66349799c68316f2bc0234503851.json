{"ast":null,"code":"/*\n\t----------------------------------------------------------\n\tMIDI/loader : 2015-12-22 : https://mudcu.be\n\t----------------------------------------------------------\n\thttps://github.com/mudcube/MIDI.js\n\t----------------------------------------------------------\n*/\nif (typeof MIDI === 'undefined') MIDI = {};\n\n(function (MIDI) {\n  'use strict';\n  /** globals **/\n\n  MIDI.DEBUG = false;\n  MIDI.USE_XHR = true;\n  MIDI.PATH = './soundfont/';\n\n  if (MIDI.DEBUG && console && console.log) {\n    console.log('%c♥ MIDI.js 0.4.2 ♥', 'color: red;');\n  }\n  /** priorities **/\n\n\n  var _adaptorPriority = {\n    'midiapi': 0,\n    'audioapi': 1,\n    'audio': 2\n  };\n  var _formatPriority = {\n    'ogg': 0,\n    'mp3': 1\n  };\n  /** setup **/\n\n  MIDI.setup = function (args) {\n    return new Promise(function (resolve, reject) {\n      args = args || {};\n      if (typeof args === 'function') args = {\n        onsuccess: args\n      };\n\n      if (isFinite(args.debug)) {\n        MIDI.DEBUG = !!args.debug;\n      }\n      /* custom paths */\n\n\n      if (args.soundfontUrl) {\n        MIDI.PATH = args.soundfontUrl;\n      }\n      /* choose adaptor */\n\n\n      AudioSupports().then(function (supports) {\n        if (chooseFormat()) {\n          chooseAdaptor();\n        } else {\n          reject({\n            message: 'MIDIJS: Browser does not have necessary audio support.'\n          });\n        }\n\n        function chooseFormat() {\n          /* empty object */\n          for (var key in MIDI.adaptor) {\n            delete MIDI.adaptor[key];\n          }\n          /* choose format based on priority */\n\n\n          for (var format in _formatPriority) {\n            if (supports[format]) {\n              MIDI.adaptor.format = format;\n              return true; // yay!...\n            }\n          }\n        }\n\n        function chooseAdaptor() {\n          if (supports[location.hash.substr(1)]) {\n            loadAdaptor(location.hash.substr(1));\n          } else if (supports.midi_api) {\n            loadAdaptor('midiapi');\n          } else if (window.AudioContext) {\n            loadAdaptor('audioapi');\n          } else if (window.Audio) {\n            loadAdaptor('Audio');\n          }\n        }\n\n        function loadAdaptor(tech) {\n          tech = tech.toLowerCase();\n          var format = MIDI.adaptor.format;\n          var canPlayThrough = supports[tech]; //\t\t\t\t\tconsole.log(\"loadAdaptor\", tech, format, canPlayThrough, supports);\n\n          if (!canPlayThrough[format]) {\n            handleError();\n            return;\n          }\n\n          args.tech = tech;\n          MIDI.loadProgram(args).then(function () {\n            resolve();\n          }).catch(function (err) {\n            MIDI.DEBUG && console.error(tech, err);\n            handleError(err);\n          });\n\n          function handleError(err) {\n            var idx = parseInt(_adaptorPriority[tech]) + 1;\n            var nextAdaptor = Object.keys(_adaptorPriority)[idx];\n\n            if (nextAdaptor) {\n              loadAdaptor(nextAdaptor);\n            } else {\n              reject && reject({\n                message: 'All plugins failed.'\n              });\n            }\n          }\n        }\n      }, reject);\n    });\n  };\n  /** loadProgram **/\n\n\n  MIDI.loadProgram = function (args) {\n    args || (args = {});\n    typeof args === 'object' || (args = {\n      instrument: args\n    });\n    args.instruments = instrumentList();\n    args.tech = args.tech || MIDI.adaptor.id;\n    return MIDI.adaptors._load(args);\n    /* helpers */\n\n    function instrumentList() {\n      var programs = args.instruments || args.instrument || MIDI.channels[0].program;\n\n      if (typeof programs === 'object') {\n        Array.isArray(programs) || (programs = Object.keys(programs));\n      } else {\n        if (programs === undefined) {\n          programs = [];\n        } else {\n          programs = [programs];\n        }\n      }\n      /* program number -> id */\n\n\n      for (var n = 0; n < programs.length; n++) {\n        var programId = programs[n];\n\n        if (programId >= 0) {\n          var program = MIDI.getProgram(programId);\n\n          if (program) {\n            programs[n] = program.nameId;\n          }\n        }\n      }\n\n      if (programs.length === 0) {\n        programs = ['acoustic_grand_piano'];\n      }\n\n      return programs;\n    }\n  };\n})(MIDI);","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/node_modules/midi/js/loader.js"],"names":["MIDI","DEBUG","USE_XHR","PATH","console","log","_adaptorPriority","_formatPriority","setup","args","Promise","resolve","reject","onsuccess","isFinite","debug","soundfontUrl","AudioSupports","then","supports","chooseFormat","chooseAdaptor","message","key","adaptor","format","location","hash","substr","loadAdaptor","midi_api","window","AudioContext","Audio","tech","toLowerCase","canPlayThrough","handleError","loadProgram","catch","err","error","idx","parseInt","nextAdaptor","Object","keys","instrument","instruments","instrumentList","id","adaptors","_load","programs","channels","program","Array","isArray","undefined","n","length","programId","getProgram","nameId"],"mappings":"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","sourcesContent":["/*\n\t----------------------------------------------------------\n\tMIDI/loader : 2015-12-22 : https://mudcu.be\n\t----------------------------------------------------------\n\thttps://github.com/mudcube/MIDI.js\n\t----------------------------------------------------------\n*/\n\nif (typeof MIDI === 'undefined') MIDI = {};\n\n(function (MIDI) { 'use strict';\n\n\n\t/** globals **/\n\tMIDI.DEBUG = false;\n\tMIDI.USE_XHR = true;\n\tMIDI.PATH = './soundfont/';\n\n\tif (MIDI.DEBUG && console && console.log) {\n\t\tconsole.log('%c♥ MIDI.js 0.4.2 ♥', 'color: red;');\n\t}\n\n\t/** priorities **/\n\tvar _adaptorPriority = {\n\t\t'midiapi': 0,\n\t\t'audioapi': 1,\n\t\t'audio': 2\n\t};\n\n\tvar _formatPriority = {\n\t\t'ogg': 0,\n\t\t'mp3': 1\n\t};\n\n\t/** setup **/\n\tMIDI.setup = function (args) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\targs = args || {};\n\t\t\tif (typeof args === 'function') args = {onsuccess: args};\n\n\t\t\tif (isFinite(args.debug)) {\n\t\t\t\tMIDI.DEBUG = !!args.debug;\n\t\t\t}\n\n\t\t\t/* custom paths */\n\t\t\tif (args.soundfontUrl) {\n\t\t\t\tMIDI.PATH = args.soundfontUrl;\n\t\t\t}\n\n\t\t\t/* choose adaptor */\n\t\t\tAudioSupports().then(function (supports) {\n\t\t\t\tif (chooseFormat()) {\n\t\t\t\t\tchooseAdaptor();\n\t\t\t\t} else {\n\t\t\t\t\treject({\n\t\t\t\t\t\tmessage: 'MIDIJS: Browser does not have necessary audio support.'\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfunction chooseFormat() {\n\n\t\t\t\t\t/* empty object */\n\t\t\t\t\tfor (var key in MIDI.adaptor) {\n\t\t\t\t\t\tdelete MIDI.adaptor[key];\n\t\t\t\t\t}\n\n\t\t\t\t\t/* choose format based on priority */\n\t\t\t\t\tfor (var format in _formatPriority) {\n\t\t\t\t\t\tif (supports[format]) {\n\t\t\t\t\t\t\tMIDI.adaptor.format = format;\n\t\t\t\t\t\t\treturn true; // yay!...\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction chooseAdaptor() {\n\t\t\t\t\tif (supports[location.hash.substr(1)]) {\n\t\t\t\t\t\tloadAdaptor(location.hash.substr(1));\n\t\t\t\t\t} else if (supports.midi_api) {\n\t\t\t\t\t\tloadAdaptor('midiapi');\n\t\t\t\t\t} else if (window.AudioContext) {\n\t\t\t\t\t\tloadAdaptor('audioapi');\n\t\t\t\t\t} else if (window.Audio) {\n\t\t\t\t\t\tloadAdaptor('Audio');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction loadAdaptor(tech) {\n\t\t\t\t\ttech = tech.toLowerCase();\n\t\t\t\t\tvar format = MIDI.adaptor.format;\n\t\t\t\t\tvar canPlayThrough = supports[tech];\n//\t\t\t\t\tconsole.log(\"loadAdaptor\", tech, format, canPlayThrough, supports);\n\t\t\t\t\tif (!canPlayThrough[format]) {\n\t\t\t\t\t\thandleError();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\targs.tech = tech;\n\n\t\t\t\t\tMIDI.loadProgram(args).then(function () {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}).catch(function (err) {\n\t\t\t\t\t\tMIDI.DEBUG && console.error(tech, err);\n\t\t\t\t\t\thandleError(err);\n\t\t\t\t\t});\n\n\t\t\t\t\tfunction handleError(err) {\n\t\t\t\t\t\tvar idx = parseInt(_adaptorPriority[tech]) + 1;\n\t\t\t\t\t\tvar nextAdaptor = Object.keys(_adaptorPriority)[idx];\n\t\t\t\t\t\tif (nextAdaptor) {\n\t\t\t\t\t\t\tloadAdaptor(nextAdaptor);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject && reject({\n\t\t\t\t\t\t\t\tmessage: 'All plugins failed.'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, reject);\n\t\t});\n\t};\n\n\n\t/** loadProgram **/\n\tMIDI.loadProgram = function (args) {\n\t\targs || (args = {});\n\t\ttypeof args === 'object' || (args = {instrument: args});\n\t\targs.instruments = instrumentList();\n\t\targs.tech = args.tech || MIDI.adaptor.id;\n\n\t\treturn MIDI.adaptors._load(args);\n\n\t\t/* helpers */\n\t\tfunction instrumentList() {\n\t\t\tvar programs = args.instruments || args.instrument || MIDI.channels[0].program;\n\t\t\tif (typeof programs === 'object') {\n\t\t\t\tArray.isArray(programs) || (programs = Object.keys(programs));\n\t\t\t} else {\n\t\t\t\tif (programs === undefined) {\n\t\t\t\t\tprograms = [];\n\t\t\t\t} else {\n\t\t\t\t\tprograms = [programs];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* program number -> id */\n\t\t\tfor (var n = 0; n < programs.length; n ++) {\n\t\t\t\tvar programId = programs[n];\n\t\t\t\tif (programId >= 0) {\n\t\t\t\t\tvar program = MIDI.getProgram(programId);\n\t\t\t\t\tif (program) {\n\t\t\t\t\t\tprograms[n] = program.nameId;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (programs.length === 0) {\n\t\t\t\tprograms = ['acoustic_grand_piano'];\n\t\t\t}\n\t\t\treturn programs;\n\t\t}\n\t};\n\n})(MIDI);"]},"metadata":{},"sourceType":"script"}