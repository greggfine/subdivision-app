{"ast":null,"code":"/*\n\t----------------------------------------------------------------------\n\tadaptors\n\t----------------------------------------------------------------------\n*/\nif (typeof MIDI === 'undefined') MIDI = {};\n\n(function (MIDI) {\n  'use strict';\n\n  var _adaptor = MIDI.adaptor = {};\n\n  var _adaptors = MIDI.adaptors = {};\n\n  var _requests = _adaptors._requests = {};\n\n  var _load = _adaptors._load = function (args) {\n    resetAdaptor();\n\n    if (args.tech === 'midiapi') {\n      return _adaptors.midiapi.connect(args);\n    } else {\n      return requestQueue(args);\n    }\n  };\n\n  function requestQueue(args) {\n    return new Promise(function (resolve, reject) {\n      var audioFormat = _adaptor.format.split('_').shift();\n\n      var programs = args.instruments;\n      var onprogress = args.onprogress;\n      var tech = args.tech;\n      var length = programs.length;\n\n      for (var i = 0; i < length; i++) {\n        var programId = programs[i];\n        var request = _requests[programId] || (_requests[programId] = {});\n\n        if (request.loaded) {\n          waitForEnd([programId]);\n        } else if (request.loading) {\n          request.queue.push(resolve);\n        } else {\n          request.queue = [resolve];\n          request.loading = true;\n          sendRequest(programId, audioFormat).then(function (pgm) {\n            waitForEnd(pgm);\n          }).catch(reject);\n        }\n      }\n\n      function emitProgress(progress, programId) {\n        if (emitProgress.progress !== progress) {\n          emitProgress.progress = progress;\n          onprogress && onprogress('load', progress, programId);\n        }\n      }\n\n      function waitForEnd(pgm) {\n        _requests[pgm].loading = false;\n        var pending = false;\n\n        for (var key in _requests) {\n          if (_requests.hasOwnProperty(key)) {\n            if (_requests[key].loading) {\n              pending = true;\n            }\n          }\n        }\n\n        if (!pending) {\n          emitProgress(1.0);\n\n          _adaptors[tech].connect(args).then(function () {\n            programs.forEach(function (programId) {\n              var request = _requests[programId];\n              var cb;\n\n              while (cb = request.queue.pop()) {\n                cb();\n              }\n            });\n          }).catch(reject);\n        }\n      }\n    });\n\n    function sendRequest(programId, audioFormat, onprogress) {\n      return new Promise(function (resolve, reject) {\n        var soundfontPath = MIDI.PATH + programId + '-' + audioFormat + '.js';\n\n        if (MIDI.USE_XHR) {\n          galactic.request({\n            url: soundfontPath,\n            format: 'text',\n            onerror: reject,\n            onprogress: onprogress,\n            onsuccess: function (event, responseText) {\n              var script = document.createElement('script');\n              script.language = 'javascript';\n              script.type = 'text/javascript';\n              script.text = responseText;\n              document.body.appendChild(script);\n              resolve(programId);\n            }\n          });\n        } else {\n          dom.loadScript.add({\n            url: soundfontPath,\n            verify: 'MIDI.Soundfont[\"' + programId + '\"]',\n            onerror: reject,\n            onsuccess: resolve\n          });\n        }\n      });\n    }\n  }\n\n  ;\n  /* resetAdaptor */\n\n  function resetAdaptor() {\n    /* currentTime */\n    (function () {\n      var _now = performance.now();\n\n      Object.defineProperties(MIDI, {\n        'currentTime': {\n          configurable: true,\n          get: function () {\n            return performance.now() - _now;\n          }\n        }\n      });\n    })();\n    /* set */\n\n\n    MIDI.set = function (property, value, delay) {\n      if (delay) {\n        return setTimeout(function () {\n          MIDI[property] = value;\n        }, delay * 1000);\n      } else {\n        MIDI[property] = value;\n      }\n    };\n    /** programChange **/\n\n\n    MIDI.messageHandler = {};\n\n    MIDI.programChange = function (channelId, programId, delay) {\n      var program = MIDI.getProgram(programId);\n\n      if (program && Number.isFinite(programId = program.id)) {\n        var channel = MIDI.channels[channelId];\n\n        if (channel && channel.program !== programId) {\n          if (delay) {\n            setTimeout(function () {\n              //- is there a better option?\n              channel.program = programId;\n            }, delay);\n          } else {\n            channel.program = programId;\n          }\n\n          var wrapper = MIDI.messageHandler.program || programHandler;\n\n          if (wrapper) {\n            wrapper(channelId, programId, delay);\n          }\n        }\n      }\n    };\n\n    function programHandler(channelId, program, delay) {\n      if (MIDI.adaptor.id) {\n        if (MIDI.player.playing) {\n          MIDI.loadProgram(program).then(MIDI.player.start);\n        } else {\n          MIDI.loadProgram(program);\n        }\n      }\n    }\n    /* globals */\n\n\n    Object.defineProperties(MIDI, {\n      'context': set(null),\n      'detune': set('detune', 0),\n      'fx': set('fx', null),\n      'mute': set('mute', false),\n      'volume': set('volume', 1.0)\n    });\n\n    function set(_type, _value) {\n      return {\n        configurable: true,\n        get: function () {\n          return _value;\n        },\n        set: function (value) {\n          _value = value;\n          handleError(_type);\n        }\n      };\n    }\n    /* functions */\n\n\n    MIDI.send = handleErrorWrapper('send');\n    MIDI.noteOn = handleErrorWrapper('noteOn');\n    MIDI.noteOff = handleErrorWrapper('noteOff');\n    MIDI.cancelNotes = handleErrorWrapper('cancelNotes');\n    MIDI.setController = handleErrorWrapper('setController'); //- depreciate\n\n    MIDI.setEffects = handleErrorWrapper('setEffects'); //- depreciate\n\n    MIDI.setPitchBend = handleErrorWrapper('setPitchBend'); //- depreciate\n\n    MIDI.setProperty = handleErrorWrapper('setProperty');\n    MIDI.setVolume = handleErrorWrapper('setVolume'); //- depreciate\n\n    MIDI.iOSUnlock = handleErrorWrapper('iOSUnlock');\n    /* helpers */\n\n    function handleError(_type) {\n      MIDI.DEBUG && console.warn('The ' + _adaptor.id + ' adaptor does not support \"' + _type + '\".');\n    }\n\n    function handleErrorWrapper(_type) {\n      return function () {\n        handleError(_type);\n      };\n    }\n  }\n\n  resetAdaptor();\n})(MIDI);","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/node_modules/midi/js/adaptors.js"],"names":["MIDI","_adaptor","adaptor","_adaptors","adaptors","_requests","_load","args","resetAdaptor","tech","midiapi","connect","requestQueue","Promise","resolve","reject","audioFormat","format","split","shift","programs","instruments","onprogress","length","i","programId","request","loaded","waitForEnd","loading","queue","push","sendRequest","then","pgm","catch","emitProgress","progress","pending","key","hasOwnProperty","forEach","cb","pop","soundfontPath","PATH","USE_XHR","galactic","url","onerror","onsuccess","event","responseText","script","document","createElement","language","type","text","body","appendChild","dom","loadScript","add","verify","_now","performance","now","Object","defineProperties","configurable","get","set","property","value","delay","setTimeout","messageHandler","programChange","channelId","program","getProgram","Number","isFinite","id","channel","channels","wrapper","programHandler","player","playing","loadProgram","start","_type","_value","handleError","send","handleErrorWrapper","noteOn","noteOff","cancelNotes","setController","setEffects","setPitchBend","setProperty","setVolume","iOSUnlock","DEBUG","console","warn"],"mappings":"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","sourcesContent":["/*\n\t----------------------------------------------------------------------\n\tadaptors\n\t----------------------------------------------------------------------\n*/\n\nif (typeof MIDI === 'undefined') MIDI = {};\n\n(function (MIDI) { 'use strict';\n\n\tvar _adaptor = MIDI.adaptor = {};\n\tvar _adaptors = MIDI.adaptors = {};\n\tvar _requests = _adaptors._requests = {};\n\tvar _load = _adaptors._load = function (args) {\n\t\tresetAdaptor();\n\t\tif (args.tech === 'midiapi') {\n\t\t\treturn _adaptors.midiapi.connect(args);\n\t\t} else {\n\t\t\treturn requestQueue(args);\n\t\t}\n\t};\n\n\tfunction requestQueue(args) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tvar audioFormat = _adaptor.format.split('_').shift();\n\t\t\tvar programs = args.instruments;\n\t\t\tvar onprogress = args.onprogress;\n\t\t\tvar tech = args.tech;\n\t\t\t\n\t\t\tvar length = programs.length;\n\n\t\t\tfor (var i = 0; i < length; i ++) {\n\t\t\t\tvar programId = programs[i];\n\t\t\t\tvar request = _requests[programId] || (_requests[programId] = {});\n\n\t\t\t\tif (request.loaded) {\n\t\t\t\t\twaitForEnd([programId]);\n\t\t\t\t} else if (request.loading) {\n\t\t\t\t\trequest.queue.push(resolve);\n\t\t\t\t} else {\n\t\t\t\t\trequest.queue = [resolve];\n\t\t\t\t\trequest.loading = true;\n\n\t\t\t\t\tsendRequest(programId, audioFormat).then(function (pgm) {\n\t\t\t\t\t\twaitForEnd(pgm);\n\t\t\t\t\t}).catch(reject);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction emitProgress(progress, programId) {\n\t\t\t\tif (emitProgress.progress !== progress) {\n\t\t\t\t\temitProgress.progress = progress;\n\t\t\t\t\tonprogress && onprogress('load', progress, programId);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction waitForEnd(pgm) {\n\t\t\t\t_requests[pgm].loading = false;\n\t\t\t\tvar pending = false;\n\t\t\t\tfor (var key in _requests) {\n\t\t\t\t\tif (_requests.hasOwnProperty(key)) {\n\t\t\t\t\t\tif (_requests[key].loading) {\n\t\t\t\t\t\t\tpending = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!pending) {\n\t\t\t\t\temitProgress(1.0);\n\t\t\t\t\t_adaptors[tech].connect(args).then(function () {\n\t\t\t\t\t\tprograms.forEach(function (programId) {\n\t\t\t\t\t\t\tvar request = _requests[programId];\n\t\t\t\t\t\t\tvar cb;\n\t\t\t\t\t\t\twhile(cb = request.queue.pop()) {\n\t\t\t\t\t\t\t\tcb();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}).catch(reject);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tfunction sendRequest(programId, audioFormat, onprogress) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tvar soundfontPath = MIDI.PATH + programId + '-' + audioFormat + '.js';\n\t\t\t\tif (MIDI.USE_XHR) {\n\t\t\t\t\tgalactic.request({\n\t\t\t\t\t\turl: soundfontPath,\n\t\t\t\t\t\tformat: 'text',\n\t\t\t\t\t\tonerror: reject,\n\t\t\t\t\t\tonprogress: onprogress,\n\t\t\t\t\t\tonsuccess: function (event, responseText) {\n\t\t\t\t\t\t\tvar script = document.createElement('script');\n\t\t\t\t\t\t\tscript.language = 'javascript';\n\t\t\t\t\t\t\tscript.type = 'text/javascript';\n\t\t\t\t\t\t\tscript.text = responseText;\n\t\t\t\t\t\t\tdocument.body.appendChild(script);\n\t\t\t\t\t\t\tresolve(programId);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tdom.loadScript.add({\n\t\t\t\t\t\turl: soundfontPath,\n\t\t\t\t\t\tverify: 'MIDI.Soundfont[\"' + programId + '\"]',\n\t\t\t\t\t\tonerror: reject,\n\t\t\t\t\t\tonsuccess: resolve\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\n\t/* resetAdaptor */\n\tfunction resetAdaptor() {\n\n\t\t/* currentTime */\n\t\t(function () {\n\t\t\tvar _now = performance.now();\n\t\t\tObject.defineProperties(MIDI, {\n\t\t\t\t'currentTime': {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn performance.now() - _now;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t})();\n\n\n\t\t/* set */\n\t\tMIDI.set = function (property, value, delay) {\n\t\t\tif (delay) {\n\t\t\t\treturn setTimeout(function () {\n\t\t\t\t\tMIDI[property] = value;\n\t\t\t\t}, delay * 1000);\n\t\t\t} else {\n\t\t\t\tMIDI[property] = value;\n\t\t\t}\n\t\t};\n\n\n\t\t/** programChange **/\n\t\tMIDI.messageHandler = {};\n\t\tMIDI.programChange = function (channelId, programId, delay) {\n\t\t\tvar program = MIDI.getProgram(programId);\n\t\t\tif (program && Number.isFinite(programId = program.id)) {\n\t\t\t\tvar channel = MIDI.channels[channelId];\n\t\t\t\tif (channel && channel.program !== programId) {\n\t\t\t\t\tif (delay) {\n\t\t\t\t\t\tsetTimeout(function () { //- is there a better option?\n\t\t\t\t\t\t\tchannel.program = programId;\n\t\t\t\t\t\t}, delay);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchannel.program = programId;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar wrapper = MIDI.messageHandler.program || programHandler;\n\t\t\t\t\tif (wrapper) {\n\t\t\t\t\t\twrapper(channelId, programId, delay);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tfunction programHandler(channelId, program, delay) {\n\t\t\tif (MIDI.adaptor.id) {\n\t\t\t\tif (MIDI.player.playing) {\n\t\t\t\t\tMIDI.loadProgram(program).then(MIDI.player.start);\n\t\t\t\t} else {\n\t\t\t\t\tMIDI.loadProgram(program);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t/* globals */\n\t\tObject.defineProperties(MIDI, {\n\t\t\t'context': set(null),\n\t\t\t'detune': set('detune', 0),\n\t\t\t'fx': set('fx', null),\n\t\t\t'mute': set('mute', false),\n\t\t\t'volume': set('volume', 1.0)\n\t\t});\n\t\t\n\t\tfunction set(_type, _value) {\n\t\t\treturn {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function () {\n\t\t\t\t\treturn _value;\n\t\t\t\t},\n\t\t\t\tset: function (value) {\n\t\t\t\t\t_value = value;\n\t\t\t\t\thandleError(_type);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\n\t\t/* functions */\n\t\tMIDI.send = handleErrorWrapper('send');\n\t\tMIDI.noteOn = handleErrorWrapper('noteOn');\n\t\tMIDI.noteOff = handleErrorWrapper('noteOff');\n\t\tMIDI.cancelNotes = handleErrorWrapper('cancelNotes');\n\t\t\n\t\tMIDI.setController = handleErrorWrapper('setController'); //- depreciate\n\t\tMIDI.setEffects = handleErrorWrapper('setEffects'); //- depreciate\n\t\tMIDI.setPitchBend = handleErrorWrapper('setPitchBend'); //- depreciate\n\t\tMIDI.setProperty = handleErrorWrapper('setProperty');\n\t\tMIDI.setVolume = handleErrorWrapper('setVolume'); //- depreciate\n\t\t\n\t\tMIDI.iOSUnlock = handleErrorWrapper('iOSUnlock');\n\t\t\n\t\t/* helpers */\n\t\tfunction handleError(_type) {\n\t\t\tMIDI.DEBUG && console.warn('The ' + _adaptor.id + ' adaptor does not support \"' + _type + '\".');\n\t\t}\n\n\t\tfunction handleErrorWrapper(_type) {\n\t\t\treturn function () {\n\t\t\t\thandleError(_type);\n\t\t\t};\n\t\t}\n\t}\n\t\n\tresetAdaptor();\n\t\n})(MIDI);"]},"metadata":{},"sourceType":"script"}