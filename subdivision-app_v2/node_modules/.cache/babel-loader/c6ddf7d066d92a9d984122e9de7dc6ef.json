{"ast":null,"code":"/*\n\t----------------------------------------------------------\n\tchannels : 2015-10-18\n\t----------------------------------------------------------\n*/\nif (typeof MIDI === 'undefined') MIDI = {};\n\n(function (MIDI) {\n  'use strict';\n\n  MIDI.channels = function (channels) {\n    for (var i = 0; i <= 15; i++) {\n      addChannel(i);\n    }\n\n    return channels;\n\n    function addChannel(channelId) {\n      var channel = channels[channelId] = {};\n\n      channel.noteOn = function (noteId, velocity, delay) {\n        return MIDI.noteOn(channelId, noteId, velocity, delay);\n      };\n\n      channel.noteOff = function (noteId, delay) {\n        return MIDI.noteOff(channelId, noteId, delay);\n      };\n\n      channel.cancelNotes = function () {\n        return MIDI.cancelNotes(channelId);\n      };\n\n      channel.set = function () {};\n\n      Object.defineProperties(channel, {\n        id: {\n          value: i,\n          enumerable: true,\n          writable: true\n        },\n        program: {\n          value: i,\n          enumerable: true,\n          writable: true\n        },\n        volume: set('number', 'volume', 1.0),\n        mute: set('boolean', 'volume', false),\n        mono: set('boolean', '*', false),\n        omni: set('boolean', '*', false),\n        solo: set('boolean', '*', false),\n        detune: set('number', 'detune', 0),\n        fx: set('object', 'fx', null)\n      });\n\n      function set(_typeof, _type, _value) {\n        return {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return _value;\n          },\n          set: function (value) {\n            if (typeof value === _typeof) {\n              _value = value;\n              MIDI.setProperty(_type, channelId);\n            }\n          }\n        };\n      }\n\n      ;\n    }\n\n    ;\n  }({});\n})(MIDI);","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/node_modules/midi/js/channels.js"],"names":["MIDI","channels","i","addChannel","channelId","channel","noteOn","noteId","velocity","delay","noteOff","cancelNotes","set","Object","defineProperties","id","value","enumerable","writable","program","volume","mute","mono","omni","solo","detune","fx","_typeof","_type","_value","configurable","get","setProperty"],"mappings":"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","sourcesContent":["/*\n\t----------------------------------------------------------\n\tchannels : 2015-10-18\n\t----------------------------------------------------------\n*/\n\nif (typeof MIDI === 'undefined') MIDI = {};\n\n(function (MIDI) { 'use strict';\n\n\tMIDI.channels = (function (channels) {\n\t\tfor (var i = 0; i <= 15; i++) {\n\t\t\taddChannel(i);\n\t\t}\n\t\t\n\t\treturn channels;\n\t\t\n\t\tfunction addChannel(channelId) {\n\n\t\t\tvar channel = channels[channelId] = {};\n\n\t\t\tchannel.noteOn = function (noteId, velocity, delay) {\n\t\t\t\treturn MIDI.noteOn(channelId, noteId, velocity, delay);\n\t\t\t};\n\t\t\t\n\t\t\tchannel.noteOff = function (noteId, delay) {\n\t\t\t\treturn MIDI.noteOff(channelId, noteId, delay);\n\t\t\t};\n\t\t\t\n\t\t\tchannel.cancelNotes = function () {\n\t\t\t\treturn MIDI.cancelNotes(channelId);\n\t\t\t};\n\t\t\t\n\t\t\tchannel.set = function () {\n\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\tObject.defineProperties(channel, {\n\t\t\t\tid: {\n\t\t\t\t\tvalue: i,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\twritable: true\n\t\t\t\t},\n\t\t\t\tprogram: {\n\t\t\t\t\tvalue: i,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\twritable: true\n\t\t\t\t},\n\t\t\t\tvolume: set('number', 'volume', 1.0),\n\t\t\t\tmute: set('boolean', 'volume', false),\n\t\t\t\tmono: set('boolean', '*', false),\n\t\t\t\tomni: set('boolean', '*', false),\n\t\t\t\tsolo: set('boolean', '*', false),\n\t\t\t\tdetune: set('number', 'detune', 0),\n\t\t\t\tfx: set('object', 'fx', null)\n\t\t\t});\n\t\t\t\n\t\t\tfunction set(_typeof, _type, _value) {\n\t\t\t\treturn {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn _value;\n\t\t\t\t\t},\n\t\t\t\t\tset: function (value) {\n\t\t\t\t\t\tif (typeof value === _typeof) {\n\t\t\t\t\t\t\t_value = value;\n\t\t\t\t\t\t\tMIDI.setProperty(_type, channelId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t})({});\n\n})(MIDI);"]},"metadata":{},"sourceType":"script"}