{"ast":null,"code":"/*\n\t----------------------------------------------------------\n\tGM : 2015-10-18\n\t----------------------------------------------------------\n*/\nif (typeof MIDI === 'undefined') MIDI = {};\n\n(function (MIDI) {\n  'use strict';\n  /** getProgram **/\n\n  MIDI.getProgram = function (program) {\n    if (typeof program === 'string') {\n      return MIDI.getProgram.byName[asId(program)];\n    } else {\n      return MIDI.getProgram.byId[program];\n    }\n  };\n\n  function asId(name) {\n    return name.replace(/[^a-z0-9_ ]/gi, '').replace(/[ ]/g, '_').toLowerCase();\n  }\n\n  ;\n\n  (function (categories) {\n    var GM = MIDI.GM = {};\n    var byId = MIDI.getProgram.byId = {};\n    var byName = MIDI.getProgram.byName = {};\n\n    for (var category in categories) {\n      var programs = categories[category];\n\n      for (var i = 0, length = programs.length; i < length; i++) {\n        var program = programs[i];\n\n        if (program) {\n          var id = parseInt(program.substr(0, program.indexOf(' ')), 10);\n          var name = program.replace(id + ' ', '');\n          var nameId = asId(name);\n          var categoryId = asId(category);\n          var res = {\n            id: --id,\n            name: name,\n            nameId: nameId,\n            category: category\n          };\n          byId[id] = res;\n          byName[nameId] = res;\n          GM[categoryId] = GM[categoryId] || [];\n          GM[categoryId].push(res);\n        }\n      }\n    }\n  })({\n    'Piano': ['1 Acoustic Grand Piano', '2 Bright Acoustic Piano', '3 Electric Grand Piano', '4 Honky-tonk Piano', '5 Electric Piano 1', '6 Electric Piano 2', '7 Harpsichord', '8 Clavinet'],\n    'Chromatic Percussion': ['9 Celesta', '10 Glockenspiel', '11 Music Box', '12 Vibraphone', '13 Marimba', '14 Xylophone', '15 Tubular Bells', '16 Dulcimer'],\n    'Organ': ['17 Drawbar Organ', '18 Percussive Organ', '19 Rock Organ', '20 Church Organ', '21 Reed Organ', '22 Accordion', '23 Harmonica', '24 Tango Accordion'],\n    'Guitar': ['25 Acoustic Guitar (nylon)', '26 Acoustic Guitar (steel)', '27 Electric Guitar (jazz)', '28 Electric Guitar (clean)', '29 Electric Guitar (muted)', '30 Overdriven Guitar', '31 Distortion Guitar', '32 Guitar Harmonics'],\n    'Bass': ['33 Acoustic Bass', '34 Electric Bass (finger)', '35 Electric Bass (pick)', '36 Fretless Bass', '37 Slap Bass 1', '38 Slap Bass 2', '39 Synth Bass 1', '40 Synth Bass 2'],\n    'Strings': ['41 Violin', '42 Viola', '43 Cello', '44 Contrabass', '45 Tremolo Strings', '46 Pizzicato Strings', '47 Orchestral Harp', '48 Timpani'],\n    'Ensemble': ['49 String Ensemble 1', '50 String Ensemble 2', '51 Synth Strings 1', '52 Synth Strings 2', '53 Choir Aahs', '54 Voice Oohs', '55 Synth Choir', '56 Orchestra Hit'],\n    'Brass': ['57 Trumpet', '58 Trombone', '59 Tuba', '60 Muted Trumpet', '61 French Horn', '62 Brass Section', '63 Synth Brass 1', '64 Synth Brass 2'],\n    'Reed': ['65 Soprano Sax', '66 Alto Sax', '67 Tenor Sax', '68 Baritone Sax', '69 Oboe', '70 English Horn', '71 Bassoon', '72 Clarinet'],\n    'Pipe': ['73 Piccolo', '74 Flute', '75 Recorder', '76 Pan Flute', '77 Blown Bottle', '78 Shakuhachi', '79 Whistle', '80 Ocarina'],\n    'Synth Lead': ['81 Lead 1 (square)', '82 Lead 2 (sawtooth)', '83 Lead 3 (calliope)', '84 Lead 4 (chiff)', '85 Lead 5 (charang)', '86 Lead 6 (voice)', '87 Lead 7 (fifths)', '88 Lead 8 (bass + lead)'],\n    'Synth Pad': ['89 Pad 1 (new age)', '90 Pad 2 (warm)', '91 Pad 3 (polysynth)', '92 Pad 4 (choir)', '93 Pad 5 (bowed)', '94 Pad 6 (metallic)', '95 Pad 7 (halo)', '96 Pad 8 (sweep)'],\n    'Synth Effects': ['97 FX 1 (rain)', '98 FX 2 (soundtrack)', '99 FX 3 (crystal)', '100 FX 4 (atmosphere)', '101 FX 5 (brightness)', '102 FX 6 (goblins)', '103 FX 7 (echoes)', '104 FX 8 (sci-fi)'],\n    'Ethnic': ['105 Sitar', '106 Banjo', '107 Shamisen', '108 Koto', '109 Kalimba', '110 Bagpipe', '111 Fiddle', '112 Shanai'],\n    'Percussive': ['113 Tinkle Bell', '114 Agogo', '115 Steel Drums', '116 Woodblock', '117 Taiko Drum', '118 Melodic Tom', '119 Synth Drum', '129 Percussion'],\n    'Sound effects': ['120 Reverse Cymbal', '121 Guitar Fret Noise', '122 Breath Noise', '123 Seashore', '124 Bird Tweet', '125 Telephone Ring', '126 Helicopter', '127 Applause', '128 Gunshot']\n  });\n  /** conversions **/\n\n\n  (function () {\n    var A0 = 0x15; // first note\n\n    var C8 = 0x6C; // last note\n\n    var number2key = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\n    var toNote = {}; // C8  == 108\n\n    var toName = {}; // 108 ==  C8\n\n    for (var n = A0; n <= C8; n++) {\n      var octave = (n - 12) / 12 >> 0;\n      var name = number2key[n % 12] + octave;\n      toNote[name] = n;\n      toName[n] = name;\n    }\n\n    MIDI.getNoteName = function (value) {\n      if (value in toNote) {\n        return value;\n      } else if (value in toName) {\n        return toName[value];\n      }\n    };\n\n    MIDI.getNoteNumber = function (value) {\n      if (value in toName) {\n        return value;\n      } else if (value in toNote) {\n        return toNote[value];\n      }\n    };\n  })();\n})(MIDI);","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/node_modules/midi/js/gm.js"],"names":["MIDI","getProgram","program","byName","asId","byId","name","replace","toLowerCase","categories","GM","category","programs","i","length","id","parseInt","substr","indexOf","nameId","categoryId","res","push","A0","C8","number2key","toNote","toName","n","octave","getNoteName","value","getNoteNumber"],"mappings":"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","sourcesContent":["/*\n\t----------------------------------------------------------\n\tGM : 2015-10-18\n\t----------------------------------------------------------\n*/\n\nif (typeof MIDI === 'undefined') MIDI = {};\n\n(function (MIDI) { 'use strict';\n\n\t/** getProgram **/\n\tMIDI.getProgram = function (program) {\n\t\tif (typeof program === 'string') {\n\t\t\treturn MIDI.getProgram.byName[asId(program)];\n\t\t} else {\n\t\t\treturn MIDI.getProgram.byId[program];\n\t\t}\n\t};\n\n\tfunction asId(name) {\n\t\treturn name.replace(/[^a-z0-9_ ]/gi, '').\n\t\t\t\t    replace(/[ ]/g, '_').\n\t\t\t\t    toLowerCase();\n\t};\n\t\n\t(function (categories) {\n\t\tvar GM = MIDI.GM = {};\n\t\tvar byId = MIDI.getProgram.byId = {};\n\t\tvar byName = MIDI.getProgram.byName = {};\n\t\t\n\t\tfor (var category in categories) {\n\t\t\tvar programs = categories[category];\n\t\t\tfor (var i = 0, length = programs.length; i < length; i++) {\n\t\t\t\tvar program = programs[i];\n\t\t\t\tif (program) {\n\t\t\t\t\tvar id = parseInt(program.substr(0, program.indexOf(' ')), 10);\n\t\t\t\t\tvar name = program.replace(id + ' ', '');\n\t\t\t\t\tvar nameId = asId(name);\n\t\t\t\t\tvar categoryId = asId(category);\n\t\t\t\t\t\n\t\t\t\t\tvar res = {\n\t\t\t\t\t\tid: --id,\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\tnameId: nameId,\n\t\t\t\t\t\tcategory: category\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tbyId[id] = res;\n\t\t\t\t\tbyName[nameId] = res;\n\t\t\t\t\t\n\t\t\t\t\tGM[categoryId] = GM[categoryId] || [];\n\t\t\t\t\tGM[categoryId].push(res);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})({\n\t\t'Piano': ['1 Acoustic Grand Piano', '2 Bright Acoustic Piano', '3 Electric Grand Piano', '4 Honky-tonk Piano', '5 Electric Piano 1', '6 Electric Piano 2', '7 Harpsichord', '8 Clavinet'],\n\t\t'Chromatic Percussion': ['9 Celesta', '10 Glockenspiel', '11 Music Box', '12 Vibraphone', '13 Marimba', '14 Xylophone', '15 Tubular Bells', '16 Dulcimer'],\n\t\t'Organ': ['17 Drawbar Organ', '18 Percussive Organ', '19 Rock Organ', '20 Church Organ', '21 Reed Organ', '22 Accordion', '23 Harmonica', '24 Tango Accordion'],\n\t\t'Guitar': ['25 Acoustic Guitar (nylon)', '26 Acoustic Guitar (steel)', '27 Electric Guitar (jazz)', '28 Electric Guitar (clean)', '29 Electric Guitar (muted)', '30 Overdriven Guitar', '31 Distortion Guitar', '32 Guitar Harmonics'],\n\t\t'Bass': ['33 Acoustic Bass', '34 Electric Bass (finger)', '35 Electric Bass (pick)', '36 Fretless Bass', '37 Slap Bass 1', '38 Slap Bass 2', '39 Synth Bass 1', '40 Synth Bass 2'],\n\t\t'Strings': ['41 Violin', '42 Viola', '43 Cello', '44 Contrabass', '45 Tremolo Strings', '46 Pizzicato Strings', '47 Orchestral Harp', '48 Timpani'],\n\t\t'Ensemble': ['49 String Ensemble 1', '50 String Ensemble 2', '51 Synth Strings 1', '52 Synth Strings 2', '53 Choir Aahs', '54 Voice Oohs', '55 Synth Choir', '56 Orchestra Hit'],\n\t\t'Brass': ['57 Trumpet', '58 Trombone', '59 Tuba', '60 Muted Trumpet', '61 French Horn', '62 Brass Section', '63 Synth Brass 1', '64 Synth Brass 2'],\n\t\t'Reed': ['65 Soprano Sax', '66 Alto Sax', '67 Tenor Sax', '68 Baritone Sax', '69 Oboe', '70 English Horn', '71 Bassoon', '72 Clarinet'],\n\t\t'Pipe': ['73 Piccolo', '74 Flute', '75 Recorder', '76 Pan Flute', '77 Blown Bottle', '78 Shakuhachi', '79 Whistle', '80 Ocarina'],\n\t\t'Synth Lead': ['81 Lead 1 (square)', '82 Lead 2 (sawtooth)', '83 Lead 3 (calliope)', '84 Lead 4 (chiff)', '85 Lead 5 (charang)', '86 Lead 6 (voice)', '87 Lead 7 (fifths)', '88 Lead 8 (bass + lead)'],\n\t\t'Synth Pad': ['89 Pad 1 (new age)', '90 Pad 2 (warm)', '91 Pad 3 (polysynth)', '92 Pad 4 (choir)', '93 Pad 5 (bowed)', '94 Pad 6 (metallic)', '95 Pad 7 (halo)', '96 Pad 8 (sweep)'],\n\t\t'Synth Effects': ['97 FX 1 (rain)', '98 FX 2 (soundtrack)', '99 FX 3 (crystal)', '100 FX 4 (atmosphere)', '101 FX 5 (brightness)', '102 FX 6 (goblins)', '103 FX 7 (echoes)', '104 FX 8 (sci-fi)'],\n\t\t'Ethnic': ['105 Sitar', '106 Banjo', '107 Shamisen', '108 Koto', '109 Kalimba', '110 Bagpipe', '111 Fiddle', '112 Shanai'],\n\t\t'Percussive': ['113 Tinkle Bell', '114 Agogo', '115 Steel Drums', '116 Woodblock', '117 Taiko Drum', '118 Melodic Tom', '119 Synth Drum', '129 Percussion'],\n\t\t'Sound effects': ['120 Reverse Cymbal', '121 Guitar Fret Noise', '122 Breath Noise', '123 Seashore', '124 Bird Tweet', '125 Telephone Ring', '126 Helicopter', '127 Applause', '128 Gunshot']\n\t});\n\n\n\t/** conversions **/\n\t(function () {\n\t\tvar A0 = 0x15; // first note\n\t\tvar C8 = 0x6C; // last note\n\t\tvar number2key = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\n\t\tvar toNote = {}; // C8  == 108\n\t\tvar toName = {}; // 108 ==  C8\n\t\tfor (var n = A0; n <= C8; n++) {\n\t\t\tvar octave = (n - 12) / 12 >> 0;\n\t\t\tvar name = number2key[n % 12] + octave;\n\t\t\ttoNote[name] = n;\n\t\t\ttoName[n] = name;\n\t\t}\n\t\n\t\tMIDI.getNoteName = function (value) {\n\t\t\tif (value in toNote) {\n\t\t\t\treturn value;\n\t\t\t} else if (value in toName) {\n\t\t\t\treturn toName[value];\n\t\t\t}\n\t\t};\n\t\n\t\tMIDI.getNoteNumber = function (value) {\n\t\t\tif (value in toName) {\n\t\t\t\treturn value;\n\t\t\t} else if (value in toNote) {\n\t\t\t\treturn toNote[value];\n\t\t\t}\n\t\t};\n\t})();\n\n})(MIDI);"]},"metadata":{},"sourceType":"script"}