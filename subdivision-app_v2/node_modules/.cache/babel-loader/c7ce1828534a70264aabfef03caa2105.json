{"ast":null,"code":"var _jsxFileName = \"/Users/HTMusic/Desktop/PROJECTS/subdivision-app/src/components/Question.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRandQuestion } from \"../actions/getRandQuestionAction\";\n\nconst Question = ({\n  questions,\n  getRandQuestion\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, questions[\"correctAnswer\"]), React.createElement(\"button\", {\n    onClick: () => getRandQuestion(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Get Random Question\"));\n};\n\nconst mapStateToProps = state => ({\n  questions: state.questions\n});\n\nexport default connect(mapStateToProps, {\n  getRandQuestion\n})(Question);","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/src/components/Question.jsx"],"names":["React","connect","getRandQuestion","Question","questions","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kCAAhC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaF,EAAAA;AAAb,CAAD,KAAoC;AACnD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,SAAS,CAAC,eAAD,CAAd,CADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMF,eAAe,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CADF;AAMD,CAPD;;AASA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCF,EAAAA,SAAS,EAAEE,KAAK,CAACF;AADe,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAACI,eAAD,EAAkB;AAAEH,EAAAA;AAAF,CAAlB,CAAP,CAA8CC,QAA9C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRandQuestion } from \"../actions/getRandQuestionAction\";\n\nconst Question = ({ questions, getRandQuestion }) => {\n  return (\n    <div>\n      <h1>{questions[\"correctAnswer\"]}</h1>\n      <button onClick={() => getRandQuestion()}>Get Random Question</button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  questions: state.questions\n});\n\nexport default connect(mapStateToProps, { getRandQuestion })(Question);\n"]},"metadata":{},"sourceType":"module"}