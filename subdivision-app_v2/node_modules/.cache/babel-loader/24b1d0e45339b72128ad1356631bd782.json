{"ast":null,"code":"//    abc_midi_controls.js: Handle the visual part of playing MIDI\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nfunction performanceOk() {\n  if (!('performance' in window)) return false;\n  if (!('now' in window.performance)) return false;\n  return true;\n} // Unfortunately, a few versions of Safari don't support the performance interface. For those browsers, MIDI just won't work.\n\n\nif (performanceOk()) {\n  if (!('galactic' in window)) window.galactic = {};\n  window.galactic.loc = {\n    isLocalUrl: function () {\n      return false;\n    }\n  };\n\n  require('midi/inc/dom/request_xhr');\n\n  require('midi/inc/dom/util')(window.galactic);\n\n  require('midi/inc/AudioSupports');\n\n  require('midi/inc/EventEmitter');\n\n  require('midi/js/loader');\n\n  require('midi/js/adaptors');\n\n  require('midi/js/adaptors-Audio');\n\n  require('midi/js/adaptors-AudioAPI');\n\n  require('midi/js/adaptors-MIDI');\n\n  require('midi/js/channels');\n\n  require('midi/js/gm');\n\n  require('midi/js/player');\n}\n\nvar midi = {};\n\n(function () {\n  \"use strict\";\n\n  function isFunction(functionToCheck) {\n    var getType = {};\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n  }\n\n  midi.generateMidiDownloadLink = function (tune, midiParams, midi, index) {\n    var divClasses = ['abcjs-download-midi', 'abcjs-midi-' + index];\n    if (midiParams.downloadClass) divClasses.push(midiParams.downloadClass);\n    var html = '<div class=\"' + divClasses.join(' ') + '\">';\n    if (midiParams.preTextDownload) html += midiParams.preTextDownload;\n    var title = tune.metaText && tune.metaText.title ? tune.metaText.title : 'Untitled';\n    var label;\n    if (midiParams.downloadLabel && isFunction(midiParams.downloadLabel)) label = midiParams.downloadLabel(tune, index);else if (midiParams.downloadLabel) label = midiParams.downloadLabel.replace(/%T/, title);else label = \"Download MIDI for \\\"\" + title + \"\\\"\";\n    title = title.toLowerCase().replace(/'/g, '').replace(/\\W/g, '_').replace(/__/g, '_');\n    html += '<a download=\"' + title + '.midi\" href=\"' + midi + '\">' + label + '</a>';\n    if (midiParams.postTextDownload) html += midiParams.postTextDownload;\n    return html + \"</div>\";\n  };\n\n  function preprocessLabel(label, title) {\n    return label.replace(/%T/g, title);\n  }\n\n  midi.deviceSupportsMidi = function () {\n    if (!performanceOk()) return false;\n    if (midi.midiInlineInitialized === 'not loaded') return false;\n    return true;\n  };\n\n  midi.generateMidiControls = function (tune, midiParams, midi, index, stopOld) {\n    if (!performanceOk()) return '<div class=\"abcjs-inline-midi abcjs-midi-' + index + '\">ERROR: this browser doesn\\'t support window.performance</div>';\n    if (midi.midiInlineInitialized === 'not loaded') return '<div class=\"abcjs-inline-midi abcjs-midi-' + index + '\">MIDI NOT PRESENT</div>';\n    if (stopOld) stopCurrentlyPlayingTune();\n    var title = tune.metaText && tune.metaText.title ? tune.metaText.title : 'Untitled';\n    var options = midiParams.inlineControls || {};\n    if (options.standard === undefined) options.standard = true;\n    if (options.tooltipSelection === undefined) options.tooltipSelection = \"Click to toggle play selection/play all.\";\n    if (options.tooltipLoop === undefined) options.tooltipLoop = \"Click to toggle play once/repeat.\";\n    if (options.tooltipReset === undefined) options.tooltipReset = \"Click to go to beginning.\";\n    if (options.tooltipPlay === undefined) options.tooltipPlay = \"Click to play/pause.\";\n    if (options.tooltipProgress === undefined) options.tooltipProgress = \"Click to change the playback position.\";\n    if (options.tooltipTempo === undefined) options.tooltipTempo = \"Change the playback speed.\";\n    var style = \"\";\n    if (options.hide) style = 'style=\"display:none;\"';\n    var html = '<div class=\"abcjs-inline-midi abcjs-midi-' + index + '\" ' + style + '>';\n    html += '<span class=\"abcjs-data\" style=\"display:none;\">' + JSON.stringify(midi) + '</span>';\n    if (midiParams.preTextInline) html += '<span class=\"abcjs-midi-pre\">' + preprocessLabel(midiParams.preTextInline, title) + '</span>';\n    if (options.selectionToggle) html += '<button type=\"button\" class=\"abcjs-midi-selection abcjs-btn\" title=\"' + options.tooltipSelection + '\"></button>';\n    if (options.loopToggle) html += '<button type=\"button\" class=\"abcjs-midi-loop abcjs-btn\" title=\"' + options.tooltipLoop + '\"></button>';\n    if (options.standard) html += '<button type=\"button\" class=\"abcjs-midi-reset abcjs-btn\" title=\"' + options.tooltipReset + '\"></button><button type=\"button\" class=\"abcjs-midi-start abcjs-btn\" title=\"' + options.tooltipPlay + '\"></button><button type=\"button\" class=\"abcjs-midi-progress-background\" title=\"' + options.tooltipProgress + '\"><span class=\"abcjs-midi-progress-indicator\"></span></button><span class=\"abcjs-midi-clock\"> 0:00</span>';\n\n    if (options.tempo) {\n      var startTempo = tune && tune.metaText && tune.metaText.tempo && tune.metaText.tempo.bpm ? tune.metaText.tempo.bpm : 180;\n      html += '<span class=\"abcjs-tempo-wrapper\"><input class=\"abcjs-midi-tempo\" value=\"100\" type=\"number\" min=\"1\" max=\"300\" data-start-tempo=\"' + startTempo + '\" title=\"' + options.tooltipTempo + '\" />% (<span class=\"abcjs-midi-current-tempo\">' + startTempo + '</span> BPM)</span>';\n    }\n\n    if (midiParams.postTextInline) html += '<span class=\"abcjs-midi-post\">' + preprocessLabel(midiParams.postTextInline, title) + '</span>';\n    return html + \"</div>\";\n  }; // The default location for the sound font files. Simply set this to a different value if the files are served in a different place.\n  // midi.soundfontUrl = \"node_modules/midi/examples/soundfont/\";\n\n\n  var soundfontUrl = \"https://paulrosen.github.io/midi-js-soundfonts/FluidR3_GM/\";\n\n  midi.setSoundFont = function (url) {\n    soundfontUrl = url;\n  };\n\n  function hasClass(element, cls) {\n    if (!element) return false;\n    return (' ' + element.className + ' ').indexOf(' ' + cls + ' ') > -1;\n  }\n\n  function addClass(element, cls) {\n    if (!element) return;\n    if (!hasClass(element, cls)) element.className = element.className + \" \" + cls;\n  }\n\n  function removeClass(element, cls) {\n    if (!element) return;\n    element.className = element.className.replace(cls, \"\").trim().replace(\"  \", \" \");\n  }\n\n  function toggleClass(element, cls) {\n    if (!element) return;\n    if (hasClass(element, cls)) removeClass(element, cls);else addClass(element, cls);\n  }\n\n  function closest(element, cls) {\n    // This finds the closest parent that contains the class passed in.\n    if (!element) return null;\n\n    while (element !== document.body) {\n      if (hasClass(element, cls)) return element;\n      element = element.parentNode;\n    }\n\n    return null;\n  }\n\n  function find(element, cls) {\n    if (!element) return null;\n    var els = element.getElementsByClassName(cls);\n    if (els.length === 0) return null;\n    return els[0];\n  }\n\n  function addLoadEvent(func) {\n    if (window.document.readyState === 'loading') {\n      window.addEventListener('load', func);\n    } else {\n      func();\n    }\n  }\n\n  var midiJsInitialized = false;\n\n  function afterSetup(timeWarp, data, onSuccess) {\n    MIDI.player.currentTime = 0;\n    MIDI.player.warp = timeWarp;\n    MIDI.player.load({\n      events: data\n    });\n    onSuccess();\n  }\n\n  function listInstruments(data) {\n    var instruments = [];\n\n    for (var i = 0; i < data.length; i++) {\n      if (data[i][0] && data[i][0].event && data[i][0].event.programNumber) {\n        instruments.push(data[i][0].event.programNumber);\n      }\n    }\n\n    return instruments;\n  }\n\n  function setCurrentMidiTune(timeWarp, data, onSuccess) {\n    if (!midiJsInitialized) {\n      MIDI.setup({\n        debug: false,\n        soundfontUrl: soundfontUrl,\n        instruments: listInstruments(data)\n      }).then(function () {\n        midiJsInitialized = true;\n        afterSetup(timeWarp, data, onSuccess);\n      }).catch(function (e) {\n        console.log(\"MIDI.setup failed:\", e.message);\n      });\n    } else {\n      afterSetup(timeWarp, data, onSuccess);\n    }\n  }\n\n  function startCurrentlySelectedTune() {\n    MIDI.player.start(MIDI.player.currentTime);\n  }\n\n  function stopCurrentlyPlayingTune() {\n    MIDI.player.stop();\n  }\n\n  function pauseCurrentlyPlayingTune() {\n    MIDI.player.pause();\n  }\n\n  function setMidiCallback(midiJsListener) {\n    MIDI.player.setAnimation(midiJsListener);\n  }\n\n  function jumpToMidiPosition(play, offset, width) {\n    var ratio = offset / width;\n    var endTime = MIDI.player.duration; // MIDI.Player.endTime;\n\n    if (play) pauseCurrentlyPlayingTune();\n    MIDI.player.currentTime = endTime * ratio;\n    if (play) startCurrentlySelectedTune();\n  }\n\n  function setTimeWarp(percent) {\n    // Time warp is a multiplier: the larger the number, the longer the time. Therefore,\n    // it is opposite of the percentage. That is, playing at 50% is actually multiplying the time by 2.\n    MIDI.player.warp = percent > 0 ? 100 / percent : 1;\n  }\n\n  function loadMidi(target, onSuccess) {\n    var dataEl = find(target, \"abcjs-data\");\n    var data = JSON.parse(dataEl.innerHTML); // See if the tempo changer is present, and use that tempo if so.\n\n    var timeWarp = 1;\n    var tempoEl = find(target, \"abcjs-midi-tempo\");\n\n    if (tempoEl) {\n      // Time warp is a multiplier: the larger the number, the longer the time. Therefore,\n      // it is opposite of the percentage. That is, playing at 50% is actually multiplying the time by 2.\n      var percent = parseInt(tempoEl.value, 10);\n      if (percent > 0) timeWarp = 100 / percent;\n    }\n\n    setCurrentMidiTune(timeWarp, data, onSuccess);\n  }\n\n  function deselectMidiControl() {\n    var otherMidi = find(document, \"abcjs-midi-current\");\n\n    if (otherMidi) {\n      stopCurrentlyPlayingTune();\n      removeClass(otherMidi, \"abcjs-midi-current\");\n      var otherMidiStart = find(otherMidi, \"abcjs-midi-start\");\n      removeClass(otherMidiStart, \"abcjs-pushed\");\n    }\n  }\n\n  var lastNow;\n\n  function findElements(visualItems, currentTime, epsilon) {\n    var minIndex = 0;\n    var maxIndex = visualItems.length - 1;\n    var currentIndex;\n    var currentElement;\n\n    while (minIndex <= maxIndex) {\n      currentIndex = Math.floor((minIndex + maxIndex) / 2);\n      currentElement = visualItems[currentIndex]; // A match is if the currentTime is within .1 seconds before the exact time.\n      // We get callback events at somewhat random times, so they won't match up exactly.\n\n      if (currentElement.milliseconds / 1000 - epsilon < currentTime) {\n        minIndex = currentIndex + 1;\n      } else if (currentElement.milliseconds / 1000 - epsilon > currentTime) {\n        maxIndex = currentIndex - 1;\n      } else {\n        // We have a match.\n        return currentIndex;\n      }\n    } // There was no match, so find the closest element that is less than the current time.\n\n\n    while (visualItems[currentIndex].milliseconds / 1000 - epsilon >= currentTime && currentIndex > 0) currentIndex--; // If the time is way before the first element, then we're not ready to select any of them.\n\n\n    if (currentIndex === 0 && visualItems[currentIndex].milliseconds / 1000 - epsilon >= currentTime) return -1;\n    return currentIndex;\n  }\n\n  function midiJsListener(position) {\n    // { currentTime: in seconds, duration: total length in seconds, progress: percent between 0 and 1 }\n    var midiControl;\n\n    if (position.duration > 0 && lastNow !== position.progress) {\n      lastNow = position.progress;\n      midiControl = find(document, \"abcjs-midi-current\");\n\n      if (midiControl) {\n        var startButton = find(midiControl, 'abcjs-midi-start');\n\n        if (hasClass(startButton, 'abcjs-pushed')) {\n          var progressBackground = find(midiControl, \"abcjs-midi-progress-background\");\n          var totalWidth = progressBackground.offsetWidth;\n          var progressIndicator = find(midiControl, \"abcjs-midi-progress-indicator\");\n          var scaled = totalWidth * lastNow; // The number of pixels\n\n          progressIndicator.style.left = scaled + \"px\";\n          var clock = find(midiControl, \"abcjs-midi-clock\");\n\n          if (clock) {\n            var seconds = Math.floor(position.currentTime);\n            var minutes = Math.floor(seconds / 60);\n            seconds = seconds % 60;\n            if (seconds < 10) seconds = \"0\" + seconds;\n            if (minutes < 10) minutes = \" \" + minutes;\n            clock.innerHTML = minutes + \":\" + seconds;\n          }\n\n          var tempo = midiControl.abcjsQpm;\n          if (!tempo && midiControl.abcjsTune && midiControl.abcjsTune.metaText && midiControl.abcjsTune.metaText.tempo) tempo = midiControl.abcjsTune.metaText.tempo.bpm;\n          if (!tempo) tempo = 180;\n          var beatsPerSecond = parseInt(tempo, 10) / 60;\n          var currentTime = position.currentTime;\n\n          if (midiControl.abcjsListener) {\n            var thisBeat = Math.floor(currentTime * beatsPerSecond);\n            position.newBeat = thisBeat !== midiControl.abcjsLastBeat;\n            position.thisBeat = thisBeat;\n            midiControl.abcjsLastBeat = thisBeat;\n            midiControl.abcjsListener(midiControl, position, midiControl.abcjsContext);\n          }\n\n          if (midiControl.abcjsAnimate) {\n            var epsilon = beatsPerSecond / 64; // pick a small division to round to. This is called at small, random times.\n\n            var index = findElements(midiControl.abcjsTune.noteTimings, currentTime, epsilon);\n\n            if (index !== midiControl.abcjsLastIndex) {\n              var last = midiControl.abcjsLastIndex >= 0 ? midiControl.abcjsTune.noteTimings[midiControl.abcjsLastIndex] : null;\n              midiControl.abcjsAnimate(last, midiControl.abcjsTune.noteTimings[index], midiControl.abcjsContext);\n              midiControl.abcjsLastIndex = index;\n            }\n          }\n        }\n      }\n    }\n\n    if (position.progress === 1) {\n      // The playback is stopping. We need to either indicate that\n      // it has stopped, or start over at the beginning.\n      midiControl = find(document, \"abcjs-midi-current\");\n      var loopControl = find(midiControl, \"abcjs-midi-loop\");\n\n      var finishedResetting = function () {\n        if (loopControl && hasClass(loopControl, \"abcjs-pushed\")) {\n          onStart(find(midiControl, \"abcjs-midi-start\"));\n        }\n      }; // midi.js is not quite finished: it still will process the last event, so we wait a minimum amount of time\n      // before doing another action.\n\n\n      setTimeout(function () {\n        doReset(midiControl, finishedResetting);\n        if (midiControl && midiControl.abcjsAnimate) midiControl.abcjsAnimate(midiControl.abcjsTune.noteTimings[midiControl.abcjsLastIndex], null, midiControl.abcjsContext);\n      }, 1);\n    }\n  }\n\n  function onStart(target) {\n    var parent = closest(target, \"abcjs-inline-midi\"); // If this midi is already playing,\n\n    if (hasClass(target, 'abcjs-pushed')) {\n      // Stop it.\n      pauseCurrentlyPlayingTune(); // Change the element so that the start icon is shown.\n\n      removeClass(target, \"abcjs-pushed\");\n    } else {\n      // Else,\n      // If some other midi is running, turn it off.\n      // If this is the current midi, just continue.\n      if (hasClass(parent, \"abcjs-midi-current\")) // Start this tune playing from wherever it had stopped.\n        startCurrentlySelectedTune();else {\n        deselectMidiControl(); // else, load this midi from scratch.\n\n        var onSuccess = function () {\n          startCurrentlySelectedTune();\n          removeClass(target, \"abcjs-loading\");\n          addClass(parent, 'abcjs-midi-current');\n        };\n\n        addClass(target, \"abcjs-loading\");\n        loadMidi(parent, onSuccess);\n      } // Change the element so that the pause icon is shown.\n\n      addClass(target, \"abcjs-pushed\");\n    } // This replaces the old callback. It really only needs to be called once, but it doesn't hurt to set it every time.\n\n\n    parent.abcjsLastBeat = -1;\n    parent.abcjsLastIndex = -1;\n    setMidiCallback(midiJsListener);\n  }\n\n  midi.startPlaying = function (target) {\n    // This can be called with the target being entire control, and if so, first find the start button.\n    var btn = target;\n    if (hasClass(target, \"abcjs-inline-midi\")) btn = target.querySelector('.abcjs-midi-start');\n    onStart(btn);\n  };\n\n  midi.stopPlaying = function () {\n    stopCurrentlyPlayingTune();\n    var playingEl = document.querySelector(\".abcjs-midi-current\");\n\n    if (playingEl) {\n      resetProgress(playingEl);\n      var startBtn = find(playingEl, \"abcjs-midi-start\");\n      if (startBtn) removeClass(startBtn, \"abcjs-pushed\");\n    }\n  };\n\n  midi.restartPlaying = function () {\n    var target = document.querySelector(\".abcjs-midi-current\");\n    onReset(target);\n  };\n\n  midi.setLoop = function (target, state) {\n    var loop = target.querySelector('.abcjs-midi-loop');\n    if (!loop) return;\n    if (state) addClass(loop, 'abcjs-pushed');else removeClass(loop, 'abcjs-pushed');\n  };\n\n  midi.setRandomProgress = function (percent) {\n    var target = document.querySelector(\".abcjs-midi-current\");\n    var playEl = find(target, \"abcjs-midi-start\");\n    var play = hasClass(playEl, \"abcjs-pushed\");\n    var endTime = MIDI.player.duration;\n    if (play) pauseCurrentlyPlayingTune();\n    MIDI.player.currentTime = endTime * percent;\n    if (play) startCurrentlySelectedTune();\n  };\n\n  function resetProgress(parent) {\n    var progressIndicator = find(parent, \"abcjs-midi-progress-indicator\");\n    progressIndicator.style.left = \"0px\";\n    var clock = find(parent, \"abcjs-midi-clock\");\n    clock.innerHTML = \" 0:00\";\n  }\n\n  function onSelection(target) {\n    toggleClass(target, 'abcjs-pushed');\n  }\n\n  function onLoop(target) {\n    toggleClass(target, 'abcjs-pushed');\n  }\n\n  function doReset(target, callback) {\n    var parent = closest(target, \"abcjs-inline-midi\");\n\n    function onSuccess() {\n      addClass(parent, 'abcjs-midi-current');\n      resetProgress(parent);\n      if (callback) callback();\n    } // If the tune is playing, stop it.\n\n\n    deselectMidiControl();\n    if (parent) // parent can be null if the music was changed while the midi is playing. This is called to stop it, but the object is already gone.\n      loadMidi(parent, onSuccess);\n  }\n\n  function onReset(target) {\n    var parent = closest(target, \"abcjs-inline-midi\");\n    var playEl = find(parent, \"abcjs-midi-start\");\n    var play = hasClass(playEl, \"abcjs-pushed\");\n\n    function keepPlaying() {\n      if (play) {\n        startCurrentlySelectedTune();\n        addClass(playEl, 'abcjs-pushed');\n      }\n    }\n\n    if (hasClass(parent, \"abcjs-midi-current\")) // Only listen to the reset for the currently playing tune.\n      doReset(target, keepPlaying);\n  }\n\n  function relMouseX(target, event) {\n    var totalOffsetX = 0;\n\n    do {\n      totalOffsetX += target.offsetLeft - target.scrollLeft;\n      target = target.offsetParent;\n    } while (target);\n\n    return event.pageX - totalOffsetX;\n  }\n\n  function onProgress(target, event) {\n    var parent = closest(target, \"abcjs-inline-midi\");\n\n    if (hasClass(parent, \"abcjs-midi-current\")) {\n      var play = find(parent, \"abcjs-midi-start\");\n      play = hasClass(play, \"abcjs-pushed\");\n      var width = target.offsetWidth;\n      var offset = relMouseX(target, event);\n      jumpToMidiPosition(play, offset, width);\n    }\n  }\n\n  function onTempo(el) {\n    var percent = parseInt(el.value, 10);\n    var startTempo = parseInt(el.getAttribute(\"data-start-tempo\"), 10);\n\n    while (el && !hasClass(el, 'abcjs-midi-current-tempo')) {\n      el = el.nextSibling;\n    }\n\n    el.innerHTML = Math.floor(percent * startTempo / 100);\n    setTimeWarp(percent);\n  }\n\n  function addDelegates() {\n    document.body.addEventListener(\"click\", function (event) {\n      event = event || window.event;\n      var target = event.target || event.srcElement;\n\n      while (target && target !== document.body) {\n        if (hasClass(target, 'abcjs-midi-start')) {\n          onStart(target, event);\n          return;\n        } else if (hasClass(target, 'abcjs-midi-selection')) {\n          onSelection(target, event);\n          return;\n        } else if (hasClass(target, 'abcjs-midi-loop')) {\n          onLoop(target, event);\n          return;\n        } else if (hasClass(target, 'abcjs-midi-reset')) {\n          onReset(target, event);\n          return;\n        } else if (hasClass(target, 'abcjs-midi-progress-background')) {\n          onProgress(target, event);\n          return;\n        }\n\n        target = target.parentNode;\n      }\n    });\n    document.body.addEventListener(\"change\", function (event) {\n      event = event || window.event;\n      var target = event.target || event.srcElement;\n\n      while (target !== document.body) {\n        if (hasClass(target, 'abcjs-midi-tempo')) onTempo(target, event);\n        target = target.parentNode;\n      }\n    });\n\n    if (window.MIDI === undefined) {\n      midi.midiInlineInitialized = 'not loaded';\n      var els = document.getElementsByClassName('abcjs-inline-midi');\n\n      for (var i = 0; i < els.length; i++) els[i].innerHTML = \"MIDI NOT PRESENT\";\n    }\n  }\n\n  addLoadEvent(addDelegates);\n})();\n\nmodule.exports = midi;","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/node_modules/abcjs/src/midi/abc_midi_controls.js"],"names":["performanceOk","window","performance","galactic","loc","isLocalUrl","require","midi","isFunction","functionToCheck","getType","toString","call","generateMidiDownloadLink","tune","midiParams","index","divClasses","downloadClass","push","html","join","preTextDownload","title","metaText","label","downloadLabel","replace","toLowerCase","postTextDownload","preprocessLabel","deviceSupportsMidi","midiInlineInitialized","generateMidiControls","stopOld","stopCurrentlyPlayingTune","options","inlineControls","standard","undefined","tooltipSelection","tooltipLoop","tooltipReset","tooltipPlay","tooltipProgress","tooltipTempo","style","hide","JSON","stringify","preTextInline","selectionToggle","loopToggle","tempo","startTempo","bpm","postTextInline","soundfontUrl","setSoundFont","url","hasClass","element","cls","className","indexOf","addClass","removeClass","trim","toggleClass","closest","document","body","parentNode","find","els","getElementsByClassName","length","addLoadEvent","func","readyState","addEventListener","midiJsInitialized","afterSetup","timeWarp","data","onSuccess","MIDI","player","currentTime","warp","load","events","listInstruments","instruments","i","event","programNumber","setCurrentMidiTune","setup","debug","then","catch","e","console","log","message","startCurrentlySelectedTune","start","stop","pauseCurrentlyPlayingTune","pause","setMidiCallback","midiJsListener","setAnimation","jumpToMidiPosition","play","offset","width","ratio","endTime","duration","setTimeWarp","percent","loadMidi","target","dataEl","parse","innerHTML","tempoEl","parseInt","value","deselectMidiControl","otherMidi","otherMidiStart","lastNow","findElements","visualItems","epsilon","minIndex","maxIndex","currentIndex","currentElement","Math","floor","milliseconds","position","midiControl","progress","startButton","progressBackground","totalWidth","offsetWidth","progressIndicator","scaled","left","clock","seconds","minutes","abcjsQpm","abcjsTune","beatsPerSecond","abcjsListener","thisBeat","newBeat","abcjsLastBeat","abcjsContext","abcjsAnimate","noteTimings","abcjsLastIndex","last","loopControl","finishedResetting","onStart","setTimeout","doReset","parent","startPlaying","btn","querySelector","stopPlaying","playingEl","resetProgress","startBtn","restartPlaying","onReset","setLoop","state","loop","setRandomProgress","playEl","onSelection","onLoop","callback","keepPlaying","relMouseX","totalOffsetX","offsetLeft","scrollLeft","offsetParent","pageX","onProgress","onTempo","el","getAttribute","nextSibling","addDelegates","srcElement","module","exports"],"mappings":"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","sourcesContent":["//    abc_midi_controls.js: Handle the visual part of playing MIDI\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction performanceOk() {\n\tif (!('performance' in window))\n\t\treturn false;\n\tif (!('now' in window.performance))\n\t\treturn false;\n\treturn true;\n}\n\n// Unfortunately, a few versions of Safari don't support the performance interface. For those browsers, MIDI just won't work.\nif (performanceOk()) {\n\tif (!('galactic' in window))\n\t\twindow.galactic = {};\n\twindow.galactic.loc = {\n\t\tisLocalUrl: function () { return false }\n\t};\n\n\trequire('midi/inc/dom/request_xhr');\n\trequire('midi/inc/dom/util')(window.galactic);\n\trequire('midi/inc/AudioSupports');\n\trequire('midi/inc/EventEmitter');\n\trequire('midi/js/loader');\n\trequire('midi/js/adaptors');\n\trequire('midi/js/adaptors-Audio');\n\trequire('midi/js/adaptors-AudioAPI');\n\trequire('midi/js/adaptors-MIDI');\n\trequire('midi/js/channels');\n\trequire('midi/js/gm');\n\trequire('midi/js/player');\n}\n\nvar midi = {};\n\n(function() {\n\t\"use strict\";\n\tfunction isFunction(functionToCheck) {\n\t\tvar getType = {};\n\t\treturn functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n\t}\n\n\tmidi.generateMidiDownloadLink = function(tune, midiParams, midi, index) {\n\t\tvar divClasses = ['abcjs-download-midi', 'abcjs-midi-' + index]\n\t\tif (midiParams.downloadClass)\n\t\t\tdivClasses.push(midiParams.downloadClass)\n\t\tvar html = '<div class=\"' + divClasses.join(' ') + '\">';\n\t\tif (midiParams.preTextDownload)\n\t\t\thtml += midiParams.preTextDownload;\n\t\tvar title = tune.metaText && tune.metaText.title ? tune.metaText.title : 'Untitled';\n\t\tvar label;\n\t\tif (midiParams.downloadLabel && isFunction(midiParams.downloadLabel))\n\t\t\tlabel = midiParams.downloadLabel(tune, index);\n\t\telse if (midiParams.downloadLabel)\n\t\t\tlabel = midiParams.downloadLabel.replace(/%T/, title);\n\t\telse\n\t\t\tlabel = \"Download MIDI for \\\"\" + title + \"\\\"\";\n\t\ttitle = title.toLowerCase().replace(/'/g, '').replace(/\\W/g, '_').replace(/__/g, '_');\n\t\thtml += '<a download=\"' + title + '.midi\" href=\"' + midi + '\">' + label + '</a>';\n\t\tif (midiParams.postTextDownload)\n\t\t\thtml += midiParams.postTextDownload;\n\t\treturn html + \"</div>\";\n\t};\n\n\tfunction preprocessLabel(label, title) {\n\t\treturn label.replace(/%T/g, title);\n\t}\n\n\tmidi.deviceSupportsMidi = function() {\n\t\tif (!performanceOk())\n\t\t\treturn false;\n\t\tif (midi.midiInlineInitialized === 'not loaded')\n\t\t\treturn false;\n\t\treturn true;\n\t};\n\n\tmidi.generateMidiControls = function(tune, midiParams, midi, index, stopOld) {\n\t\tif (!performanceOk())\n\t\t\treturn '<div class=\"abcjs-inline-midi abcjs-midi-' + index + '\">ERROR: this browser doesn\\'t support window.performance</div>';\n\t\tif (midi.midiInlineInitialized === 'not loaded')\n\t\t\treturn '<div class=\"abcjs-inline-midi abcjs-midi-' + index + '\">MIDI NOT PRESENT</div>';\n\n\t\tif (stopOld)\n\t\t\tstopCurrentlyPlayingTune();\n\t\tvar title = tune.metaText && tune.metaText.title ? tune.metaText.title : 'Untitled';\n\t\tvar options = midiParams.inlineControls || {};\n\t\tif (options.standard === undefined) options.standard = true;\n\n\t\tif (options.tooltipSelection === undefined) options.tooltipSelection = \"Click to toggle play selection/play all.\";\n\t\tif (options.tooltipLoop === undefined) options.tooltipLoop = \"Click to toggle play once/repeat.\";\n\t\tif (options.tooltipReset === undefined) options.tooltipReset = \"Click to go to beginning.\";\n\t\tif (options.tooltipPlay === undefined) options.tooltipPlay = \"Click to play/pause.\";\n\t\tif (options.tooltipProgress === undefined) options.tooltipProgress = \"Click to change the playback position.\";\n\t\tif (options.tooltipTempo === undefined) options.tooltipTempo = \"Change the playback speed.\";\n\n\t\tvar style = \"\";\n\t\tif (options.hide)\n\t\t\tstyle = 'style=\"display:none;\"';\n\t\tvar html = '<div class=\"abcjs-inline-midi abcjs-midi-' + index + '\" ' + style + '>';\n\t\thtml += '<span class=\"abcjs-data\" style=\"display:none;\">' + JSON.stringify(midi) + '</span>';\n\t\tif (midiParams.preTextInline)\n\t\t\thtml += '<span class=\"abcjs-midi-pre\">' + preprocessLabel(midiParams.preTextInline, title) + '</span>';\n\n\t\tif (options.selectionToggle)\n\t\t\thtml += '<button type=\"button\" class=\"abcjs-midi-selection abcjs-btn\" title=\"' + options.tooltipSelection + '\"></button>';\n\t\tif (options.loopToggle)\n\t\t\thtml += '<button type=\"button\" class=\"abcjs-midi-loop abcjs-btn\" title=\"' + options.tooltipLoop + '\"></button>';\n\t\tif (options.standard)\n\t\t\thtml += '<button type=\"button\" class=\"abcjs-midi-reset abcjs-btn\" title=\"' + options.tooltipReset + '\"></button><button type=\"button\" class=\"abcjs-midi-start abcjs-btn\" title=\"' + options.tooltipPlay + '\"></button><button type=\"button\" class=\"abcjs-midi-progress-background\" title=\"' + options.tooltipProgress + '\"><span class=\"abcjs-midi-progress-indicator\"></span></button><span class=\"abcjs-midi-clock\"> 0:00</span>';\n\t\tif (options.tempo) {\n\t\t\tvar startTempo = tune && tune.metaText && tune.metaText.tempo && tune.metaText.tempo.bpm ? tune.metaText.tempo.bpm : 180;\n\t\t\thtml += '<span class=\"abcjs-tempo-wrapper\"><input class=\"abcjs-midi-tempo\" value=\"100\" type=\"number\" min=\"1\" max=\"300\" data-start-tempo=\"' + startTempo + '\" title=\"' + options.tooltipTempo + '\" />% (<span class=\"abcjs-midi-current-tempo\">' + startTempo + '</span> BPM)</span>';\n\t\t}\n\n\t\tif (midiParams.postTextInline)\n\t\t\thtml += '<span class=\"abcjs-midi-post\">' + preprocessLabel(midiParams.postTextInline, title) + '</span>';\n\t\treturn html + \"</div>\";\n\t};\n\n\t// The default location for the sound font files. Simply set this to a different value if the files are served in a different place.\n\t// midi.soundfontUrl = \"node_modules/midi/examples/soundfont/\";\n\tvar soundfontUrl = \"https://paulrosen.github.io/midi-js-soundfonts/FluidR3_GM/\";\n\tmidi.setSoundFont = function(url) {\n\t\tsoundfontUrl = url;\n\t};\n\n\tfunction hasClass(element, cls) {\n\t\tif (!element)\n\t\t\treturn false;\n\t\treturn (' ' + element.className + ' ').indexOf(' ' + cls + ' ') > -1;\n\t}\n\n\tfunction addClass(element, cls) {\n\t\tif (!element)\n\t\t\treturn;\n\t\tif (!hasClass(element, cls))\n\t\t\telement.className = element.className + \" \" + cls;\n\t}\n\n\tfunction removeClass(element, cls) {\n\t\tif (!element)\n\t\t\treturn;\n\t\telement.className = element.className.replace(cls, \"\").trim().replace(\"  \", \" \");\n\t}\n\n\tfunction toggleClass(element, cls) {\n\t\tif (!element)\n\t\t\treturn;\n\t\tif (hasClass(element, cls))\n\t\t\tremoveClass(element, cls);\n\t\telse\n\t\t\taddClass(element, cls);\n\t}\n\n\tfunction closest(element, cls) {\n\t\t// This finds the closest parent that contains the class passed in.\n\t\tif (!element)\n\t\t\treturn null;\n\t\twhile (element !== document.body) {\n\t\t\tif (hasClass(element, cls))\n\t\t\t\treturn element;\n\t\t\telement = element.parentNode;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction find(element, cls) {\n\t\tif (!element)\n\t\t\treturn null;\n\t\tvar els = element.getElementsByClassName(cls);\n\t\tif (els.length === 0)\n\t\t\treturn null;\n\t\treturn els[0];\n\t}\n\n\tfunction addLoadEvent(func) {\n\t\tif (window.document.readyState === 'loading') {\n\t\t\twindow.addEventListener('load', func);\n\t\t} else {\n\t\t\tfunc();\n\t\t}\n\t}\n\n\tvar midiJsInitialized = false;\n\n\tfunction afterSetup(timeWarp, data, onSuccess) {\n\t\tMIDI.player.currentTime = 0;\n\t\tMIDI.player.warp = timeWarp;\n\n\t\tMIDI.player.load({ events: data });\n\t\tonSuccess();\n\t}\n\n\tfunction listInstruments(data) {\n\t\tvar instruments = [];\n\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\tif (data[i][0] && data[i][0].event && data[i][0].event.programNumber) {\n\t\t\t\tinstruments.push(data[i][0].event.programNumber);\n\t\t\t}\n\t\t}\n\t\treturn instruments;\n\t}\n\n\tfunction setCurrentMidiTune(timeWarp, data, onSuccess) {\n\t\tif (!midiJsInitialized) {\n\t\t\tMIDI.setup({\n\t\t\t\tdebug: false,\n\t\t\t\tsoundfontUrl: soundfontUrl,\n\t\t\t\tinstruments:  listInstruments(data)\n\t\t\t}).then(function() {\n\t\t\t\tmidiJsInitialized = true;\n\t\t\t\tafterSetup(timeWarp, data, onSuccess);\n\t\t\t}).catch(function(e) {\n\t\t\t\tconsole.log(\"MIDI.setup failed:\", e.message);\n\t\t\t});\n\t\t} else {\n\t\t\tafterSetup(timeWarp, data, onSuccess);\n\t\t}\n\t}\n\n\tfunction startCurrentlySelectedTune() {\n\t\tMIDI.player.start(MIDI.player.currentTime);\n\t}\n\n\tfunction stopCurrentlyPlayingTune() {\n\t\tMIDI.player.stop();\n\t}\n\n\tfunction pauseCurrentlyPlayingTune() {\n\t\tMIDI.player.pause();\n\t}\n\n\tfunction setMidiCallback(midiJsListener) {\n\t\tMIDI.player.setAnimation(midiJsListener);\n\t}\n\n\tfunction jumpToMidiPosition(play, offset, width) {\n\t\tvar ratio = offset / width;\n\t\tvar endTime = MIDI.player.duration; // MIDI.Player.endTime;\n\t\tif (play)\n\t\t\tpauseCurrentlyPlayingTune();\n\t\tMIDI.player.currentTime = endTime * ratio;\n\t\tif (play)\n\t\t\tstartCurrentlySelectedTune();\n\t}\n\n\tfunction setTimeWarp(percent) {\n\t\t// Time warp is a multiplier: the larger the number, the longer the time. Therefore,\n\t\t// it is opposite of the percentage. That is, playing at 50% is actually multiplying the time by 2.\n\t\tMIDI.player.warp = (percent > 0) ? 100 / percent : 1;\n\t}\n\n\tfunction loadMidi(target, onSuccess) {\n\t\tvar dataEl = find(target, \"abcjs-data\");\n\t\tvar data = JSON.parse(dataEl.innerHTML);\n\n\t\t// See if the tempo changer is present, and use that tempo if so.\n\t\tvar timeWarp = 1;\n\t\tvar tempoEl = find(target, \"abcjs-midi-tempo\");\n\t\tif (tempoEl) {\n\t\t\t// Time warp is a multiplier: the larger the number, the longer the time. Therefore,\n\t\t\t// it is opposite of the percentage. That is, playing at 50% is actually multiplying the time by 2.\n\t\t\tvar percent = parseInt(tempoEl.value, 10);\n\t\t\tif (percent > 0)\n\t\t\t\ttimeWarp = 100 / percent;\n\t\t}\n\t\tsetCurrentMidiTune(timeWarp, data, onSuccess);\n\t}\n\n\tfunction deselectMidiControl() {\n\t\tvar otherMidi = find(document, \"abcjs-midi-current\");\n\t\tif (otherMidi) {\n\t\t\tstopCurrentlyPlayingTune();\n\t\t\tremoveClass(otherMidi, \"abcjs-midi-current\");\n\t\t\tvar otherMidiStart = find(otherMidi, \"abcjs-midi-start\");\n\t\t\tremoveClass(otherMidiStart, \"abcjs-pushed\");\n\t\t}\n\t}\n\n\tvar lastNow;\n\n\tfunction findElements(visualItems, currentTime, epsilon) {\n\n\t\tvar minIndex = 0;\n\t\tvar maxIndex = visualItems.length - 1;\n\t\tvar currentIndex;\n\t\tvar currentElement;\n\n\t\twhile (minIndex <= maxIndex) {\n\t\t\tcurrentIndex = Math.floor((minIndex + maxIndex) / 2);\n\t\t\tcurrentElement = visualItems[currentIndex];\n\n\t\t\t// A match is if the currentTime is within .1 seconds before the exact time.\n\t\t\t// We get callback events at somewhat random times, so they won't match up exactly.\n\t\t\tif (currentElement.milliseconds/1000 - epsilon < currentTime) {\n\t\t\t\tminIndex = currentIndex + 1;\n\t\t\t}\n\t\t\telse if (currentElement.milliseconds/1000 - epsilon > currentTime) {\n\t\t\t\tmaxIndex = currentIndex - 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// We have a match.\n\t\t\t\treturn currentIndex;\n\t\t\t}\n\t\t}\n\n\t\t// There was no match, so find the closest element that is less than the current time.\n\t\twhile (visualItems[currentIndex].milliseconds/1000 - epsilon >= currentTime && currentIndex > 0)\n\t\t\tcurrentIndex--;\n\t\t// If the time is way before the first element, then we're not ready to select any of them.\n\t\tif (currentIndex === 0 && visualItems[currentIndex].milliseconds/1000 - epsilon >= currentTime)\n\t\t\treturn -1;\n\t\treturn currentIndex;\n\t}\n\n\tfunction midiJsListener(position) {\n\t\t// { currentTime: in seconds, duration: total length in seconds, progress: percent between 0 and 1 }\n\t\tvar midiControl;\n\t\tif (position.duration > 0 && lastNow !== position.progress) {\n\t\t\tlastNow = position.progress;\n\t\t\tmidiControl = find(document, \"abcjs-midi-current\");\n\t\t\tif (midiControl) {\n\t\t\t\tvar startButton = find(midiControl, 'abcjs-midi-start');\n\t\t\t\tif (hasClass(startButton, 'abcjs-pushed')) {\n\t\t\t\t\tvar progressBackground = find(midiControl, \"abcjs-midi-progress-background\");\n\t\t\t\t\tvar totalWidth = progressBackground.offsetWidth;\n\t\t\t\t\tvar progressIndicator = find(midiControl, \"abcjs-midi-progress-indicator\");\n\t\t\t\t\tvar scaled = totalWidth * lastNow; // The number of pixels\n\t\t\t\t\tprogressIndicator.style.left = scaled + \"px\";\n\t\t\t\t\tvar clock = find(midiControl, \"abcjs-midi-clock\");\n\t\t\t\t\tif (clock) {\n\t\t\t\t\t\tvar seconds = Math.floor(position.currentTime);\n\t\t\t\t\t\tvar minutes = Math.floor(seconds / 60);\n\t\t\t\t\t\tseconds = seconds % 60;\n\t\t\t\t\t\tif (seconds < 10) seconds = \"0\" + seconds;\n\t\t\t\t\t\tif (minutes < 10) minutes = \" \" + minutes;\n\t\t\t\t\t\tclock.innerHTML = minutes + \":\" + seconds;\n\t\t\t\t\t}\n\t\t\t\t\tvar tempo = midiControl.abcjsQpm;\n\t\t\t\t\tif (!tempo && midiControl.abcjsTune && midiControl.abcjsTune.metaText && midiControl.abcjsTune.metaText.tempo)\n\t\t\t\t\t\ttempo = midiControl.abcjsTune.metaText.tempo.bpm;\n\t\t\t\t\tif (!tempo)\n\t\t\t\t\t\ttempo = 180;\n\t\t\t\t\tvar beatsPerSecond = parseInt(tempo, 10) / 60;\n\t\t\t\t\tvar currentTime = position.currentTime;\n\t\t\t\t\tif (midiControl.abcjsListener) {\n\t\t\t\t\t\tvar thisBeat = Math.floor(currentTime * beatsPerSecond);\n\t\t\t\t\t\tposition.newBeat = thisBeat !== midiControl.abcjsLastBeat;\n\t\t\t\t\t\tposition.thisBeat = thisBeat;\n\t\t\t\t\t\tmidiControl.abcjsLastBeat = thisBeat;\n\t\t\t\t\t\tmidiControl.abcjsListener(midiControl, position, midiControl.abcjsContext);\n\t\t\t\t\t}\n\t\t\t\t\tif (midiControl.abcjsAnimate) {\n\t\t\t\t\t\tvar epsilon = beatsPerSecond / 64; // pick a small division to round to. This is called at small, random times.\n\t\t\t\t\t\tvar index = findElements(midiControl.abcjsTune.noteTimings, currentTime, epsilon);\n\t\t\t\t\t\tif (index !== midiControl.abcjsLastIndex) {\n\t\t\t\t\t\t\tvar last = midiControl.abcjsLastIndex >= 0 ? midiControl.abcjsTune.noteTimings[midiControl.abcjsLastIndex] : null;\n\t\t\t\t\t\t\tmidiControl.abcjsAnimate(last,\n\t\t\t\t\t\t\t\tmidiControl.abcjsTune.noteTimings[index], midiControl.abcjsContext);\n\t\t\t\t\t\t\tmidiControl.abcjsLastIndex = index;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (position.progress === 1) {\n\t\t\t// The playback is stopping. We need to either indicate that\n\t\t\t// it has stopped, or start over at the beginning.\n\t\t\tmidiControl = find(document, \"abcjs-midi-current\");\n\t\t\tvar loopControl = find(midiControl, \"abcjs-midi-loop\");\n\n\t\t\tvar finishedResetting = function() {\n\t\t\t\tif (loopControl && hasClass(loopControl, \"abcjs-pushed\")) {\n\t\t\t\t\tonStart(find(midiControl, \"abcjs-midi-start\"));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// midi.js is not quite finished: it still will process the last event, so we wait a minimum amount of time\n\t\t\t// before doing another action.\n\t\t\tsetTimeout(function() {\n\t\t\t\tdoReset(midiControl, finishedResetting);\n\t\t\t\tif (midiControl && midiControl.abcjsAnimate)\n\t\t\t\t\tmidiControl.abcjsAnimate(midiControl.abcjsTune.noteTimings[midiControl.abcjsLastIndex], null, midiControl.abcjsContext);\n\t\t\t}, 1);\n\t\t}\n\t}\n\n\tfunction onStart(target) {\n\t\tvar parent = closest(target, \"abcjs-inline-midi\");\n\t\t// If this midi is already playing,\n\t\tif (hasClass(target, 'abcjs-pushed')) {\n\t\t\t// Stop it.\n\t\t\tpauseCurrentlyPlayingTune();\n\t\t\t// Change the element so that the start icon is shown.\n\t\t\tremoveClass(target, \"abcjs-pushed\");\n\t\t} else { // Else,\n\t\t\t// If some other midi is running, turn it off.\n\n\t\t\t// If this is the current midi, just continue.\n\t\t\tif (hasClass(parent, \"abcjs-midi-current\"))\n\t\t\t// Start this tune playing from wherever it had stopped.\n\t\t\t\tstartCurrentlySelectedTune();\n\t\t\telse {\n\t\t\t\tdeselectMidiControl();\n\n\t\t\t\t// else, load this midi from scratch.\n\t\t\t\tvar onSuccess = function() {\n\t\t\t\t\tstartCurrentlySelectedTune();\n\t\t\t\t\tremoveClass(target, \"abcjs-loading\");\n\t\t\t\t\taddClass(parent, 'abcjs-midi-current');\n\t\t\t\t};\n\t\t\t\taddClass(target, \"abcjs-loading\");\n\t\t\t\tloadMidi(parent, onSuccess);\n\t\t\t}\n\t\t\t// Change the element so that the pause icon is shown.\n\t\t\taddClass(target, \"abcjs-pushed\");\n\t\t}\n\t\t// This replaces the old callback. It really only needs to be called once, but it doesn't hurt to set it every time.\n\t\tparent.abcjsLastBeat = -1;\n\t\tparent.abcjsLastIndex = -1;\n\t\tsetMidiCallback(midiJsListener);\n\t}\n\n\tmidi.startPlaying = function(target) {\n\t\t// This can be called with the target being entire control, and if so, first find the start button.\n\t\tvar btn = target;\n\t\tif (hasClass(target, \"abcjs-inline-midi\"))\n\t\t\tbtn = target.querySelector('.abcjs-midi-start');\n\t\tonStart(btn);\n\t};\n\n\tmidi.stopPlaying = function() {\n\t\tstopCurrentlyPlayingTune();\n\t\tvar playingEl = document.querySelector(\".abcjs-midi-current\");\n\t\tif (playingEl) {\n\t\t\tresetProgress(playingEl);\n\t\t\tvar startBtn = find(playingEl, \"abcjs-midi-start\");\n\t\t\tif (startBtn)\n\t\t\t\tremoveClass(startBtn, \"abcjs-pushed\");\n\t\t}\n\t};\n\tmidi.restartPlaying = function() {\n\t\tvar target = document.querySelector(\".abcjs-midi-current\");\n\t\tonReset(target);\n\t};\n\n\tmidi.setLoop = function(target, state) {\n\t\tvar loop = target.querySelector('.abcjs-midi-loop');\n\t\tif (!loop)\n\t\t\treturn;\n\t\tif (state)\n\t\t\taddClass(loop, 'abcjs-pushed');\n\t\telse\n\t\t\tremoveClass(loop, 'abcjs-pushed');\n\t};\n\n\tmidi.setRandomProgress = function(percent) {\n\t\tvar target = document.querySelector(\".abcjs-midi-current\");\n\t\tvar playEl = find(target, \"abcjs-midi-start\");\n\t\tvar play = hasClass(playEl, \"abcjs-pushed\");\n\t\tvar endTime = MIDI.player.duration;\n\t\tif (play)\n\t\t\tpauseCurrentlyPlayingTune();\n\t\tMIDI.player.currentTime = endTime * percent;\n\t\tif (play)\n\t\t\tstartCurrentlySelectedTune();\n\t};\n\n\tfunction resetProgress(parent) {\n\t\tvar progressIndicator = find(parent, \"abcjs-midi-progress-indicator\");\n\t\tprogressIndicator.style.left = \"0px\";\n\t\tvar clock = find(parent, \"abcjs-midi-clock\");\n\t\tclock.innerHTML = \" 0:00\";\n\t}\n\n\tfunction onSelection(target) {\n\t\ttoggleClass(target, 'abcjs-pushed');\n\t}\n\n\tfunction onLoop(target) {\n\t\ttoggleClass(target, 'abcjs-pushed');\n\t}\n\n\tfunction doReset(target, callback) {\n\t\tvar parent = closest(target, \"abcjs-inline-midi\");\n\n\t\tfunction onSuccess() {\n\t\t\taddClass(parent, 'abcjs-midi-current');\n\t\t\tresetProgress(parent);\n\t\t\tif (callback)\n\t\t\t\tcallback();\n\t\t}\n\n\t\t// If the tune is playing, stop it.\n\t\tdeselectMidiControl();\n\t\tif (parent) // parent can be null if the music was changed while the midi is playing. This is called to stop it, but the object is already gone.\n\t\t\tloadMidi(parent, onSuccess);\n\t}\n\n\tfunction onReset(target) {\n\t\tvar parent = closest(target, \"abcjs-inline-midi\");\n\t\tvar playEl = find(parent, \"abcjs-midi-start\");\n\t\tvar play = hasClass(playEl, \"abcjs-pushed\");\n\t\tfunction keepPlaying() {\n\t\t\tif (play) {\n\t\t\t\tstartCurrentlySelectedTune();\n\t\t\t\taddClass(playEl, 'abcjs-pushed');\n\t\t\t}\n\t\t}\n\t\tif (hasClass(parent, \"abcjs-midi-current\")) // Only listen to the reset for the currently playing tune.\n\t\t\tdoReset(target, keepPlaying);\n\t}\n\n\tfunction relMouseX(target, event) {\n\t\tvar totalOffsetX = 0;\n\n\t\tdo {\n\t\t\ttotalOffsetX += target.offsetLeft - target.scrollLeft;\n\t\t\ttarget = target.offsetParent;\n\t\t}\n\t\twhile (target);\n\n\t\treturn event.pageX - totalOffsetX;\n\t}\n\n\tfunction onProgress(target, event) {\n\t\tvar parent = closest(target, \"abcjs-inline-midi\");\n\t\tif (hasClass(parent, \"abcjs-midi-current\")) {\n\t\t\tvar play = find(parent, \"abcjs-midi-start\");\n\t\t\tplay = hasClass(play, \"abcjs-pushed\");\n\t\t\tvar width = target.offsetWidth;\n\t\t\tvar offset = relMouseX(target, event);\n\t\t\tjumpToMidiPosition(play, offset, width);\n\t\t}\n\t}\n\n\tfunction onTempo(el) {\n\t\tvar percent = parseInt(el.value, 10);\n\t\tvar startTempo = parseInt(el.getAttribute(\"data-start-tempo\"), 10);\n\n\t\twhile (el && !hasClass(el, 'abcjs-midi-current-tempo')) {\n\t\t\tel = el.nextSibling;\n\t\t}\n\t\tel.innerHTML = Math.floor(percent * startTempo / 100);\n\t\tsetTimeWarp(percent);\n\t}\n\n\tfunction addDelegates() {\n\t\tdocument.body.addEventListener(\"click\", function(event) {\n\t\t\tevent = event || window.event;\n\t\t\tvar target = event.target || event.srcElement;\n\t\t\twhile (target && target !== document.body) {\n\t\t\t\tif (hasClass(target, 'abcjs-midi-start')) {\n\t\t\t\t\tonStart(target, event);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (hasClass(target, 'abcjs-midi-selection')) {\n\t\t\t\t\tonSelection(target, event);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (hasClass(target, 'abcjs-midi-loop')) {\n\t\t\t\t\tonLoop(target, event);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (hasClass(target, 'abcjs-midi-reset')) {\n\t\t\t\t\tonReset(target, event);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (hasClass(target, 'abcjs-midi-progress-background')) {\n\t\t\t\t\tonProgress(target, event);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttarget = target.parentNode;\n\t\t\t}\n\t\t});\n\t\tdocument.body.addEventListener(\"change\", function(event) {\n\t\t\tevent = event || window.event;\n\t\t\tvar target = event.target || event.srcElement;\n\t\t\twhile (target !== document.body) {\n\t\t\t\tif (hasClass(target, 'abcjs-midi-tempo'))\n\t\t\t\t\tonTempo(target, event);\n\t\t\t\ttarget = target.parentNode;\n\t\t\t}\n\t\t});\n\t\tif (window.MIDI === undefined) {\n\t\t\tmidi.midiInlineInitialized = 'not loaded';\n\t\t\tvar els = document.getElementsByClassName('abcjs-inline-midi');\n\t\t\tfor (var i = 0; i < els.length; i++)\n\t\t\t\tels[i].innerHTML = \"MIDI NOT PRESENT\";\n\t\t}\n\t}\n\n\taddLoadEvent(addDelegates);\n\n})();\n\nmodule.exports = midi;\n"]},"metadata":{},"sourceType":"script"}