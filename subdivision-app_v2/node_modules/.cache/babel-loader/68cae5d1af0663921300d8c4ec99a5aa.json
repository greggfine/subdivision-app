{"ast":null,"code":"var _jsxFileName = \"/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Answers.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { shuffle } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport uuid from \"uuid\";\nimport { handleCorrectAnswer, handleWrongAnswer } from \"../actions/handleAnswers\";\nimport { handlePlayNext } from \"../actions/handlePlayNext\";\nimport { Button } from \"semantic-ui-react\";\nimport Abcjs from \"react-abc\";\n\nconst Answers = ({\n  questions,\n  handleCorrectAnswer,\n  handleWrongAnswer,\n  handlePlayNext,\n  playNext\n}) => {\n  const generateBtns = () => shuffle([React.createElement(Button, {\n    key: uuid(),\n    onClick: () => {\n      handleCorrectAnswer();\n      handlePlayNext();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Abcjs, {\n    notation: playNext[0],\n    parserParams: {} // engraverParams={{ responsive: \"resize\" }}\n    ,\n    renderParams: {\n      viewportHorizontal: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(Button, {\n    key: uuid(),\n    onClick: () => {\n      handleWrongAnswer();\n      handlePlayNext();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Abcjs, {\n    notation: playNext[1],\n    parserParams: {} // engraverParams={{ responsive: \"resize\" }}\n    ,\n    renderParams: {\n      viewportHorizontal: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))]);\n\n  return React.createElement(\"div\", {\n    className: \"answers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"answer-btns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, generateBtns().map(button => button)));\n};\n\nconst mapStateToProps = state => ({\n  questions: state.questions,\n  playNext: state.playNext\n});\n\nexport default connect(mapStateToProps, {\n  handleCorrectAnswer,\n  handleWrongAnswer,\n  handlePlayNext\n})(Answers);\nAnswers.propTypes = {\n  handleCorrectAnswer: PropTypes.func,\n  handleWrongAnswer: PropTypes.func,\n  handlePlayNext: PropTypes.func\n};\n/* \nStart Game, what happends onClick----   startGame === true\nWe've got \"QUESTIONS\" which autoPlays audio\n\n*/","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Answers.jsx"],"names":["React","connect","shuffle","PropTypes","uuid","handleCorrectAnswer","handleWrongAnswer","handlePlayNext","Button","Abcjs","Answers","questions","playNext","generateBtns","viewportHorizontal","map","button","mapStateToProps","state","propTypes","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SACEC,mBADF,EAEEC,iBAFF,QAGO,0BAHP;AAIA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,WAAlB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,SADe;AAEfN,EAAAA,mBAFe;AAGfC,EAAAA,iBAHe;AAIfC,EAAAA,cAJe;AAKfK,EAAAA;AALe,CAAD,KAMV;AACJ,QAAMC,YAAY,GAAG,MACnBX,OAAO,CAAC,CACN,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEE,IAAI,EADX;AAEE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,mBAAmB;AACnBE,MAAAA,cAAc;AACf,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAEK,QAAQ,CAAC,CAAD,CADpB;AAEE,IAAA,YAAY,EAAE,EAFhB,CAGE;AAHF;AAIE,IAAA,YAAY,EAAE;AAAEE,MAAAA,kBAAkB,EAAE;AAAtB,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADM,EAeN,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEV,IAAI,EADX;AAEE,IAAA,OAAO,EAAE,MAAM;AACbE,MAAAA,iBAAiB;AACjBC,MAAAA,cAAc;AACf,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAEK,QAAQ,CAAC,CAAD,CADpB;AAEE,IAAA,YAAY,EAAE,EAFhB,CAGE;AAHF;AAIE,IAAA,YAAY,EAAE;AAAEE,MAAAA,kBAAkB,EAAE;AAAtB,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAfM,CAAD,CADT;;AA+BA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BD,YAAY,GAAGE,GAAf,CAAmBC,MAAM,IAAIA,MAA7B,CAA9B,CADF,CADF;AAKD,CA3CD;;AA6CA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,SAAS,EAAEO,KAAK,CAACP,SADe;AAEhCC,EAAAA,QAAQ,EAAEM,KAAK,CAACN;AAFgB,CAAL,CAA7B;;AAKA,eAAeX,OAAO,CAACgB,eAAD,EAAkB;AACtCZ,EAAAA,mBADsC;AAEtCC,EAAAA,iBAFsC;AAGtCC,EAAAA;AAHsC,CAAlB,CAAP,CAIZG,OAJY,CAAf;AAMAA,OAAO,CAACS,SAAR,GAAoB;AAClBd,EAAAA,mBAAmB,EAAEF,SAAS,CAACiB,IADb;AAElBd,EAAAA,iBAAiB,EAAEH,SAAS,CAACiB,IAFX;AAGlBb,EAAAA,cAAc,EAAEJ,SAAS,CAACiB;AAHR,CAApB;AAMA","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { shuffle } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport uuid from \"uuid\";\nimport {\n  handleCorrectAnswer,\n  handleWrongAnswer\n} from \"../actions/handleAnswers\";\nimport { handlePlayNext } from \"../actions/handlePlayNext\";\nimport { Button } from \"semantic-ui-react\";\nimport Abcjs from \"react-abc\";\n\nconst Answers = ({\n  questions,\n  handleCorrectAnswer,\n  handleWrongAnswer,\n  handlePlayNext,\n  playNext\n}) => {\n  const generateBtns = () =>\n    shuffle([\n      <Button\n        key={uuid()}\n        onClick={() => {\n          handleCorrectAnswer();\n          handlePlayNext();\n        }}\n      >\n        <Abcjs\n          notation={playNext[0]}\n          parserParams={{}}\n          // engraverParams={{ responsive: \"resize\" }}\n          renderParams={{ viewportHorizontal: true }}\n        />\n      </Button>,\n      <Button\n        key={uuid()}\n        onClick={() => {\n          handleWrongAnswer();\n          handlePlayNext();\n        }}\n      >\n        <Abcjs\n          notation={playNext[1]}\n          parserParams={{}}\n          // engraverParams={{ responsive: \"resize\" }}\n          renderParams={{ viewportHorizontal: true }}\n        />\n      </Button>\n    ]);\n  return (\n    <div className=\"answers\">\n      <div className=\"answer-btns\">{generateBtns().map(button => button)}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  questions: state.questions,\n  playNext: state.playNext\n});\n\nexport default connect(mapStateToProps, {\n  handleCorrectAnswer,\n  handleWrongAnswer,\n  handlePlayNext\n})(Answers);\n\nAnswers.propTypes = {\n  handleCorrectAnswer: PropTypes.func,\n  handleWrongAnswer: PropTypes.func,\n  handlePlayNext: PropTypes.func\n};\n\n/* \nStart Game, what happends onClick----   startGame === true\nWe've got \"QUESTIONS\" which autoPlays audio\n\n*/\n"]},"metadata":{},"sourceType":"module"}