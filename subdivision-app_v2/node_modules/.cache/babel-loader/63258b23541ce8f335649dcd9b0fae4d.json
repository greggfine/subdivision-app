{"ast":null,"code":"var _jsxFileName = \"/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Question.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRandQuestion } from \"../actions/getRandQuestionAction\";\nimport { Button, Popup } from \"semantic-ui-react\";\nimport { shuffle } from \"lodash\";\nimport loop3 from \"../audio/loop3.mp3\"; // const startTimes = [\"00.00\", \"05.00\", \"10.10\", \"15.30\"];\n// const endTimes = [\"04.85\", \"09.90\", \"15.10\", \"20.30\"];\n\nconst startStopTimes = [{\n  start: \"00.00\",\n  stop: \"04.85\"\n}, {\n  start: \"05.00\",\n  stop: \"09.90\"\n}, {\n  start: \"10.10\",\n  stop: \"15.10\"\n}, {\n  start: \"15.30\",\n  stop: \"20.30\"\n}];\n\nconst Question = ({\n  questions,\n  getRandQuestion\n}) => {\n  return React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    content: \"Listen to the accented notes\",\n    trigger: React.createElement(\"img\", {\n      src: questions[\"correctAnswer\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => getRandQuestion(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Get Random Question\"));\n};\n\nconst mapStateToProps = state => ({\n  questions: state.questions\n});\n\nexport default connect(mapStateToProps, {\n  getRandQuestion\n})(Question);","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Question.jsx"],"names":["React","connect","getRandQuestion","Button","Popup","shuffle","loop3","startStopTimes","start","stop","Question","questions","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;AACA;;AAEA,MAAMC,cAAc,GAAG,CACrB;AAAEC,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CADqB,EAErB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAFqB,EAGrB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAHqB,EAIrB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAJqB,CAAvB;;AAOA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaT,EAAAA;AAAb,CAAD,KAAoC;AACnD,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAC,8BADV;AAEE,IAAA,OAAO,EAAE;AAAK,MAAA,GAAG,EAAES,SAAS,CAAC,eAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMT,eAAe,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAXF,CADF;AAeD,CAhBD;;AAkBA,MAAMU,eAAe,GAAGC,KAAK,KAAK;AAChCF,EAAAA,SAAS,EAAEE,KAAK,CAACF;AADe,CAAL,CAA7B;;AAIA,eAAeV,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAA8CQ,QAA9C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRandQuestion } from \"../actions/getRandQuestionAction\";\nimport { Button, Popup } from \"semantic-ui-react\";\nimport { shuffle } from \"lodash\";\n\nimport loop3 from \"../audio/loop3.mp3\";\n\n// const startTimes = [\"00.00\", \"05.00\", \"10.10\", \"15.30\"];\n// const endTimes = [\"04.85\", \"09.90\", \"15.10\", \"20.30\"];\n\nconst startStopTimes = [\n  { start: \"00.00\", stop: \"04.85\" },\n  { start: \"05.00\", stop: \"09.90\" },\n  { start: \"10.10\", stop: \"15.10\" },\n  { start: \"15.30\", stop: \"20.30\" }\n];\n\nconst Question = ({ questions, getRandQuestion }) => {\n  return (\n    <div className=\"question\">\n      <Popup\n        content=\"Listen to the accented notes\"\n        trigger={<img src={questions[\"correctAnswer\"]}></img>}\n      />\n      {/* <audio\n        src={`${loop3}#t=00:00:${startTimes[3]},00:00:${endTimes[3]}`}\n        autoPlay={true}\n        type=\"audio/mp3\"\n      ></audio> */}\n\n      <Button onClick={() => getRandQuestion()}>Get Random Question</Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  questions: state.questions\n});\n\nexport default connect(mapStateToProps, { getRandQuestion })(Question);\n"]},"metadata":{},"sourceType":"module"}