{"ast":null,"code":"var _jsxFileName = \"/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Answers.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { shuffle } from \"lodash\";\nimport uuid from \"uuid\";\nimport { handleCorrectAnswer, handleWrongAnswer } from \"../actions/handleAnswers\";\nimport { handlePlayNext } from \"../actions/handlePlayNext\";\nimport { Button } from \"semantic-ui-react\";\n\nconst Answers = ({\n  questions,\n  handleCorrectAnswer,\n  handleWrongAnswer,\n  handlePlayNext\n}) => {\n  const generateBtns = () => shuffle([React.createElement(Button, {\n    key: uuid(),\n    onClick: () => {\n      handleCorrectAnswer();\n      handlePlayNext();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: questions[\"correctAnswer\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(Button, {\n    key: uuid(),\n    onClick: () => {\n      handleWrongAnswer();\n      handlePlayNext();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: questions[\"wrongAnswer\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))]);\n\n  return React.createElement(\"div\", {\n    className: \"answers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"answer-btns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, generateBtns().map(button => button)));\n};\n\nconst mapStateToProps = state => ({\n  questions: state.questions\n});\n\nexport default connect(mapStateToProps, {\n  handleCorrectAnswer,\n  handleWrongAnswer,\n  handlePlayNext\n})(Answers);","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Answers.jsx"],"names":["React","connect","shuffle","uuid","handleCorrectAnswer","handleWrongAnswer","handlePlayNext","Button","Answers","questions","generateBtns","map","button","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SACEC,mBADF,EAEEC,iBAFF,QAGO,0BAHP;AAIA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,SADe;AAEfL,EAAAA,mBAFe;AAGfC,EAAAA,iBAHe;AAIfC,EAAAA;AAJe,CAAD,KAKV;AACJ,QAAMI,YAAY,GAAG,MACnBR,OAAO,CAAC,CACN,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEC,IAAI,EADX;AAEE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,mBAAmB;AACnBE,MAAAA,cAAc;AACf,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAK,IAAA,GAAG,EAAEG,SAAS,CAAC,eAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADM,EAUN,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEN,IAAI,EADX;AAEE,IAAA,OAAO,EAAE,MAAM;AACbE,MAAAA,iBAAiB;AACjBC,MAAAA,cAAc;AACf,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAK,IAAA,GAAG,EAAEG,SAAS,CAAC,aAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAVM,CAAD,CADT;;AAqBA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BC,YAAY,GAAGC,GAAf,CAAmBC,MAAM,IAAIA,MAA7B,CAA9B,CADF,CADF;AAKD,CAhCD;;AAkCA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,SAAS,EAAEK,KAAK,CAACL;AADe,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CAACY,eAAD,EAAkB;AACtCT,EAAAA,mBADsC;AAEtCC,EAAAA,iBAFsC;AAGtCC,EAAAA;AAHsC,CAAlB,CAAP,CAIZE,OAJY,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { shuffle } from \"lodash\";\nimport uuid from \"uuid\";\nimport {\n  handleCorrectAnswer,\n  handleWrongAnswer\n} from \"../actions/handleAnswers\";\nimport { handlePlayNext } from \"../actions/handlePlayNext\";\nimport { Button } from \"semantic-ui-react\";\n\nconst Answers = ({\n  questions,\n  handleCorrectAnswer,\n  handleWrongAnswer,\n  handlePlayNext\n}) => {\n  const generateBtns = () =>\n    shuffle([\n      <Button\n        key={uuid()}\n        onClick={() => {\n          handleCorrectAnswer();\n          handlePlayNext();\n        }}\n      >\n        <img src={questions[\"correctAnswer\"]} />\n      </Button>,\n      <Button\n        key={uuid()}\n        onClick={() => {\n          handleWrongAnswer();\n          handlePlayNext();\n        }}\n      >\n        <img src={questions[\"wrongAnswer\"]} />\n      </Button>\n    ]);\n  return (\n    <div className=\"answers\">\n      <div className=\"answer-btns\">{generateBtns().map(button => button)}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  questions: state.questions\n});\n\nexport default connect(mapStateToProps, {\n  handleCorrectAnswer,\n  handleWrongAnswer,\n  handlePlayNext\n})(Answers);\n"]},"metadata":{},"sourceType":"module"}