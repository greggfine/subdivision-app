{"ast":null,"code":"var _jsxFileName = \"/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Question.jsx\";\nimport React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRandQuestion } from \"../actions/getRandQuestionAction\";\nimport { Button, Popup } from \"semantic-ui-react\";\nimport { shuffle } from \"lodash\"; // \"ref\": gives you access to underlying DOM element\n\nimport loop3 from \"../audio/loop3.mp3\";\nconst startStopTimes = [{\n  start: \"00.00\",\n  stop: \"04.85\"\n}, {\n  start: \"05.00\",\n  stop: \"09.90\"\n}, {\n  start: \"10.10\",\n  stop: \"15.10\"\n}, {\n  start: \"15.30\",\n  stop: \"20.30\"\n}];\nconst shuffledStartStopTimes = shuffle(startStopTimes);\nlet count = 0;\n\nconst Question = ({\n  questions,\n  getRandQuestion\n}) => {\n  useEffect(() => {\n    console.log(shuffledStartStopTimes);\n  });\n  const audioRef = useRef();\n\n  const playAudio = () => {\n    audioRef.current.play();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    content: \"Listen to the accented notes\",\n    trigger: React.createElement(\"img\", {\n      src: questions[\"correctAnswer\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"audio\", {\n    src: `${loop3}#t=00:00:${shuffledStartStopTimes[count].start},00:00:${shuffledStartStopTimes[count].stop}`,\n    type: \"audio/mp3\",\n    ref: audioRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => {\n      getRandQuestion();\n      count++;\n      playAudio();\n      console.log(audioRef.current);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Get Random Question\"));\n};\n\nconst mapStateToProps = state => ({\n  questions: state.questions\n});\n\nexport default connect(mapStateToProps, {\n  getRandQuestion\n})(Question);\n/* \n\nWHAT AM I TRYING TO DO???\n    I have an array of objects(start/stop times) that I am shuffling\n    As long as I'm on this component, the shuffledArray remains the same\n    Each time I click an answer, the array number should increment + 1\n*/","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Question.jsx"],"names":["React","useEffect","useRef","connect","getRandQuestion","Button","Popup","shuffle","loop3","startStopTimes","start","stop","shuffledStartStopTimes","count","Question","questions","console","log","audioRef","playAudio","current","play","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,SAASC,OAAT,QAAwB,QAAxB,C,CAEA;;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,cAAc,GAAG,CACrB;AAAEC,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CADqB,EAErB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAFqB,EAGrB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAHqB,EAIrB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAJqB,CAAvB;AAOA,MAAMC,sBAAsB,GAAGL,OAAO,CAACE,cAAD,CAAtC;AAEA,IAAII,KAAK,GAAG,CAAZ;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaX,EAAAA;AAAb,CAAD,KAAoC;AACnDH,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAYL,sBAAZ;AACD,GAFQ,CAAT;AAGA,QAAMM,QAAQ,GAAGhB,MAAM,EAAvB;;AAEA,QAAMiB,SAAS,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,IAAjB;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAC,8BADV;AAEE,IAAA,OAAO,EAAE;AAAK,MAAA,GAAG,EAAEN,SAAS,CAAC,eAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AACE,IAAA,GAAG,EAAG,GAAEP,KAAM,YAAWI,sBAAsB,CAACC,KAAD,CAAtB,CAA8BH,KAAM,UAASE,sBAAsB,CAACC,KAAD,CAAtB,CAA8BF,IAAK,EAD3G;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,GAAG,EAAEO,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAWE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbd,MAAAA,eAAe;AACfS,MAAAA,KAAK;AACLM,MAAAA,SAAS;AACTH,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACE,OAArB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAXF,CADF;AAwBD,CAlCD;;AAoCA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCR,EAAAA,SAAS,EAAEQ,KAAK,CAACR;AADe,CAAL,CAA7B;;AAIA,eAAeZ,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAA8CU,QAA9C,CAAf;AAEA","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRandQuestion } from \"../actions/getRandQuestionAction\";\nimport { Button, Popup } from \"semantic-ui-react\";\nimport { shuffle } from \"lodash\";\n\n// \"ref\": gives you access to underlying DOM element\n\nimport loop3 from \"../audio/loop3.mp3\";\n\nconst startStopTimes = [\n  { start: \"00.00\", stop: \"04.85\" },\n  { start: \"05.00\", stop: \"09.90\" },\n  { start: \"10.10\", stop: \"15.10\" },\n  { start: \"15.30\", stop: \"20.30\" }\n];\n\nconst shuffledStartStopTimes = shuffle(startStopTimes);\n\nlet count = 0;\n\nconst Question = ({ questions, getRandQuestion }) => {\n  useEffect(() => {\n    console.log(shuffledStartStopTimes);\n  });\n  const audioRef = useRef();\n\n  const playAudio = () => {\n    audioRef.current.play();\n  };\n\n  return (\n    <div className=\"question\">\n      <Popup\n        content=\"Listen to the accented notes\"\n        trigger={<img src={questions[\"correctAnswer\"]}></img>}\n      />\n      <audio\n        src={`${loop3}#t=00:00:${shuffledStartStopTimes[count].start},00:00:${shuffledStartStopTimes[count].stop}`}\n        type=\"audio/mp3\"\n        ref={audioRef}\n      ></audio>\n\n      <Button\n        onClick={() => {\n          getRandQuestion();\n          count++;\n          playAudio();\n          console.log(audioRef.current);\n        }}\n      >\n        Get Random Question\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  questions: state.questions\n});\n\nexport default connect(mapStateToProps, { getRandQuestion })(Question);\n\n/* \n\nWHAT AM I TRYING TO DO???\n    I have an array of objects(start/stop times) that I am shuffling\n    As long as I'm on this component, the shuffledArray remains the same\n    Each time I click an answer, the array number should increment + 1\n*/\n"]},"metadata":{},"sourceType":"module"}