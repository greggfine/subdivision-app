{"ast":null,"code":"var _jsxFileName = \"/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Question.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRandQuestion } from \"../actions/getRandQuestionAction\";\nimport { Button, Popup } from \"semantic-ui-react\";\nimport loop3 from \"../audio/loop3.mp3\";\n\nconst Question = ({\n  questions,\n  getRandQuestion,\n  playNext\n}) => {\n  return React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    content: \"Listen to the accented notes\",\n    trigger: React.createElement(\"img\", {\n      src: questions[\"correctAnswer\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"audio\", {\n    src: `${loop3}#t=00:00:${playNext.start},00:00:${playNext.stop}`,\n    type: \"audio/mp3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => {\n      getRandQuestion();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Get Random Question\"));\n};\n\nconst mapStateToProps = state => ({\n  questions: state.questions,\n  playNext: state.playNext\n});\n\nexport default connect(mapStateToProps, {\n  getRandQuestion\n})(Question);\n/* \n\nWHAT AM I TRYING TO DO???\n    I have an array of objects(start/stop times) that I am shuffling\n    As long as I'm on this component, the shuffledArray remains the same\n    Each time I click an answer, the array number should increment + 1\n*/","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Question.jsx"],"names":["React","connect","getRandQuestion","Button","Popup","loop3","Question","questions","playNext","start","stop","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaL,EAAAA,eAAb;AAA8BM,EAAAA;AAA9B,CAAD,KAA8C;AAC7D,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAC,8BADV;AAEE,IAAA,OAAO,EAAE;AAAK,MAAA,GAAG,EAAED,SAAS,CAAC,eAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AACE,IAAA,GAAG,EAAG,GAAEF,KAAM,YAAWG,QAAQ,CAACC,KAAM,UAASD,QAAQ,CAACE,IAAK,EADjE;AAEE,IAAA,IAAI,EAAC,WAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAUE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbR,MAAAA,eAAe;AAChB,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVF,CADF;AAoBD,CArBD;;AAuBA,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,SAAS,EAAEK,KAAK,CAACL,SADe;AAEhCC,EAAAA,QAAQ,EAAEI,KAAK,CAACJ;AAFgB,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CAACU,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAA8CI,QAA9C,CAAf;AAEA","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRandQuestion } from \"../actions/getRandQuestionAction\";\nimport { Button, Popup } from \"semantic-ui-react\";\n\nimport loop3 from \"../audio/loop3.mp3\";\n\nconst Question = ({ questions, getRandQuestion, playNext }) => {\n  return (\n    <div className=\"question\">\n      <Popup\n        content=\"Listen to the accented notes\"\n        trigger={<img src={questions[\"correctAnswer\"]}></img>}\n      />\n      <audio\n        src={`${loop3}#t=00:00:${playNext.start},00:00:${playNext.stop}`}\n        type=\"audio/mp3\"\n      ></audio>\n\n      <Button\n        onClick={() => {\n          getRandQuestion();\n        }}\n      >\n        Get Random Question\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  questions: state.questions,\n  playNext: state.playNext\n});\n\nexport default connect(mapStateToProps, { getRandQuestion })(Question);\n\n/* \n\nWHAT AM I TRYING TO DO???\n    I have an array of objects(start/stop times) that I am shuffling\n    As long as I'm on this component, the shuffledArray remains the same\n    Each time I click an answer, the array number should increment + 1\n*/\n"]},"metadata":{},"sourceType":"module"}