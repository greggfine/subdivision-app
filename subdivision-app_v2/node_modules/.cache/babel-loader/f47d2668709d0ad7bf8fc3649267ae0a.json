{"ast":null,"code":"var _jsxFileName = \"/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Question.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRandQuestion } from \"../actions/getRandQuestionAction\";\nimport { Button, Popup } from \"semantic-ui-react\";\nimport ReactHowler from \"react-howler\";\nimport loop3 from \"./loop3.mp3\";\n\nconst Question = ({\n  questions,\n  getRandQuestion\n}) => {\n  //   useEffect(() => {\n  //     const audioEl = document.querySelector(\"audio\");\n  //     audioEl.play();\n  //   }, []);\n  return React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    content: \"Listen to the accented notes\",\n    trigger: React.createElement(\"img\", {\n      src: questions[\"correctAnswer\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"audio\", {\n    // preload=\"auto\"\n    // src={loop3}\n    src: \"./loop3.mp3\",\n    autoPlay: true,\n    type: \"audio/mp3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => getRandQuestion(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Get Random Question\"));\n};\n\nconst mapStateToProps = state => ({\n  questions: state.questions\n});\n\nexport default connect(mapStateToProps, {\n  getRandQuestion\n})(Question);","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Question.jsx"],"names":["React","useEffect","connect","getRandQuestion","Button","Popup","ReactHowler","loop3","Question","questions","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaN,EAAAA;AAAb,CAAD,KAAoC;AACnD;AACA;AACA;AACA;AACA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAC,8BADV;AAEE,IAAA,OAAO,EAAE;AAAK,MAAA,GAAG,EAAEM,SAAS,CAAC,eAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AACE;AACA;AACA,IAAA,GAAG,EAAC,aAHN;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,IAAI,EAAC,WALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAYE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMN,eAAe,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAZF,CADF;AAgBD,CArBD;;AAuBA,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAChCF,EAAAA,SAAS,EAAEE,KAAK,CAACF;AADe,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAACQ,eAAD,EAAkB;AAAEP,EAAAA;AAAF,CAAlB,CAAP,CAA8CK,QAA9C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRandQuestion } from \"../actions/getRandQuestionAction\";\nimport { Button, Popup } from \"semantic-ui-react\";\nimport ReactHowler from \"react-howler\";\nimport loop3 from \"./loop3.mp3\";\n\nconst Question = ({ questions, getRandQuestion }) => {\n  //   useEffect(() => {\n  //     const audioEl = document.querySelector(\"audio\");\n  //     audioEl.play();\n  //   }, []);\n  return (\n    <div className=\"question\">\n      <Popup\n        content=\"Listen to the accented notes\"\n        trigger={<img src={questions[\"correctAnswer\"]}></img>}\n      />\n      <audio\n        // preload=\"auto\"\n        // src={loop3}\n        src=\"./loop3.mp3\"\n        autoPlay\n        type=\"audio/mp3\"\n      ></audio>\n      <Button onClick={() => getRandQuestion()}>Get Random Question</Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  questions: state.questions\n});\n\nexport default connect(mapStateToProps, { getRandQuestion })(Question);\n"]},"metadata":{},"sourceType":"module"}