{"ast":null,"code":"var _jsxFileName = \"/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Question.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRandQuestion } from \"../actions/getRandQuestionAction\";\nimport PropTypes from \"prop-types\";\nimport loop3 from \"../audio/loops/loop3.mp3\";\nimport { Button } from \"semantic-ui-react\";\n\nconst Question = ({\n  questions,\n  getRandQuestion,\n  playNext\n}) => {\n  let audio;\n  useEffect(() => {\n    audio = document.querySelector(\"audio\");\n    window.setTimeout(() => {\n      audio.play();\n    }, 1000);\n  }, [playNext]);\n\n  const hearLoopAgain = () => {\n    audio.play();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"?\"), React.createElement(\"audio\", {\n    src: `${loop3}#t=00:00:${playNext.startStopTimes.start},00:00:${playNext.startStopTimes.stop}`,\n    type: \"audio/mp3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: hearLoopAgain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Hear Loop Again?\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    questions: state.questions,\n    playNext: state.playNext\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getRandQuestion\n})(Question);\nQuestion.propTypes = {\n  playNext: PropTypes.object\n};","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Question.jsx"],"names":["React","useEffect","connect","getRandQuestion","PropTypes","loop3","Button","Question","questions","playNext","audio","document","querySelector","window","setTimeout","play","hearLoopAgain","startStopTimes","start","stop","mapStateToProps","state","propTypes","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaL,EAAAA,eAAb;AAA8BM,EAAAA;AAA9B,CAAD,KAA8C;AAC7D,MAAIC,KAAJ;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAR;AACAC,IAAAA,MAAM,CAACC,UAAP,CAAkB,MAAM;AACtBJ,MAAAA,KAAK,CAACK,IAAN;AACD,KAFD,EAEG,IAFH;AAGD,GALQ,EAKN,CAACN,QAAD,CALM,CAAT;;AAOA,QAAMO,aAAa,GAAG,MAAM;AAC1BN,IAAAA,KAAK,CAACK,IAAN;AACD,GAFD;;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE;AACE,IAAA,GAAG,EAAG,GAAEV,KAAM,YAAWI,QAAQ,CAACQ,cAAT,CAAwBC,KAAM,UAAST,QAAQ,CAACQ,cAAT,CAAwBE,IAAK,EAD/F;AAEE,IAAA,IAAI,EAAC,WAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,CADF;AAUD,CAtBD;;AAwBA,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLb,IAAAA,SAAS,EAAEa,KAAK,CAACb,SADZ;AAELC,IAAAA,QAAQ,EAAEY,KAAK,CAACZ;AAFX,GAAP;AAID,CALD;;AAOA,eAAeP,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA8CI,QAA9C,CAAf;AAEAA,QAAQ,CAACe,SAAT,GAAqB;AACnBb,EAAAA,QAAQ,EAAEL,SAAS,CAACmB;AADD,CAArB","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRandQuestion } from \"../actions/getRandQuestionAction\";\nimport PropTypes from \"prop-types\";\nimport loop3 from \"../audio/loops/loop3.mp3\";\nimport { Button } from \"semantic-ui-react\";\n\nconst Question = ({ questions, getRandQuestion, playNext }) => {\n  let audio;\n  useEffect(() => {\n    audio = document.querySelector(\"audio\");\n    window.setTimeout(() => {\n      audio.play();\n    }, 1000);\n  }, [playNext]);\n\n  const hearLoopAgain = () => {\n    audio.play();\n  };\n  return (\n    <div className=\"question\">\n      <h1>?</h1>\n      <audio\n        src={`${loop3}#t=00:00:${playNext.startStopTimes.start},00:00:${playNext.startStopTimes.stop}`}\n        type=\"audio/mp3\"\n      ></audio>\n      <Button onClick={hearLoopAgain}>Hear Loop Again?</Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    questions: state.questions,\n    playNext: state.playNext\n  };\n};\n\nexport default connect(mapStateToProps, { getRandQuestion })(Question);\n\nQuestion.propTypes = {\n  playNext: PropTypes.object\n};\n"]},"metadata":{},"sourceType":"module"}