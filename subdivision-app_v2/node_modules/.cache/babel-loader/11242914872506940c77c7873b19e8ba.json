{"ast":null,"code":"/*\n\t----------------------------------------------------------------------\n\tadaptors-MIDI\n\t----------------------------------------------------------------------\n\thttp://webaudio.github.io/web-midi-api/\n\t----------------------------------------------------------------------\n*/\n(function () {\n  'use strict';\n\n  var midi = MIDI.adaptors.midiapi = {};\n\n  var _context;\n\n  var _active = {};\n  var _apply = {};\n  /** connect **/\n\n  midi.connect = function (args) {\n    MIDI.adaptor.id = 'midiapi';\n    /** properties **/\n\n    defineProperties();\n    /** volume **/\n\n    _apply.volume = function (source) {\n      var channel = source._channel;\n\n      if (MIDI.mute || channel.mute) {\n        setVolume(channel.id, 0.0);\n      } else {\n        var volume = MIDI.volume * channel.volume * source._volume;\n        setVolume(channel.id, Math.min(1.0, Math.max(-1.0, volume * 2.0)));\n      }\n    };\n    /** detune **/\n\n\n    _apply.detune = function (source) {\n      var channel = source._channel;\n      var detune = MIDI.detune + channel.detune;\n\n      if (detune) {\n        setDetune(channel.id, detune); // -1200 to 1200 - value in cents [100 cents per semitone]\n      }\n    };\n\n    MIDI.setController = setController; //- depreciate\n\n    MIDI.setPitchBend = setDetune; //- depreciate\n\n    MIDI.setVolume = setVolume; //- depreciate\n\n    /** on.programChange **/\n\n    MIDI.messageHandler.program = function (channelId, program, delay) {\n      // change patch (instrument)\n      _context.send([0xC0 + channelId, program], (delay || 0) * 1000);\n    };\n    /** send **/\n\n\n    MIDI.send = function (data, delay) {\n      _context.send(data, (delay || 0) * 1000);\n    };\n    /** noteOn/Off **/\n\n\n    MIDI.noteOn = function (channelId, noteId, velocity, delay) {\n      switch (typeof noteId) {\n        case 'number':\n          return noteOn.apply(null, arguments);\n\n        case 'string':\n          break;\n\n        case 'object':\n          return noteGroupOn.apply(null, arguments);\n      }\n    };\n\n    MIDI.noteOff = function (channelId, noteId, delay) {\n      switch (typeof noteId) {\n        case 'number':\n          return noteOff.apply(null, arguments);\n\n        case 'string':\n          break;\n\n        case 'object':\n          return noteGroupOff.apply(null, arguments);\n      }\n    };\n    /** cancelNotes **/\n\n\n    MIDI.cancelNotes = function (channelId) {\n      if (isFinite(channelId)) {\n        _context.send([0xB0 + channelId, 0x7B, 0]);\n      } else {\n        _context.cancel();\n\n        for (var channelId = 0; channelId < 16; channelId++) {\n          _context.send([0xB0 + channelId, 0x7B, 0]);\n        }\n      }\n    };\n    /** connect **/\n\n\n    return new Promise(function (resolve, reject) {\n      navigator.requestMIDIAccess().then(function (e) {\n        var outputs = e.outputs;\n\n        if (outputs.size) {\n          outputs.forEach(function (context) {\n            if (context.state === 'connected' && context.type === 'input') {\n              _context = context;\n            }\n          });\n        }\n\n        if (_context == null) {\n          // no outputs\n          handleError({\n            message: 'No available outputs.'\n          });\n        } else {\n          resolve();\n        }\n      }, handleError);\n\n      function handleError(err) {\n        // well at least we tried.\n        reject && reject(err);\n      }\n    });\n  };\n  /* note */\n\n\n  function noteOn(channelId, noteId, velocity, delay) {\n    _context.send([0x90 + channelId, noteId, velocity * 127 >> 0], (delay || 0) * 1000);\n\n    _active[channelId + 'x' + noteId] = {\n      _channel: MIDI.channels[channelId],\n      _volume: velocity\n    };\n    return {\n      cancel: function () {}\n    };\n  }\n\n  function noteOff(channelId, noteId, delay) {\n    _context.send([0x80 + channelId, noteId, 0], (delay || 0) * 1000);\n\n    delete _active[channelId + 'x' + noteId];\n    return {\n      cancel: function () {}\n    };\n  }\n\n  function noteGroupOn(channelId, group, velocity, delay) {\n    for (var i = 0; i < group.length; i++) {\n      _context.send([0x90 + channelId, group[i], velocity], (delay || 0) * 1000);\n    }\n  }\n\n  function noteGroupOff(channelId, group, delay) {\n    for (var i = 0; i < group.length; i++) {\n      _context.send([0x80 + channelId, group[i], 0], (delay || 0) * 1000);\n    }\n  }\n  /* properties */\n\n\n  function setController(channelId, type, value, delay) {\n    _context.send([channelId, type, value], (delay || 0) * 1000);\n  }\n\n  function setDetune(channelId, pitch, delay) {\n    _context.send([0xE0 + channelId, pitch], (delay || 0) * 1000);\n  }\n\n  function setVolume(channelId, volume, delay) {\n    _context.send([0xB0 + channelId, 0x07, volume], (delay || 0) * 1000);\n  }\n  /** define properties **/\n\n\n  function defineProperties() {\n    Object.defineProperties(MIDI, {\n      'context': {\n        configurable: true,\n        set: function (context) {\n          _context = context;\n        },\n        get: function () {\n          return _context;\n        }\n      },\n\n      /* effects */\n      'detune': set('number', 0, handler('detune')),\n      'mute': set('boolean', false, handler('volume')),\n      'volume': set('number', 1.0, handler('volume'))\n    });\n\n    function set(_format, _value, _handler) {\n      return {\n        configurable: true,\n        get: function () {\n          return _value;\n        },\n        set: function (value) {\n          if (typeof value === _format) {\n            _value = value;\n            _handler && _handler();\n          }\n        }\n      };\n    }\n\n    function handler(type) {\n      return function () {\n        for (var sourceId in _active) {\n          _apply[type](_active[sourceId]);\n        }\n      };\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/node_modules/midi/js/adaptors-MIDI.js"],"names":["midi","MIDI","adaptors","midiapi","_context","_active","_apply","connect","args","adaptor","id","defineProperties","volume","source","channel","_channel","mute","setVolume","_volume","Math","min","max","detune","setDetune","setController","setPitchBend","messageHandler","program","channelId","delay","send","data","noteOn","noteId","velocity","apply","arguments","noteGroupOn","noteOff","noteGroupOff","cancelNotes","isFinite","cancel","Promise","resolve","reject","navigator","requestMIDIAccess","then","e","outputs","size","forEach","context","state","type","handleError","message","err","channels","group","i","length","value","pitch","Object","configurable","set","get","handler","_format","_value","_handler","sourceId"],"mappings":"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","sourcesContent":["/*\n\t----------------------------------------------------------------------\n\tadaptors-MIDI\n\t----------------------------------------------------------------------\n\thttp://webaudio.github.io/web-midi-api/\n\t----------------------------------------------------------------------\n*/\n\n(function() { 'use strict';\n\n\tvar midi = MIDI.adaptors.midiapi = {};\n\t\n\tvar _context;\n\tvar _active = {};\n\tvar _apply = {};\n\n\t/** connect **/\n\tmidi.connect = function(args) {\n\n\t\tMIDI.adaptor.id = 'midiapi';\n\n\n\t\t/** properties **/\n\t\tdefineProperties();\n\n\n\t\t/** volume **/\n\t\t_apply.volume = function(source) {\n\t\t\tvar channel = source._channel;\n\t\t\tif (MIDI.mute || channel.mute) {\n\t\t\t\tsetVolume(channel.id, 0.0);\n\t\t\t} else {\n\t\t\t\tvar volume = MIDI.volume * channel.volume * source._volume;\n\t\t\t\tsetVolume(channel.id, Math.min(1.0, Math.max(-1.0, volume * 2.0)));\n\t\t\t}\n\t\t};\n\n\n\t\t/** detune **/\n\t\t_apply.detune = function(source) {\n\t\t\tvar channel = source._channel;\n\t\t\tvar detune = MIDI.detune + channel.detune;\n\t\t\tif (detune) {\n\t\t\t\tsetDetune(channel.id, detune); // -1200 to 1200 - value in cents [100 cents per semitone]\n\t\t\t}\n\t\t};\n\n\n\t\tMIDI.setController = setController; //- depreciate\n\t\tMIDI.setPitchBend = setDetune; //- depreciate\n\t\tMIDI.setVolume = setVolume; //- depreciate\n\n\n\t\t/** on.programChange **/\n\t\tMIDI.messageHandler.program = function(channelId, program, delay) { // change patch (instrument)\n\t\t\t_context.send([0xC0 + channelId, program], (delay || 0) * 1000);\n\t\t};\n\n\n\t\t/** send **/\n\t\tMIDI.send = function(data, delay) {\n\t\t\t_context.send(data, (delay || 0) * 1000);\n\t\t};\n\n\n\t\t/** noteOn/Off **/\n\t\tMIDI.noteOn = function(channelId, noteId, velocity, delay) {\n\t\t\tswitch(typeof noteId) {\n\t\t\t\tcase 'number':\n\t\t\t\t\treturn noteOn.apply(null, arguments);\n\t\t\t\tcase 'string':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\treturn noteGroupOn.apply(null, arguments);\n\t\t\t}\n\t\t};\n\n\t\tMIDI.noteOff = function(channelId, noteId, delay) {\n\t\t\tswitch(typeof noteId) {\n\t\t\t\tcase 'number':\n\t\t\t\t\treturn noteOff.apply(null, arguments);\n\t\t\t\tcase 'string':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\treturn noteGroupOff.apply(null, arguments);\n\t\t\t}\n\t\t};\n\n\n\t\t/** cancelNotes **/\n\t\tMIDI.cancelNotes = function(channelId) {\n\t\t\tif (isFinite(channelId)) {\n\t\t\t\t_context.send([0xB0 + channelId, 0x7B, 0]);\n\t\t\t} else {\n\t\t\t\t_context.cancel();\n\t\t\t\tfor (var channelId = 0; channelId < 16; channelId ++) {\n\t\t\t\t\t_context.send([0xB0 + channelId, 0x7B, 0]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\n\t\t/** connect **/\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tnavigator.requestMIDIAccess().then(function(e) {\n\t\t\t\tvar outputs = e.outputs;\n\t\t\t\tif (outputs.size) {\n\t\t\t\t\toutputs.forEach(function(context) {\n\t\t\t\t\t\tif (context.state === 'connected' && context.type === 'input') {\n\t\t\t\t\t\t\t_context = context;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (_context == null) { // no outputs\n\t\t\t\t\thandleError({\n\t\t\t\t\t\tmessage: 'No available outputs.'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}, handleError);\n\n\t\t\tfunction handleError(err) { // well at least we tried.\n\t\t\t\treject && reject(err);\n\t\t\t}\n\t\t});\n\t};\n\n\n\t/* note */\n\tfunction noteOn(channelId, noteId, velocity, delay) {\n\t\t_context.send([0x90 + channelId, noteId, velocity * 127 >> 0], (delay || 0) * 1000);\n\t\t_active[channelId + 'x' + noteId] = {\n\t\t\t_channel: MIDI.channels[channelId],\n\t\t\t_volume: velocity\n\t\t};\n\t\treturn {\n\t\t\tcancel: function() {\n\t\t\t\t\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction noteOff(channelId, noteId, delay) {\n\t\t_context.send([0x80 + channelId, noteId, 0], (delay || 0) * 1000);\n\t\tdelete _active[channelId + 'x' + noteId];\n\t\treturn {\n\t\t\tcancel: function() {\n\t\t\t\t\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction noteGroupOn(channelId, group, velocity, delay) {\n\t\tfor (var i = 0; i < group.length; i ++) {\n\t\t\t_context.send([0x90 + channelId, group[i], velocity], (delay || 0) * 1000);\n\t\t}\n\t}\n\n\tfunction noteGroupOff(channelId, group, delay) {\n\t\tfor (var i = 0; i < group.length; i ++) {\n\t\t\t_context.send([0x80 + channelId, group[i], 0], (delay || 0) * 1000);\n\t\t}\n\t}\n\n\n\t/* properties */\n\tfunction setController(channelId, type, value, delay) {\n\t\t_context.send([channelId, type, value], (delay || 0) * 1000);\n\t}\n\n\tfunction setDetune(channelId, pitch, delay) {\n\t\t_context.send([0xE0 + channelId, pitch], (delay || 0) * 1000);\n\t}\n\n\tfunction setVolume(channelId, volume, delay) {\n\t\t_context.send([0xB0 + channelId, 0x07, volume], (delay || 0) * 1000);\n\t}\n\n\n\t/** define properties **/\n\tfunction defineProperties() {\n\n\t\tObject.defineProperties(MIDI, {\n\t\t\t'context': {\n\t\t\t\tconfigurable: true,\n\t\t\t\tset: function(context) {\n\t\t\t\t\t_context = context;\n\t\t\t\t},\n\t\t\t\tget: function() {\n\t\t\t\t\treturn _context;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t/* effects */\n\t\t\t'detune': set('number', 0, handler('detune')),\n\t\t\t'mute': set('boolean', false, handler('volume')),\n\t\t\t'volume': set('number', 1.0, handler('volume'))\n\t\t});\n\t\n\t\tfunction set(_format, _value, _handler) {\n\t\t\treturn {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn _value;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tif (typeof value === _format) {\n\t\t\t\t\t\t_value = value;\n\t\t\t\t\t\t_handler && _handler();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction handler(type) {\n\t\t\treturn function() {\n\t\t\t\tfor (var sourceId in _active) {\n\t\t\t\t\t_apply[type](_active[sourceId]);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n})();"]},"metadata":{},"sourceType":"script"}