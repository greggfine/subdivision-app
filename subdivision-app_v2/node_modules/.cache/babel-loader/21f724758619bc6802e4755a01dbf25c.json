{"ast":null,"code":"var _jsxFileName = \"/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Lives.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setGameOver } from \"../actions/setGameOver\";\nimport gameOver from \"../audio/sfx/game_over.mp3\";\n\nconst playGameOver = () => {\n  const gameOver = document.getElementById(\"gameOver\");\n  gameOver.play();\n};\n\nconst Lives = ({\n  lives,\n  setGameOver\n}) => {\n  if (lives === 0) {\n    window.setTimeout(() => {\n      playGameOver();\n      setGameOver();\n    }, 5000);\n    return React.createElement(\"div\", {\n      className: \"lives\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      src: gameOver,\n      id: \"gameOver\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), \"LIVES : \", lives);\n  } else {\n    return React.createElement(\"div\", {\n      className: \"lives\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"LIVES : \", lives);\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    lives: state.lives\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setGameOver\n})(Lives);","map":{"version":3,"sources":["/Users/HTMusic/Desktop/PROJECTS/subdivision-app/subdivision-app_v2/src/components/Lives.jsx"],"names":["React","connect","setGameOver","gameOver","playGameOver","document","getElementById","play","Lives","lives","window","setTimeout","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMD,QAAQ,GAAGE,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAjB;AACAH,EAAAA,QAAQ,CAACI,IAAT;AACD,CAHD;;AAKA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASP,EAAAA;AAAT,CAAD,KAA4B;AACxC,MAAIO,KAAK,KAAK,CAAd,EAAiB;AACfC,IAAAA,MAAM,CAACC,UAAP,CAAkB,MAAM;AACtBP,MAAAA,YAAY;AACZF,MAAAA,WAAW;AACZ,KAHD,EAGG,IAHH;AAIA,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,GAAG,EAAEC,QAAZ;AAAsB,MAAA,EAAE,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,cAEWM,KAFX,CADF;AAMD,GAXD,MAWO;AACL,WAAO;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgCA,KAAhC,CAAP;AACD;AACF,CAfD;;AAgBA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLJ,IAAAA,KAAK,EAAEI,KAAK,CAACJ;AADR,GAAP;AAGD,CAJD;;AAKA,eAAeR,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAA0CM,KAA1C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setGameOver } from \"../actions/setGameOver\";\nimport gameOver from \"../audio/sfx/game_over.mp3\";\n\nconst playGameOver = () => {\n  const gameOver = document.getElementById(\"gameOver\");\n  gameOver.play();\n};\n\nconst Lives = ({ lives, setGameOver }) => {\n  if (lives === 0) {\n    window.setTimeout(() => {\n      playGameOver();\n      setGameOver();\n    }, 5000);\n    return (\n      <div className=\"lives\">\n        <audio src={gameOver} id=\"gameOver\"></audio>\n        LIVES : {lives}\n      </div>\n    );\n  } else {\n    return <div className=\"lives\">LIVES : {lives}</div>;\n  }\n};\nconst mapStateToProps = state => {\n  return {\n    lives: state.lives\n  };\n};\nexport default connect(mapStateToProps, { setGameOver })(Lives);\n"]},"metadata":{},"sourceType":"module"}